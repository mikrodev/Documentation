[{"title":"MDC100 Software Manual","type":0,"sectionRef":"#","url":"docs/Gateway-MDC100-Software-Manual","content":"MODC Gateway Configuration Software MDC100 Software Manual General Information The Assistant software is used to make all necessary settings for the Mikrodev Gateway devices. Thanks to the software, device settings can be made online and/or offline. The settings that are loaded on the device can easily be downloaded and the previously saved settings can easilly be uploaded into the device by the program. The connection between the program and the device can be established in various ways such as USB, Ethernet, GSM, Wi-Fi. For Ethernet supported devices; there is also the ability to search the network and list details with connection information. Device Connection USB Serial Connection One of the methods for establishing communication between PC and Mikrodev device in device configuration is USB serial connection. In order to perform USB connection between PC and device, you need to install USB driver for PCs with Windows 7/8 / 8.1 operating systems. There is no need to install the USB driver for Windows 10 operating systems. For serial connection over USB, “Connect over USB\" box in the Connect and Configure Your Device section of the Assistant software is selected. In the USB Port Selection section, you should select the port and click \"Connect\". USB connection will be established after that. TCP Connection – Device Discovery Mode \"Network Discovery\" option is used to detect and connect IP addresses of Mikrodev devices which are active in the local network. The \"Network Discovery \" box will be highlighted after the \"Connect via TCP\" box is checked in the Connect and Configure to Device section of the Assistant software. After clicking \"Scan Network for Mikrodev Devices\", the serial number, IP address, listening port and software versions of all Mikrodev devices which are active in the network are listed on the screen. You can connect the device on the list by double clicking on the device name on the screen. TCP Connection – Manual When manually entering the ip address and port number of the device that is active in the local network, \"Manual\" option is used. The \"Manual\" box is checked after the \"Connect over TCP\" checkbox is checked in the Connect and Configure Device section from the Assistant software. The IP address of the device to be connected is entered into the \"Device IP\" section, the port number is entered into the \"Port\" section and \"Connect\" is clicked. Assistant software connects to the Mikrodev device with specified ip address and port number. Offline Settings Offline mode is used when parameter settings are made and saved without connecting to the device. Click on \"Click here for offline configuration\" on the Assistant main screen when you want to make the offline parameter settings. The device is selected in the screen that appears, and then \"Select this device\" is clicked. Offline parameter settings of the selected device can be made. In addition, using the \"Load from configuration file\" option on the same page, previously saved configuration values can also be loaded to the program. MODC Gateway Settings Status Screen It is the status information screen which shows related information to the connected Mikrodev device. This screen contains the device's manufacturing information, Ip settings and serial connection settings (RS-485, RS-232). You can access the web interface of the device from this screen as well. Select \"Click here to access the web interface of the device\" to access the web interface. Basic Settings In the basic settings section, parameter set values are entered according to communication types. For Ethernet connection enter the local ip, gateway ip, subnet and for GSM connection enter the APN, user name, user password. SSID (Modem user name) and password are entered when wifi connection is requested. In addition; the password definition for access control to the Mikrodev device is performed on this page. In addition, device connection follow-up duration, auto reset duration, and configuration port can be entered. You can send ID after connection by checking the \"Send ID after connection\" checkbox. MODC General Settings In the ModC General Settings section, the Modbus communication settings of the Mikrodev device are made. In case of connection via Modbus TCP, server or client selection of the connection type is made and port settings are defined. And also, Modbus Slave ID settings are defined. Loading Settings to Device Click \"Device Management\" on the Assistant software to send the configuration settings to the device. Then click \"Send Configuration\" option. After completing the configuration, the device must be rebooted in order to register the settings. Restart the device by clicking \"Restart Device\" under \"Device Management\" on the main screen of the Assistant program. When the device is rebooted, you may need to remove and reinsert the USB cable to reconnect with the serial port. The TCP connection between the device and the PC will be established automatically after the device is rebooted, after waiting approximately 20 seconds to reconnect to the device through the TCP connection. MODC Gateway Parameter Settings Adding Meters MODC Gateway support addressing mode or non-adressing boardcasting mode. If you want to read meter without addressing, you should give 0 into Meter Serial No. if not you should give serial number for addressing. After all settings are made, click \"Add Meter\". If you want to add more than one meter, click \"Add and Continue Meter\" option. Here you can add new meters in succession. If you want to make a change on the meter created in the list of defined meters, you can click on the parameter to be changed and make changes. Adding OBIS Codes To define the OBIS codes to be read out from the electricity meters, first click on the meter from the list of defined meters. Then click \"Add OBIS Code to Selected Meter \" on the Modc Settings page. The OBIS value to be read is entered in the \"OBIS Name\" section in the opened page. (Eg 0.0.0, 1.8.0, ...) In the \"Code 1 Type\" section, the variable type of the value from the relevant OBIS code is selected. If more than one value is read from an OBIS code to be defined, the variable type of the second value to be read is selected in the \"Code 2 Type\" section. After all settings are made, click \"Add OBIS\". If more than one OBIS code is to be defined, the \"Add and Continue OBIS\" option is clicked. Here you can add new OBIS codes in succession. If you want to modify the OBIS codes created in the MODC OBIS Codes list, you can click on the parameter to be modified and make changes. Adding OBIS Codes with Special Commands Special instructions may be required to read certain information on the electricity meters. In such cases, the specific command information must be requested from the electricity meter's manufacturer. In order to add OBIS code with special command, click \"Add Programming Mode Command to Selected Meter\" option on the ModC Settings page. In the incoming screen, special command input is entered in the \"Command\" section. After all settings are made, click \"Add Command\". If more than one custom command will be added, the \"Add Command and Continue\" option is clicked. You can add successive OBIS codes in this way. MODC If you want to change the special commands created in the MEter Programming Mode Commands list, you can click on the parameter to be changed and make changes. MODBUS Adress Table MODBUS address table shows the type of OBIS codes defined earlier and corresponding modbus addresses. Addresses in the Modbus Address Table start at 10,000. The first two addresses of each counter added to the table represent error counter and rx counter values. When adding new OBIS code definitions it should be noted that; when multiple meters are defined on the system, if a new OBIS code value is defined on the first meter, the modbus addresses of the latter meters also change. For this reason, it is necessary to go through the next meter after defining all the parameters of the previous meters completely Terminal Terminal window is the section where the commands for the MMS100 series converters are entered. In this section, information coming from the device is displayed on the screen. In the \"Custom Command Input\" section, type the command to be queried (eg AT + VERSION =?) And click \"Send\" to send the query to the device. The query answer appears on the screen. Click on \"Clear History\" in the \"Console Window\" section to clear the queries that are displayed on the screen.","keywords":""},{"title":"İndirme Linkleri","type":0,"sectionRef":"#","url":"docs/Downloads","content":"PLC : Mikrodiagram Kurulum Dosyası RTU : Telediagram Kurulum Dosyası Gateway : Assistant Kurulum Dosyası SCADA : ViewPLUS SCADA Editor Kurulum Dosyası, ViewPLUS SCADA Client Kurulum Dosyası","keywords":""},{"title":"MDC100 Donanım Klavuzu","type":0,"sectionRef":"#","url":"docs/Gateway-MDC100-Hardware-Manual","content":"MDC100 Genel Bilgiler MDC100 Hardware Manual Fiziksel Arayüzler Cihaz Genel Özellikler Not: 2 adet RS485 portu bulunan modellerde RS232 portu bulunmamaktadır. Montaj Bilgileri Ray Montaj DIN Ray Montajı Cihazın üst kısmı öncelikle DIN Ray‘a takılır. Daha sonra cihazın arkasında bulunan yaylar yardımıyla, cihazın alt kısmına hafif kuvvet uygulandığında ürün DIN Ray’a kolayca geçer ve montaj tamamlanır. DIN Ray Demontajı Cihazın demontajı için öncelikle yayın esnekliği kullanılarak tornavida vasıtası ile alttan çekilir ürün DIN Ray’dan kurtulur ve demontaj tamamlanır. Bağlantı Şemaları Besleme Bağlantısı RS485 Seri Port RS232 Seri Port","keywords":""},{"title":"MBS100 Donanım Klavuzu","type":0,"sectionRef":"#","url":"docs/Gateway-MBS100-Hardware-Manual","content":"MBS100 Genel Bilgiler MBS100 Hardware Manual Fiziksel Arayüzler Cihaz Genel Özellikler Not: 2 adet RS485 portu bulunan modellerde RS232 portu bulunmamaktadır. Montaj Bilgileri Ray Montaj DIN Ray Montajı Cihazın üst kısmı öncelikle DIN Ray‘a takılır. Daha sonra cihazın arkasında bulunan yaylar yardımıyla, cihazın alt kısmına hafif kuvvet uygulandığında ürün DIN Ray’a kolayca geçer ve montaj tamamlanır. DIN Ray Demontajı Cihazın demontajı için öncelikle yayın esnekliği kullanılarak tornavida vasıtası ile alttan çekilir ürün DIN Ray’dan kurtulur ve demontaj tamamlanır. Bağlantı Şemaları Besleme Bağlantısı RS485 Seri Port RS232 Seri Port","keywords":""},{"title":"MMS100 Donanım Klavuzu","type":0,"sectionRef":"#","url":"docs/Gateway-MMS100-Hardware-Manual","content":"MMS100 Genel Bilgiler MMS100 Hardware Manual Fiziksel Arayüzler Cihaz Genel Özellikler Montaj Bilgileri Ray Montaj DIN Ray Montajı Cihazın üst kısmı öncelikle DIN Ray‘a takılır. Daha sonra cihazın arkasında bulunan yaylar yardımıyla, cihazın alt kısmına hafif kuvvet uygulandığında ürün DIN Ray’a kolayca geçer ve montaj tamamlanır. DIN Ray Demontajı Cihazın demontajı için öncelikle yayın esnekliği kullanılarak tornavida vasıtası ile alttan çekilir ürün DIN Ray’dan kurtulur ve demontaj tamamlanır. Bağlantı Şemaları Besleme Bağlantısı M-Bus Port","keywords":""},{"title":"Gateway Led Durumları","type":0,"sectionRef":"#","url":"docs/Gateway-Led-Status","content":"Önyükleme Durumu PWR ve SYS ledleri sürekli yanar. ACT ledi periyodik olarak yanıp söner. Hata Durumu Sadece PWR ledi sürekli yanar. Normal Durum PWR ledi sürekli yanar. SYS ledi periyodik olarak yanıp söner.","keywords":""},{"title":"MBS100 Software Manual","type":0,"sectionRef":"#","url":"docs/Gateway-MBS100-Software-Manual","content":"MODBUS Gateway Configuration Software MBS100 Software Manual General Information The Assistant software is used to make all necessary settings for the Mikrodev Gateway devices. Thanks to the software, device settings can be made online and/or offline. The settings that are loaded on the device can easily be downloaded and the previously saved settings can easilly be uploaded into the device by the program. The connection between the program and the device can be established in various ways such as USB, Ethernet, GSM, Wi-Fi. For Ethernet supported devices; there is also the ability to search the network and list details with connection information. Device Connection USB Serial Connection One of the methods for establishing communication between PC and Mikrodev device in device configuration is USB serial connection. In order to perform USB connection between PC and device, you need to install USB driver for PCs with Windows 7/8 / 8.1 operating systems. There is no need to install the USB driver for Windows 10 operating systems. For serial connection over USB, “Connect over USB\" box in the Connect and Configure Your Device section of the Assistant software is selected. In the USB Port Selection section, you should select the port and click \"Connect\". USB connection will be established after that. TCP Connection – Device Discovery Mode \"Network Discovery\" option is used to detect and connect IP addresses of Mikrodev devices which are active in the local network. The \"Network Discovery \" box will be highlighted after the \"Connect via TCP\" box is checked in the Connect and Configure to Device section of the Assistant software. After clicking \"Scan Network for Mikrodev Devices\", the serial number, IP address, listening port and software versions of all Mikrodev devices which are active in the network are listed on the screen. You can connect the device on the list by double clicking on the device name on the screen. TCP Connection – Manual When manually entering the ip address and port number of the device that is active in the local network, \"Manual\" option is used. The \"Manual\" box is checked after the \"Connect over TCP\" checkbox is checked in the Connect and Configure Device section from the Assistant software. The IP address of the device to be connected is entered into the \"Device IP\" section, the port number is entered into the \"Port\" section and \"Connect\" is clicked. Assistant software connects to the Mikrodev device with specified ip address and port number. Offline Settings Offline mode is used when parameter settings are made and saved without connecting to the device. Click on \"Click here for offline configuration\" on the Assistant main screen when you want to make the offline parameter settings. The device is selected in the screen that appears, and then \"Select this device\" is clicked. Offline parameter settings of the selected device can be made. In addition, using the \"Load from configuration file\" option on the same page, previously saved configuration values can also be loaded to the program. MODBUS Gateway Settings Status Screen It is the status information screen which shows related information to the connected Mikrodev device. This screen contains the device's manufacturing information, Ip settings and serial connection settings (RS-485, RS-232). You can access the web interface of the device from this screen as well. Select \"Click here to access the web interface of the device\" to access the web interface. Basic Settings In the basic settings section, parameter set values are entered according to communication types. For Ethernet connection enter the local ip, gateway ip, subnet and for GSM connection enter the APN, user name, user password. SSID (Modem user name) and password are entered when wifi connection is requested. In addition; the password definition for access control to the Mikrodev device is performed on this page. In addition, device connection follow-up duration, auto reset duration, and configuration port can be entered. You can send ID after connection by checking the \"Send ID after connection\" checkbox. MODBUS Settings The Modbus settings of the device are made in Modbus settings section. In the case of connection via Modbus TCP, server or client selection of connection type is made and port settings are defined. When the MBS100 series is to be operated in the client client mode, the relevant box is marked according to the serial (RTU) connection types (RS-232, RS-485) and the Ip setting, port number, baud rate, databit value, parity value and stop bit are set. Loading Settings to Device Click \"Device Management\" on the Assistant software to send the configuration settings to the device. Then click \"Send Configuration\" option. After completing the configuration, the device must be rebooted in order to register the settings. Restart the device by clicking \"Restart Device\" under \"Device Management\" on the main screen of the Assistant program. When the device is rebooted, you may need to remove and reinsert the USB cable to reconnect with the serial port. The TCP connection between the device and the PC will be established automatically after the device is rebooted, after waiting approximately 20 seconds to reconnect to the device through the TCP connection. Terminal Terminal window is the section where the commands for the MMS100 series converters are entered. In this section, information coming from the device is displayed on the screen. In the \"Custom Command Input\" section, type the command to be queried (eg AT + VERSION =?) And click \"Send\" to send the query to the device. The query answer appears on the screen. Click on \"Clear History\" in the \"Console Window\" section to clear the queries that are displayed on the screen.","keywords":""},{"title":"SC100 Donanım Klavuzu","type":0,"sectionRef":"#","url":"docs/Gateway-SC100-Hardware-Manual","content":"SC100 Genel Bilgiler SC100 Hardware Manual Fiziksel Arayüzler Cihaz Genel Özellikler Not: 2 adet RS485 portu bulunan modellerde RS232 portu bulunmamaktadır. Montaj Bilgileri Ray Montaj DIN Ray Montajı Cihazın üst kısmı öncelikle DIN Ray‘a takılır. Daha sonra cihazın arkasında bulunan yaylar yardımıyla, cihazın alt kısmına hafif kuvvet uygulandığında ürün DIN Ray’a kolayca geçer ve montaj tamamlanır. DIN Ray Demontajı Cihazın demontajı için öncelikle yayın esnekliği kullanılarak tornavida vasıtası ile alttan çekilir ürün DIN Ray’dan kurtulur ve demontaj tamamlanır. Bağlantı Şemaları Besleme Bağlantısı RS485 Seri Port RS232 Seri Port","keywords":""},{"title":"DNP3 SLAVE Application Notes","type":0,"sectionRef":"#","url":"docs/DNP3-Application-Notes","content":"DNP3 SLAVE General Information DNP3 protocol is a distributed communication protocol. Primary advantage are: •Time-labeled variable support •Ability to re-send the events that occurred during the absence of communication when connected with the time tags. •The ability of SCADA to automatically send changes without the need to query. •Ability to query multiple variables as a class, not individually •Time syncronization DNP3 SLAVE Driver Mikrodev RTU devices are supports DNP3 SLAVE mode and gives service to DNP3 supported systems over TCP IP and/or SerialPort . The following services are supported: 1- Bulk object reading with Class object query 2- Time syncronization 3- Event control in instantaneous measurement data as a percentage and level 4- Automatic send the event datas 5- Periodically send the points of data DNP3 Slave Block Definitions Connections Connection Explanation Ser: TCP Socket Input The TCP server socket block, where the DNP3 protocol will run, is connected from this input. Trg: Trigger Input The trigger input for periodically send operation. Works as a rising edge. Asd: Asdu Address Input It is used as an ASDU address entry. Block Explanation By adding the DNP3 slave block, DNP3 is activated on the RTU. TCP or Seriport block is added to the DNP3 block Ser entry. To serve more than one server, a DNP3 block must be added for each server. If the DNP3 asdu address is to be set from outside the ASD entry is used.On the rising edge of trigger , periodic submission between DNP3 objects active selected objects, send to server with periodic COT. The input of trigger and can be left blank. DNP3 Variable Table Definitions Variable Table To RTU logic project , Dnp3 becomes active in the DNP3 protocol within the RTU with the addition of the Slave Block to DNP3. Variables that in the RTU logic, The association of DNP3 is provided in the variable address table. Line Label Definition Line label can be defined for all blocks defined on the microdiagram. In order to associate with the protocol addresses in the variable table, the line label must be defined. Line Label Attribution Associating the protocol adresses with line labelss, The variable is provided from the menu by pressing the “Add” button in the address table. Alias: A special name is given that defines this variable. Start Address: The address reserved for this variable on SCADA is written here.İt is written as a Decimal value. LineLabel: The block to be associated with on the microdiagram is selected by the line label. Point Coint: It is calculated automatically. It makes sense in tables. Protocol Type: Modbus, Dnp3, iec101, iec104 to choosing from among them. The Object Type will change according to the protocol type. Object Type: DNP3 object type information is selected. See protocol type information for detailed information. Object Class: The class information to which the variable belongs is selected. Send On Trigger: When Dnp3 Slave is detected from the trigger input in the trigger block, it is the choice of whether to send this variable as a periodic send to SCADA. Send Method: When the value of the defined variable changes, the operation to be performed is selected. None: Spinner does not trigger submission. Level: When the amount defined \"Change Value\" changes, sending is triggered. Percentage: Submission is triggered when there is a percentage change defined in \" Change Value”. Change Value: Sets the percent or level change value with” Send method\". DNP3 Object Types DNP3 Object Types in Reading Direction DNP3 Object Type\tRegister Data TypeSingle Bit Binary Input : Data Object 01 - Variation 01\tBinary, Word, Analog, Long Binary Input With Status :Data Object 01 - Variation 02\tBinary, Word, Analog, Long Binary Input Change Without Time : Data Object 02 - Variation 01\tBinary, Word, Analog, Long Binary Output : Data object 10 - Variation 01\tBinary, Word, Analog, Long Binary Output Status : Data object 10 - Variation 02\tBinary, Word, Analog, Long 32 BIT Analog Input : Data Object 30 - Variation 01\tLong 16 BIT Analog Input : Data Object 30 - Variation 02\tBinary, Word 32 BIT Analog Input Without Flag : Data Object 30 - Variation 03\tLong 16 BIT Analog Input Without Flag : Data Object 30 - Variation 04\tBinary, Word Short Float Analog Input Without Flag : Data Object 30 - Variation 05\tAnalog NOTE 1: A variable of type DNP_OBJTYPE_CLASSOBJ must be added from the variable Adress table to draw Class 0, Class 1, and Class 2 data. Other settings of this variable, such as address, line tag, can be selected at random. DNP3 Object Types in Control Direction The write variable is also automatically generated for each block mapped to the read type. The types of variables that can be accessed as write to defined read objects are as follows: DNP3 Object Type\tRegister Data TypeControl Relay Output Block : Data Object 12 - Variation 01\tBinary, Word, Analog, Long 32 Bit Analog Output Block : Data Object 41 - Variation 01\tLong 16 Bit Analog Output Block : Data Object 41 - Variation 02\tBinary, Word Short Float Analog Output Block : Data Object 41 - Variation 03\tAnalog DNP3 Event Mechanism Event Definition for DNP3 Objects In the variable address table, the send in change selection is available for DNP3 objects. When the value of the variable defined in this menu changes, the operation to be performed is selected. None: Spinner does not trigger submission ● Level: when the amount defined in “Change Value” is changed, the sending is triggered. ● Percentage: Submission is triggered when there is a percentage change defined in \" Change Value”. The change face or level is set with the value” Change Value\". Sets the percent or level change value with “Send method”. DNP3 Instantaneous Transmission of Event Situations The RTU device tags the states defined as send and change detected as events and assigns a time tag to the event. In case of a tagged event, if there is a connection to the server and the server is active in the device sending “UNSOLICED”, the relevant object is immediately forwarded as “UNSOLICED”. If the connection exists with the server and the events detected with the “UNSOLICITED” sending active are sent with the DNP3 object types specified in the following table. DNP3 Object Type\tRegister Data TypeBinary Input Change Without Time : Data Object 02 - Variation 01\tBinary 32 Bit Analog Input Change Without Time : Data Object 32 - Variation 01\tLong 16 Bit Analog Input Change Without Time : Data Object 32 - Variation 02\tWord Short Float Analog Input Change Without Time : Data Object 32 - Variation 05\tAnalog DNP3 Time-Tagged Submission Of Event States Event Controls continue passively sending “UNSOLICED” even if there is connection to the server or even if there is no connection. In the event of an event under these circumstances, event information is recorded in the event memory with the time tag and this data is kept in the device as CLASS 1 data. This event data stored in memory can be read by the server with Class 1 data read management. This CLASS 1 data is also automatically forwarded to the server by RTU if” UNSOLICED \" sending is enabled. Class 1 event data is dispatched with the DNP3 object types specified in the following table. DNP3 Object Type\tRegister Data TypeBinary Input Change With Time : Data Object 02 - Variation 02\tBinary 32 Bit Analog Input Change With Time : Data Object 32 - Variation 03\tLong 16 Bit Analog Input Change With Time : Data Object 32 - Variation 04\tWord Short Float Analog Input Change With Time : Data Object 32 - Variation 07\tAnalog","keywords":""},{"title":"AT Commands","type":0,"sectionRef":"#","url":"docs/Mikrodiagram-ATCommands","content":"Mikrodev Devices have MODBUS registers which you could set some special parameters. You can find these special registers in the following table. Please note that the values you set via MODBUS will be saved into retentive memory once every 5 minutes for security purposes. After setting the parameter via MODBUS, if you power off the device earlier than 5 minutes, the changes may be lost. AT+XXX=?\tACCESS RIGHT\tDESCRIPTIONETHERNET\tLOCALIP\tLOGIN REQUIRED, R/W MAC\tLOGIN REQUIRED, R/W GATEWAY\tLOGIN REQUIRED, R/W NETMASK\tLOGIN REQUIRED, R/W DHCP\tLOGIN REQUIRED, R/W\tEnable/Disable DHCP LWIPTMO\tLOGIN REQUIRED, R/W\tIf no packets received from PLC Ethernet port, resets the ethernet connection CONFIGPORT\tLOGIN REQUIRED, R/W GSM\tGPRSAPN\tLOGIN REQUIRED, R/W GPRSNAME\tLOGIN REQUIRED, R/W GPRSPSSW\tLOGIN REQUIRED, R/W CSQ\tREAD ONLY\tavailable if ppp is not active IMEI\tREAD ONLY\tavailable if ppp is not active GPRSIP\tREAD ONLY\tavailable if ppp is not active SIM\tREAD ONLY\tavailable if ppp is not active, returns true if SIMCARD communication is ok MODEM\tUNPROTECTED, READ ONLY\tavailable if ppp is not active, sends and receives reply from modem SOCKET STATUS\tSERVERTIMEOUT\tLOGIN REQUIRED, R/W\tTests if sockets are ok, if not closes them (seconds) CONNECTION\tREAD ONLY SOCKET\tUNPROTECTED, READ ONLY\tDisplays the details of the clients connected on that \"socket number\" PLCRESET\tLOGIN REQUIRED, R/W\tIf not received any data during that interval from ,GSM/ETH resets the device PLC STATUS\tHELP\tREAD ONLY INCLUDE\tREAD ONLY\tShows the enabled features on the device MEMORY\tREAD ONLY\tTotal used memory VERSION\tREAD ONLY SERIALNO\tREAD ONLY PRODUCTNO\tREAD ONLY\tReturns the product number MODEL\tREAD ONLY\tDevice model selected in bootloader level POWERCOUNT\tREAD ONLY\tTotal reset count from the time project is uploaded ERROR\tREAD ONLY PLC TIME\tSETTIME\tLOGIN REQUIRED, R/W TIMEOFFSET\tLOGIN REQUIRED, R/W\tTime zone offset PLC LCD\tMENULINE1\tLOGIN REQUIRED, R/W\tStartup text for LCD devices, 16 characters ,first line MENULINE2\tLOGIN REQUIRED, R/W\tStartup text for LCD devices, 16 characters ,second line WI-FI SETTINGS\tWIFIPSSW\tLOGIN REQUIRED, R/W\tSet/Get WiFi Password WIFISSID\tLOGIN REQUIRED, R/W\tSet/Get WiFi SSID WIFIMAC\tLOGIN REQUIRED, R/W\tGet WiFi MAC WIFIIP\tLOGIN REQUIRED, R/W\tSet/Get WiFi IP Address WIFIGATEWAY\tLOGIN REQUIRED, R/W\tSet/Get WiFi Gateway Address WIFINETMASK\tLOGIN REQUIRED, R/W\tSet/Get WiFi Network Mask CANBUS\tCANSTATUS\tUNPROTECTED, READ ONLY\tStatus information for extension devices CANCOMMAND\tLOGIN REQUIRED, R/W\tSends commands to extension devices CANTIMEOUT\tLOGIN REQUIRED, R/W\tTimeout value for checking extension device exists or not INTERNAL FILESYSTEM RELATED\tFBD\tUNPROTECTED, R/W ONLINE\tUNPROTECTED, R/W DEFAULT\tLOGIN REQUIRED, R/W PASSWORD\tUNPROTECTED, R/W\tSet Password LOGIN\tUNPROTECTED, READ ONLY\tLogin device RESET\tUNPROTECTED, R/W OTHER PLC FUNCTIONS\tADCERROR\tREAD ONLY\tADC error count FORMATFS\tLOGIN REQUIRED, R/W\tFormat filesystem FATFS\tREAD ONLY\tThe size of the log file in the SD card","keywords":""},{"title":"Block-Descriptions-Notes","type":0,"sectionRef":"#","url":"docs/Block-Descriptions-Notes","content":"Physical I/O Blocks (T/M) Digital Input: It is used to read the physical digital input on the device. (T/M) Digital Output: It is used to write values to the physical digital outputs on the device. (T/M) Analog Input: It is used to read physical analog input on the device. (T/M) Analog Output: It is used to write values to the physical analog outputs on the device. (T/M) Relay Output: It is used to write values to the physical relay outputs on the device. (T/M) RTD Temperature Input: It is used to read physical RTD inputs on the device. (T/M) Locked Digital Input: Locked Input/Output blocks are used to assign values which are different from the real physical values to the physical input/output blocks. (T/M) Locked Analog Input: Locked Input/Output blocks are used to assign values which are different from the real physical values to the physical input/output blocks. (T/M) Locked RTD Temperature Input: Locked Input/Output blocks are used to assign values which are different from the real physical values to the physical input/output blocks. (T/M) Locked Digital Output: Locked Input/Output blocks are used to assign values which are different from the real physical values to the physical input/output blocks. (T/M) Locked Analog Output: Locked Input/Output blocks are used to assign values, which are different from the real physical values to the physical input/output blocks. (T/M) Locked Relay Output: Locked Input/Output blocks are used to assign values which are different from the real physical values to the physical input/output blocks. Logic Blocks (T/M) Edge Gate: Edge Gate is used for edge triggering purposes. (T/M) Not Gate: Not Gate is used for inverting the input signals. (T/M) Or Gate: Performs the logic OR operation to the input signals. (T/M) Nor Gate: Performs the logic NOR operation to the input signals. (T/M) Nand Gate: Performs the logic NAND operation to the input signals. (T/M) And Gate: Performs the logic AND operation to the input signals. (T/M) XOR Gate: Performs the logic XOR operation to the input signals. (T/M) High Gate: The block output is always (1) High. (T/M) Low Gate: The block output is always (0) Low. (T/M) Impulse Relay: It is used for operations such as on-off, set and reset. (T/M) Shift Block: It is used when a value is shifted to the right or left. (T/M) Bit Merge Block: It is used to combine a maximum of 8 bits in binary and transfer them to the block output as 1 byte. (T/M) Custom Gate: It allows the user to design a desired type of logic gate with the selections made from the Block Object Properties. Calibrator Blocks (T/M) Slope Calibrator: The slope calibrator block means that an analogue value is processed as \"Y = mX + c\". The m and c values are coefficient values set from the block options. The “X“ value is the input (I1) of the block and the value of Y is the output (Q1) of the operation (T/M) Point Calibrator: Instead of defining the slope and offset of the correct equation, the transformation is defined over two sample points. Delay/Pulse Timers (T/M) On-Delay: If TRG input change its state to Logic(1) and stay in this state during the determined delay time interval, Q1 output signal change its state from logic(0) to logic(1) after end of the delay time period (T/M) Off-Delay: f TRG input change its state to Logic(0) and stay in this state during the determined off delay time interval, Q1 output signal change its state from logic(1) to logic(0) after end of the delay time period. (T/M) On/Off Delay: If TRG input change its state to Logic(1) and stay in this state during the determined ON delay time interval, Q1 output signal change its state from logic(0) to logic(1) after end of the ON delay time period. (T/M) Retentive On-Delay: If TRG input change its state to Logic(1) and stay in this state during the determined delay time interval, Q1 output signal change its state from logic(0) to logic(1) after end of the delay time period. (T/M) Timer Output Relay: When the Trg input change its state from Logic(0) to Logic(1), Q1 output changes its state immediately to Logic(1). (T/M) Symetric Pulse Generator: As long as Enb input is logic(1), block output O1 generates periodic symmetrical pulse as T time logic(0), T time logic(1). (T/M) Real Time Pulse Generator: It periodically generates pulses at the times specified in synchronous with the device's real time clock. Math Operations Blocks (T/M) Word Comparator: It is used for comparing 16-bit WORD numbers.(0-65535) (T/M) Analog Comparator: It is used for comparing 32-bit floating point numbers. (T/M) Long Comparator: It is used for comparing 32-bit signed numbers. (T/M) Analog Math: It is used for IEE754 floating point number mathematical operations. (T/M) Word Math: It is used for mathematical operations which result in range 0-65535(16-bit). (T/M) Long Math: It is used for mathematical operations which result in 32-bit signed integers. Counter Blocks (T/M) Up/Down Counter 1: It is used to increment the counting process from any value in positive (+) direction one by one, or to reduce a value in negative (-) direction one by one (T/M) Run Time: Run Time block is used to save the runtime. When the \"Act\" input is logic(1), it counts the time in selected time scale (seconds, minutes, hours and writes to the output. (T/M) Up/Down Counter 2: It is used when positive (+) direction and negative (-) direction counting is done from two different inputs on the block. GSM Blocks (T/M) SMS Receiver: SMS receiver block is used in applications requiring SMS control. String reference blocks are connected to the No and Msg inputs. (T/M) SMS Send: It is used in applications that want to send SMS from the device to another number. When triggered, the specified SMS is sent to the specified number. (T/M) DTMF Incoming Call: Thanks to the DTMF blocks, Remote control projects via Phone DTMF codes can be done. (T/M) DTMF Originate Call: Applying the logical high (1) signal to the input of the DTMF Originate Call block makes a call to the defined number. (T/M) GSM Signal Quality: It is a block that can be added to measure GSM signal quality. Values between 1 and 31 indicate the signal quality of the device. Data/Event Recording Blocks (T/M) Logger: In control devices to do LOG record operation is used. LOG record operation on the devices which support the SD card is made on SD card, if there is no SD card in the device it is done on the flash memory. Register/Variable Blocks (T/M) Word Register: Word Register Block is used as a 16 bit unsigned integer type value holder. It is used as variable in PLC projects. (T/M) Analog Register: Analog Register Block is used as a 32 bit Floating Point type value holder. It is used as variable in PLC projects. (T/M) Long Register: Word Register Block is used as a 32 bit signed integer type value holder. It is used as variable in PLC projects. (T/M) Binary Register: Binary Register Block is used as a 1 bit Boolean type value holder. It is used as variable in PLC projects. (T/M) Binary Flag: The value in input signal is transmitted to the block output with one PLC cycle delay. (T/M) Word Flag: The value in input signal is transmitted to the block output with one PLC cycle delay. (T/M) Analog Flag: The value in input signal is transmitted to the block output with one PLC cycle delay. (T/M) Long Flag: The value in input signal is transmitted to the block output with one PLC cycle delay. MODBUS Blocks (T/M) Modbus RTU Master: MODBUS RTU Master block activates the MODBUS RTU Master protocol on physical interface connected over communication port input. (T/M) Modbus Word Reader: It is used to read a single 16-bit length MODBUS register adress. (T/M) Modbus Float Reader: t is used for reading from 2 MODBUS registers which is storing 32 bits long IEEE 754 float number. (T/M) Modbus Word Writer: It is used for writing on a single 16 bits long MODBUS register adress. (T/M) Modbus Float Writer: It is used for writing into 2 MODBUS registers which is storing 32 bits long IEEE 754 float number. (T/M) Modbus TCP Master: The MODBUS TCP Master block activates the MODBUS TCP Master protocol on physical interface connected over communication port input. (T/M) Modbus TCP Slave: The MODBUS TCP Slave block activates the MODBUS TCP Slave protocol on physical interface connected over communication port input (T/M) Modbus RTU Slave: The MODBUS RTU Slave block activates the MODBUS RTU Slave protocol on physical interface connected over communication port input. (T/M) Modbus Write/Read Table: It is used for reading/writing one or more registers starting from a specific register address. (T/M) Modbus Long Reader: The long of 32 byte which keep two numbers from long type fort to read the register adress. (T/M) Modbus Long Writer: It is used to write into 2 MODBUS registers that hold a 32 bits length long number. (T/M) Modbus Gateway: MODBUS Gateway devices are used to create a gateway for master units in the MODBUS TCP network to access slave units in the MODBUS RTU network. (T/M) Modbus Status: Status information of slave devices that read and write over Modbus Master block is read with this block. Modbus Status block reads the status information from the master block to which it is connected. IEC/DNP3 Protocols (T) IEC101 Slave: By adding IEC101 block, The IEC 60870-5-101 slave is activated on the RTU. TCP or Serialport block is added to IEC101block “ser” input. (T) DNP3 Slave: By adding the DNP3 slave block, DNP3 is activated on the RTU. TCP or Seriport block is added to DNP3 block ser input. (T) IEC104 Slave: By adding IEC104 slave block , IEC 104 will be activated on the RTU. TCP or Serialport block is added to IEC104 block ser input. MQTT Blocks (T/M) MQTT Config: It is used to connect to a remote broker via the host or IP address set from the TCP socket block and to provide communication between devices or interfaces using the internet or local network. Communications Blocks (T/M) Serial Port Block: Any protocol supported by Mikrodev PLC can be configured to communicate over serial port. (T/M) DNS Blok: Converts web address to IP address. (T/M) TCP Socket Block: TCP Socket Block is used to provide the communications with Ethernet,GSM or Wi-Fi, with supported protocols. Table Blocks (T/M) Word Table: Keeps the added word value in the table. The table size should be selected 2 times the number of word values entered. (T/M) Analog Table: Keeps the added analog value in the table. The table size should be selected 4 times the number of analog values entered. (T/M) Word Table Operations: It executes the operation which is defined on the table data and writes the result to output of the block. (T/M) Analog Table Operations: It executes the operation which is defined on the table data and writes the result to output of the block. (T/M) Long Table: Keeps the added long value in the table. The table size should be selected 4 times the number of long values entered. (T/M) Long Table Operations: It executes the operation which is defined on the table data and writes the result to output of the block. (T/M) Bit Table: Keeps the Word value added in the table. The table size must be the same as the number of bit values entered. (T/M) Bit Table Operations: It executes the operation which is defined on the table data and writes the result to output of the block. Controller Blocks (T/M) Hysteresis: It is used to create the switching range by switching on and off at the end points of the \"bottom threshold and upper threshold\" determined in on/off controlled systems. (T/M) PID Controller: A PID controller is a controller that is designed to stabilize a mechanism at a constant value in the most optimal time and to keep the value constant in the ideal values (T/M) Analog Ramp: The analog ramp block is used in applications where it is necessary to reach a fixed value from a specified value with a constant acceleration within a certain time period. (T/M) On/Off Controller: If the input value of the process meets the defined conditions, output status is ON, otherwise output status is OFF. (T/M) Change Detector: The Change Detector block is used when changes to any block value need to be monitored. HVAC Blocks (T/M) Floating Motor: Equipment connected to the output will be turned on as long as the logic (1) signal sent from the “Ope” output. The equipment connected to the output will shut down as long as the logic (1) signal sent from the “Clo” output. (T/M) Aging Manager: As long as the logic high(1) signal is input to “Enb”, the block becomes active and activates the connected aging members. (T/M) Aging Member: It is used in applications where several equipment must be started and stopped in sequence for a certain period of time. (T/M) DevNET Main: DevNET is a system that reads and writes data from one device selected via ethernet and transfers the data to the DevNET register. (T/M) DevNET Register: The data of the registers in the device connected via the Ethernet network is transferred into this block. System Blocks (T/M) First Scan Bit: When the PLC is started, it gives logic 1 output. (T/M) Reset Counter: The reset count of the device is written to the output. (T/M) System Reset: In case of rising edge trigger signal is applied to Trg input, the device performs a soft RESET. Multiplexer Blocks (T/M) Analog Quart Multiplexer: One of the inputs is selected among the four inputs and transferred to the block output. (T/M) Word Dual Multiplexer: One of the inputs is selected among the two inputs and transferred to the block output. (T/M) Long Dual Multiplexer: One of the inputs is selected among the two inputs and transferred to the block output. (T/M) Analog Dual Multiplexer: One of the inputs is selected among the two inputs and transferred to the block output. Motion Control Blocks (T/M) Fast Counter Input: Fast counter blocks are used to count digital pulse input signals. (T/M) Pulse Width Modulation: PWM block is used to control the PWM outputs of the device. (T/M) Pulse Train Output: It is used to make a controlled step input motion by sending a certain number of pulses. (T/M) Axis Definitions: This block is used to control the position of the system on the axis. (T/M) Axis Control: t is used to stabilise the position of the servo motor. Serial Communications Blocks (T/M) RX Package: Rx Package block is used to define the incoming data. (T/M) Package Parser: It is used to parse the incoming data. (T/M) TX Package: Tx Package Block Converts the data to be sent from the Value input into a packet and sends it as a data packet from the Q1 output. (T/M) Serial Gateway: It is the block used to provide transparent data transmission. It provides data transmission between the serial port and the remotely connected device, independent of any protocol. String Blocks (T/M) String Refence: It is used to select and use the desired index in the Text. Table for blocks that operate on texts or use as inputs. (T/M) String Manipulation: As do operation on the string referance result of operation new string is written to string offset. (T/M) String Operations: As doing operation on the string referance ,result of opearation composed the integer value is written blocks output. Calendar Blocks (T/M) Weekly Timer: O1 output becomes logic(1) for the selected day and time intervals. (T/M) Yearly Timer: It is used to generate a logical (1) output between two selected time intervals of the year. (T/M) Astronomical Timer: Sunset and sunrise time is calculated by using the latitude and longitude values. (T/M) System Seconds: The system second block shows the PLC’s real time clock’s second value. (T/M) System Miliseconds: System Milliseconds\" block reads the millisecond value from the moment the PLC starts to operate. (T/M) System HHMM: System HHMM block shows the PLC’s real time clock’s hours and minutes value. (T/M) System DayOfWeek: System day of week shows PLC’s real time clock’s week of day. (T/M) System DayOfMonth: The system day of month block shows PLC’s real time clock’s day of month. (T/M) System DayOfYear: The system day of year block shows PLC’s real time clock’s day of year value. (T/M) System Month: System Month block shows PLC's real time clock’s month of year value. (T/M) System Year: System Year Block shows PLC's real time clock’s year value. (T/M) Save Time: It is used to set the PLC’s time and date within the logic project. (T/M) NTP Syncronise Block: It is used to synchronize the PLC clock. (T/M) Time Plan Picker: It can be used in conjunction with Mikrodev ViewPLUS SCADA. It can not be used alone. Macro Blocks (T/M) Macro: Custom blocks can be designed by inserting special command definitions in the macro field of the block. SNMP Blocks (T/M) SNMP Agent: The SNMP Agent block is added to the project to be able to define the device as an agent. (T/M) SNMP Trap: The SNMP Trap block is used to send data in certain exchange values from the device to the manager.","keywords":""},{"title":"MMS100 Software Manual","type":0,"sectionRef":"#","url":"docs/Gateway-MMS100-Software-Manual","content":"M-BUS Gateway Configuration Software MMS100 Software Manual General Information The Assistant software is used to make all necessary settings for the Mikrodev Gateway devices. Thanks to the software, device settings can be made online and/or offline. The settings that are loaded on the device can easily be downloaded and the previously saved settings can easilly be uploaded into the device by the program. The connection between the program and the device can be established in various ways such as USB, Ethernet, GSM, Wi-Fi. For Ethernet supported devices; there is also the ability to search the network and list details with connection information. Device Connection USB Serial Connection One of the methods for establishing communication between PC and Mikrodev device in device configuration is USB serial connection. In order to perform USB connection between PC and device, you need to install USB driver for PCs with Windows 7/8 / 8.1 operating systems. There is no need to install the USB driver for Windows 10 operating systems. For serial connection over USB, “Connect over USB\" box in the Connect and Configure Your Device section of the Assistant software is selected. In the USB Port Selection section, you should select the port and click \"Connect\". USB connection will be established after that. TCP Connection – Device Discovery Mode \"Network Discovery\" option is used to detect and connect IP addresses of Mikrodev devices which are active in the local network. The \"Network Discovery \" box will be highlighted after the \"Connect via TCP\" box is checked in the Connect and Configure to Device section of the Assistant software. After clicking \"Scan Network for Mikrodev Devices\", the serial number, IP address, listening port and software versions of all Mikrodev devices which are active in the network are listed on the screen. You can connect the device on the list by double clicking on the device name on the screen. TCP Connection – Manual When manually entering the ip address and port number of the device that is active in the local network, \"Manual\" option is used. The \"Manual\" box is checked after the \"Connect over TCP\" checkbox is checked in the Connect and Configure Device section from the Assistant software. The IP address of the device to be connected is entered into the \"Device IP\" section, the port number is entered into the \"Port\" section and \"Connect\" is clicked. Assistant software connects to the Mikrodev device with specified ip address and port number. Offline Settings Offline mode is used when parameter settings are made and saved without connecting to the device. Click on \"Click here for offline configuration\" on the Assistant main screen when you want to make the offline parameter settings. The device is selected in the screen that appears, and then \"Select this device\" is clicked. Offline parameter settings of the selected device can be made. In addition, using the \"Load from configuration file\" option on the same page, previously saved configuration values can also be loaded to the program. M-BUS Gateway Settings Status Screen It is the status information screen which shows related information to the connected Mikrodev device. This screen contains the device's manufacturing information, Ip settings and serial connection settings (RS-485, RS-232). You can access the web interface of the device from this screen as well. Select \"Click here to access the web interface of the device\" to access the web interface. Basic Settings In the basic settings section, parameter set values are entered according to communication types. For Ethernet connection enter the local ip, gateway ip, subnet and for GSM connection enter the APN, user name, user password. SSID (Modem user name) and password are entered when wifi connection is requested. In addition; the password definition for access control to the Mikrodev device is performed on this page. In addition, device connection follow-up duration, auto reset duration, and configuration port can be entered. You can send ID after connection by checking the \"Send ID after connection\" checkbox. MMS100 Modbus Settings In the Modbus settings section of the MMS100, the Modbus communication settings of the Mikrodev device are made. In the case of connection via Modbus TCP, connection type, server or client selection and port settings are made. Depending on the serial(RTU) connection type selection (RS-232, RS-485) of the MMS100 series Gateway, the corresponding box is checked and the Ip setting, port number, baud rate, databit value, parity value and stop bit are set. Loading Settings to Device Click \"Device Management\" on the Assistant software to send the configuration settings to the device. Then click \"Send Configuration\" option. After completing the configuration, the device must be rebooted in order to register the settings. Restart the device by clicking \"Restart Device\" under \"Device Management\" on the main screen of the Assistant program. When the device is rebooted, you may need to remove and reinsert the USB cable to reconnect with the serial port. The TCP connection between the device and the PC will be established automatically after the device is rebooted, after waiting approximately 20 seconds to reconnect to the device through the TCP connection. M-BUS Gateway Parameter Settings MMS100 Serial Communication Settings The serial (RTU) connection settings of the MMS100 series gateways are defined in this section. The baud rate, databit value, parity value and stop bit value of the device or devices (water meters, natural gas meters, calorimeters ...). MMS100 Device Definitions The query sending period of the Mikrodev MMS100 series gateways are defined in the \"Poll Frequency\" section. The value is entered in seconds. The number of devices to be connected with the MMS100 series gateway is determined in the \"Device Count\" section. In the \"Physical Device Address\" section, the number of slots specified in the \"Device Count\" section starts from 1 and appended. In this section, the slave addresses of the devices in the field are defined. \"Physical Device Address\" is the section where the Modbus addresses are determined according to the device selections. MMS100 Address Table MMS100 Address Table section is the section in which the MBUS information of the MMS100 series gateways are written to which Modbus address. In this section, device numbers, physical addresses (slave addresses), data types, the names of the addresses and the addresses of the modbus are displayed. Terminal Terminal is the section where the command lines for the MMS100 series gateways are entered. In this section, information coming from the device is listed on the screen. In the \"Custom Command Input\" section, type the command to be queried (eg AT + VERSION =?) And click \"Send\" to send the query to the device. The query answer appears on the screen. Click \"Clear History\" in the \"Console Window\" section to clear the inquiries on the screen.","keywords":""},{"title":"SC100 Software Manual","type":0,"sectionRef":"#","url":"docs/Gateway-SC100-Software-Manual","content":"SERIAL GATEWAY CONFIGURATION SOFTWARE General Information The Assistant software is used to make all necessary settings for the Mikrodev Gateway devices. Thanks to the software, device settings can be made online and/or offline. The settings that are loaded on the device can easily be downloaded and the previously saved settings can easilly be uploaded into the device by the program. The connection between the program and the device can be established in various ways such as USB, Ethernet, GSM, Wi-Fi. For Ethernet supported devices; there is also the ability to search the network and list details with connection information. Device Connection USB Serial Connection One of the methods for establishing communication between PC and Mikrodev device in device configuration is USB serial connection. In order to perform USB connection between PC and device, you need to install USB driver for PCs with Windows 7/8 / 8.1 operating systems. There is no need to install the USB driver for Windows 10 operating systems. For serial connection over USB, “Connect over USB\" box in the Connect and Configure Your Device section of the Assistant software is selected. In the USB Port Selection section, you should select the port and click \"Connect\". USB connection will be established after that. (Figure 1) . TCP Connection – Device Discovery Mode \"Network Discovery\" option is used to detect and connect IP addresses of Mikrodev devices which are active in the local network. The \"Network Discovery \" box will be highlighted after the \"Connect via TCP\" box is checked in the Connect and Configure to Device section of the Assistant software. After clicking \"Scan Network for Mikrodev Devices\", the serial number, IP address, listening port and software versions of all Mikrodev devices which are active in the network are listed on the screen. (Fig. 2) You can connect the device on the list by double clicking on the device name on the screen. TCP Connection – Manual When manually entering the ip address and port number of the device that is active in the local network, \"Manual\" option is used. The \"Manual\" box is checked after the \"Connect over TCP\" checkbox is checked in the Connect and Configure Device section from the Assistant software. The IP address of the device to be connected is entered into the \"Device IP\" section, the port number is entered into the \"Port\" section and \"Connect\" is clicked. (Figure 3) Assistan software connects to the Mikrodev device with specified ip address and port number. Offline Settings Offline mode is used when parameter settings are made and saved without connecting to the device. Click on \"Click here for offline configuration\" on the Assistant main screen when you want to make the offline parameter settings. The device is selected in the screen that appears, and then \"Select this device\" is clicked. (Fig. 4) Offline parameter settings of the selected device can be made. In addition, using the \"Load from configuration file\" option on the same page, previously saved configuration values can also be loaded to the program. SERIAL GATEWAY Settings Status Screen It is the status information screen which shows related information to the connected Mikrodev device. This screen contains the device's manufacturing information, Ip settings and serial connection settings (RS-485, RS-232). (Fig. 5) You can access the web interface of the device from this screen as well. Basic Settings In the basic settings section, parameter set values are entered according to communication types. For Ethernet connection enter the local ip, gateway ip, subnet and for GSM connection enter the APN, user name, user password. SSID (Modem user name) and password are entered when wifi connection is requested. In addition; the password definition for access control to the Mikrodev device is performed on this page. In addition, device connection follow-up duration, auto reset duration, and configuration port can be entered. You can send ID after connection by checking the \"Send ID after connection\" checkbox. (Figure 6) Serial Gateway Settings The device has 2 separate routes for RS232 - Ethernet and RS485 - ethernet connections. In route 1, RS232 - Ethernet settings are made and in route 2, rs485 - Ethernet connection settings are made. On the TCP socket settings side, the TCP socket server is selected, the port is defined. The defined port should not be the same for RS232 and RS485, it should be different. In the IP filter section, you can define the TCP client IP that you want to connect to the device. Only the IP address can be connected to the device. If you do not want to filter, this section should be 0.0.0.0 as shown in the figure (Figure 7). Buffer settings are set here. The buffer size is used to define the packet size to be sent, and the buffer timeout, if the incoming data does not reach the specified buffer size, the time to wait for sending. In the Serial Settings section, baud rate, parity, stop bit and databit settings are made for RS232 and RS485. these settings must be made in accordance with the serial device to be connected to the Mikrodev device. Loading Settings to Device Click \"Device Management\" on the Assistant software to send the configuration settings to the device. Then click \"Send Configuration\" option. (Figure 8) After completing the configuration, the device must be rebooted in order to register the settings. (Figure 9) Restart the device by clicking \"Restart Device\" under \"Device Management\" on the main screen of the Assistant program. When the device is rebooted, you may need to remove and reinsert the USB cable to reconnect with the serial port. (Figure 10) The TCP connection between the device and the PC will be established automatically after the device is rebooted, after waiting approximately 20 seconds to reconnect to the device through the TCP connection. (Figure 11) Terminal","keywords":""},{"title":"Factory Settings","type":0,"sectionRef":"#","url":"docs/Mikrodiagram-Factory-Settings","content":"You can do factory settings of Mikrodev PLC, RTU and Gateway product families via USB connection. Before starting, make sure that all USB connections to the device are closed. Power OFF device, disconnect the DC supply connection. Connect the USB cable between the computer and the device. Power ON device, connect the DC supply. Select the correct port, click \"Open\". Then click on \"Auto Switch to Boot Prompt\" and wait for the device to be rebooted and start in Boot mode. After the device starts in boot mode, write \"AT+DEFAULT=1\" into the \"Send Command\" box and click \"SEND\" button. After write \"AT+DEFAULT=1\" into the \"Send Command\", write \"AT+RESET=1\" into the \"Send Command\" box and click \"SEND\" button.","keywords":""},{"title":"Format File System","type":0,"sectionRef":"#","url":"docs/Mikrodiagram-Format-File-System","content":"You can format the filesystem of Mikrodev PLC, RTU, Remote IO and Gateway product families via USB connecition. Before starting, make sure that all USB connections to device are closed. Power OFF the device, disconnect the DC supply connection. Connect the USB cable between the computer and the device. Power ON device , connect the DC supply. Select the correct port, click \"Open\". Then click on \"Auto Switch to Boot Prompt\" and wait for the device to be rebooted and start in Boot mode. After the device starts in boot mode, write \"AT+FORMATFS=1\" into the \"Send Command\" box and click \"SEND\" button. In this stage, the system light on the device will flash rapidly and the error light will be steady. After the process is finished, the system led will start to flash normally again. The format procedure will take about 2-3 minutes. Do not power off the device during the format process. The device will reset several times and it will disconnect the USB connection. You can check whether the format process has finished or not by checking the boot version of the device. To check the boot version connect USB port and then write \"AT+VERSION=?\" into the \"Send Command\" box and click \"SEND\" button. If you can see the boot version on the console after this command, it means that you are ready to load the firmware on the device. Go to Step 7 on Loading Firmware page and continue loading firmware. Since the device is formatted, initial boot time will take significantly longer compared to standard firmware loading process. Download Serial Loader application from the link below : MikrodevSerialLoader","keywords":""},{"title":"Updating Firmware","type":0,"sectionRef":"#","url":"docs/Mikrodiagram-Updating-Firmware","content":"You can update the firmware of Mikrodev PLC, RTU, Remote IO and Gateway product families via USB connecition. Before starting, make sure that all USB connections to device are closed. Power OFF the device, disconnect the DC supply connection. Connect the USB cable between the computer and the device. Click the \"...\" button and select the firmware with .mx3 extension. Power ON device , connect the DC supply. Select the correct port, click \"Open\". Then click on \"Auto Switch to Boot Prompt\" and wait for the device to be rebooted and start in Boot mode. After the device starts in boot mode, click on the \"Start Loading Firmware\" button Wait for the firmware uploading to finish After the process is completed, the USB connection will be closed automatically and the device will reboot once after verifying the flash file system. Wait for a few minutes for the device to finalise the firmware upgrade and click \"Open Port\" to connect the device again. And check version information to confirm if the update operation is succesful by clicking on the \"SEND\" button with \"AT+VERSION=?\" parameter. Download Serial Loader application from the link below : MikrodevSerialLoader","keywords":""},{"title":"PLC Manuals","type":0,"sectionRef":"#","url":"docs/Mikrodiagram-User-Manual","content":"Mikrodiagram User Guide Mikrodiagram User Manual MP 110 Series PLC Manuals MP 110 Series Device Manual MP 110 MP 110EMP 110G MP 110 Series Hardware Manual MP 110 Hardware Manual MP 110 Series Programming Manual MP 110 Programming Manual MP 110 Series Software Mikrodiagram XIO110 Series Expansion Modules Manuals XIO110 Series Expansion Modules Device Manuals XIO110.DI16XIO110.DQ16XIO110.AI8XIO110.AO8XIO110.P6 MP 110 Series Expansion Modules Hardware Manual XIO110 Hardware Manual MP 211 Series PLC Manuals MP 211 Series Device Manual MP 211EMP 211EGMP 211EGLMP 211EWMP 211EL MP 211 Series Hardware Manual MP 211 Hardware Manual MP 211 Series Programming Manual MP 211 Programming Manual MP 211 Series Software Mikrodiagram XIO211 Series Expansion Modules Manuals XIO211 Series Expansion Modules Device Manuals XIO211.DI16XIO211.DQ16XIO211.AI8XIO211.AO8XIO211.P6 MP 211 Series Expansion Modules Hardware Manual XIO211 Hardware Manual","keywords":""},{"title":"Device Error Codes","type":0,"sectionRef":"#","url":"docs/Mikrodiagram-DeviceErrorCodes","content":"Error Enum\tError No\tDescription\tSolutionERR_FS_FORMAT_FAILED\t2\tFile System Error\tFormat filesystem ERR_FS_FORMAT_SUCCESSED\t3 ERR_FS_FORMATED\t4 ERR_FS_FS_FAILED\t5\tFile System Error\tFormat filesystem ERR_FS_FLASH_STATUS\t6\tFile System Error ERR_FS_CARD_NOT_DETECTED\t7\tFile System Error ERR_FS_CARD_CHANGED\t8\tFile System Error ERR_FS_NOT_ERASED\t9\tFile System Error ERR_FS_NOT_FORMATTED\t10\tFile System Error ERR_FS_INVALID_MBR\t11\tFile System Error\tFormat filesystem ERR_FS_INVALID_PBR\t12\tFile System Error\tFormat filesystem ERR_FS_INVALID_FAT\t13\tFile System Error ERR_FS_INVALID_NAME\t14\tFile System Error ERR_FS_INVALID_HANDLE\t15\tFile System Error ERR_FS_INVALID_PARAM\t16\tFile System Error ERR_FS_NO_EMPTY_BLOCK\t17\tFile System Error ERR_FS_INVALID_BLOCK\t18\tFile System Error ERR_FS_ECC\t19\tFile System Error ERR_FS_ECC_CORRECTABLE\t20\tFile System Error ERR_FS_FILE_OPENED\t21 ERR_FS_FILE_EXIST\t22\tFile System Error ERR_FS_DIR_NOT_EMPTY\t23\tFile System Error ERR_FS_EOF\t24 ERR_FS_FILE_NOT_OPENED\t25\tFile System Error ERR_FS_FILE_NOT_EXIST\t26\tFile System Error ERR_FS_NO_LONG_NAME\t27\tFile System Error ERR_FS_NOT_FOUND\t28\tFile System Error ERR_FS_INCORRECT_FAT\t29\tFile System Error\tFormat filesystem ERR_FS_ROOT_DIR\t30\tFile System Error ERR_FS_LOCKED\t31\tFile System Error ERR_FS_NOT_PERMITTED\t32\tFile System Error ERR_FS_OUT_OF_MEMORY\t33\tFile System Error ERR_FS_OUT_OF_ROOT_ENTRY\t34\tFile System Error ERR_FS_NO_MORE_ENTRY\t35\tFile System Error ERR_FS_SM_TIMEOUT\t36\tFile System Error ERR_FS_SYSTEM_PARAMETER\t37\tFile System Error ERR_FS_INTERNAL\t38\tFile System Error ERR_FS_FILE_NAME_LEN_TOO_LONG\t39\tFile System Error ERR_FS_NO_EMPTY_CLUSTER\t40\tFile System Error ERR_FS_FORMAT_BLOCK\t41\tFile System Error\tFormat filesystem ERR_FS_INIT\t42\tFile System Error\tFormat filesystem ERR_FS_FIRST_BAD_BLOCK\t43\tFile System Error\tFormat filesystem ERR_FS_CIS_BLOCK\t44\tFile System Error ERR_PAT_OK\t45 ERR_PAT_PAGE_INDEX_OUTOFBOUND\t46\tFile System Error\tFormat filesystem ERR_PSB_PAGE_INDEX_OUTOFBOUND\t47\tFile System Error\tFormat filesystem ERR_PAT_EXCESSIVE_PAGE_COUNT\t48\tFile System Error\tFormat filesystem ERR_PSB_EXCESSIVE_PAGE_COUNT\t49\tFile System Error\tFormat filesystem ERR_PAT_INVALID_PAGE\t50\tFile System Error\tFormat filesystem ERR_PAT_PAGES_NOT_FOUND\t51\tFile System Error\tFormat filesystem ERR_PAT_NO_FREE_PAGE\t52\tFile System Error\tFormat filesystem ERR_PAT_NO_VALID_PAGE\t53\tFile System Error\tFormat filesystem ERR_PSB_INVALID_PAGE\t54\tFile System Error\tFormat filesystem ERR_PAT_NOT_PERMITTED\t55\tFile System Error\tFormat filesystem ERR_PAT_WRONG_WRITE_SIZE\t56\tFile System Error ERR_PAT_OUT_OF_CHIP\t57\tFile System Error\tFormat filesystem ERR_FLASH_WRITE_WRONG_PAGE_SIZE\t58\tFile System Error ERR_SYSTEM_ONESHOT\t59\tOperating System Eror\tFirmware Update ERR_SYSTEM_MODBUSPOLLER\t60\tModbus Protocol Stack Eror\tFirmware Update ERR_SYSTEM_APPFILE\t61\tPLC Project File Error\tRe-upload PLC project with Mikrodiagram ERR_FIRMWARE_IDREAD\t62\tFirmware code security Error\tContact Manufacturer ERR_FIRMWARE_IDMATCH\t63\tFirmware code security Error\tContact Manufacturer ERR_FILEPAGES_MISS\t64\tFile System Error\tFormat filesystem ERR_OUT_OF_RAM\t65\tFile System Error\tFirmware Update ERR_FBD_OK=100 ERR_FBD_WRONGNETHEADER ERR_FBD_EXCEEDBLOCKCOUNT ERR_FBD_NETFILESIZE ERR_FBD_WRONGBLOCKORDER ERR_FBD_WRONGBLOCKHEADER ERR_FBD_BLOCKSIZEMISMATCH ERR_FBD_CHECKSUMFAIL ERR_FBD_NEWBLOCKALLOCATIONFAIL ERR_FBD_FILEERROR ERR_FBD_EXCEEDBUFSIZE ERR_FBD_PHYALLOCATIONFAIL ERR_FBD_DEADLOCK ERR_FBD_MODBUSBLOCKCOUNT ERR_FBD_PHYSCNTCOUNT ERR_FBD_WRONGBLOCKTYPE ERR_FBD_MACROSIZE ERR_FBD_RENTETIVESIZE ","keywords":""},{"title":"Special Modbus Registers","type":0,"sectionRef":"#","url":"docs/Mikrodiagram-Special-Modbus-Registers","content":"Mikrodev Devices have MODBUS registers which you could set some special parameters. You can find these special registers in the following table. Please note that the values you set via MODBUS will be saved into retentive memory once every 5 minutes for security purposes. After setting the parameter via MODBUS, if you power off the device earlier than 5 minutes, the changes may be lost. SHORT NAME\tEXPLANATIONS\tMODBUS ADRESS\tTYPE\tSIZEConfigPort;\tMikrodiagram Connection TCP Port\t0\tu16_t\t1 ConnectionTrack;\tServer Timeout, Track the up sockets is alive or not\t1\tu16_t\t1 ConfigPlcReset;\tReset the PLC when the defined seconds if there is no sokect activity over ETH or GSM\t2\tu16_t\t1 ConfigAinVoltage;\tNA\t3\tu16_t\t1 ConfigTempType;\tNA\t4\tu16_t\t1 ConfigPto;\tConfiguration of Pulse Train Output Functionality. 1- Enable, 0- Disable\t5\tu16_t\t1 ConfigDhcp;\tConfiguration of DHCP. 1- Enable, 0- Disable\t6\tu16_t\t1 ConfigCanSpeed;\tConfiguration of CAN Extension Bus Spees. 0- 500 Kbit, 1- 250 Kbit, 2- 100 Kbit, 3- 1000 Kbit\t7\tu16_t\t1 ConfigCanTmo;\tTimeout value for CAN extensions, milisecond\t8\tu16_t\t1 ConfigTimeZone;\tTime zone,\t9\ts16_t\t1 ConfigGsmReset;\tPower Reset the integrated GSM if there is no GSM activity after defined seconds( After firmware version 15.08. Before 15.08 this value is fixed to 480 seconds)\t10\tu16_t\t1 ProductSubCode;\tProduct Familiy code\t11\tu16_t\t1 BoardPcbVersion;\tPCB version number\t12\tu8_t\t1 VersionHighByte;\tFirmware Version Number, High Byte u8_t\t0 VersionLowByte;\tFirmware Version Number, High Low\t13\tu8_t\t1 ErrorCode;\tPLC Error State u8_t\t0 CsqLevel;\tGSM CSQ Level\t14\tu16_t\t1 LwipTmo;\tResets the integrated ETH Phy if there is no ETH activity after defined seconds AND resets the GSM Modem if the PPP(Point to Point) connection has no activity after defined seconds.\t15\tu16_t\t1 Mac;\tMAC adress of ETH units\t16\tu32_t\t2 SerialNo;\tSerial number of the PLC\t18\tu32_t\t2 LocalIp;\tLocal IP adress of the PLC over ETHERNET\t20\tu32_t\t2 Netmask;\tSubnet Mask of the PLC over ETHERNET\t22\tu32_t\t2 Gateway;\tGateway adress of the PLC over ETHERNET\t24\tu32_t\t2 PowerResetCount;\tKeep to number of power reset counter of the device.\t26\tu32_t\t2 AppPlcTime;\tPLC Current Dat/Time\t28\tu32_t\t2 AppPlcRam;\tPLC Current RAM Usage\t30\tu32_t\t2 AppPlcSecret;\tPLC Security Info\t32\tu32_t\t2 ScheduleItemList[64];\tThis is used with, ViewPLUS SCADA to control scheduling items\t34\tu32_t\t128 GprsName[32];\tGSM APN Username - must be terminated with NULL char\t162\tchar\t16 GprsPssw[32];\tGSM APN Password - must be terminated with NULL char\t178\tchar\t16 GprsPin[8];\tGSM PIN - Not Used Now\t194\tchar\t4 GprsApn[64];\tGSM APN Name - must be terminated with NULL char\t198\tchar\t32 MenuFbdAddress;\tWhich of the blok values want to be seen on LCD display\t214\tu32_t\t2 MenuLine1[24];\tLCD raw 1 text - must be terminated with NULL char\t216\tchar\t12 MenuLine2[24];\tLCD raw 2 text - must be terminated with NULL char\t228\tchar\t12 E_MODCAN_DO16; 16000 + 0x000 E_MODCAN_RL16; 16000 + 0x080 E_MODCAN_AQ2; 16000 + 0x180 E_MODCAN_DI16; 16000 + 0x200 E_MODCAN_AI2; 16000 + 0x280 E_MODCAN_RTD2; 16000 + 0x300 E_MODCAN_DI8DQ8; 16000 + 0x380 E_MODCAN_AI4AQ4; 16000 + 0x400 E_MODCAN_DI8; 16000 + 0x480 E_MODCAN_DQ8; 16000 + 0x500 E_MODCAN_AI4; 16000 + 0x580 E_MODCAN_AQ4; 16000 + 0x600 E_MODCAN_T8; 16000 + 0x680 E_MODCAN_LC2; 16000 + 0x700 E_MODCAN_T4; 16000 + 0x780 E_MODCAN_STATUS_TMO; 19000 E_MODCAN_STATUS_TX; 19002 E_MODCAN_STATUS_RX; 19004 ","keywords":""},{"title":"Mikroterminal Interface","type":0,"sectionRef":"#","url":"docs/Mikrodiagram-Mikroterminal-Interface","content":"The mikroterminal program can be accessed from Mikrodiagram Tools menu. Opening the USB COM Port To open the COM port on the mikroterminal, select the port where the connection between the device and the computer is established in the \"port name\" section. (The connection port between the device and the computer can be controlled from the \"device manager\".) When the \"Open\" tab is clicked, the COM port information displayed in the \"console window\" is displayed. Sending The AT Command With AT commands, the current settings on the device can be read or the desired values can be written to the device. Click on the \"Read\" button to read the current settings on the device. When the \"Read\" button is clicked, the current value in the device is displayed in the \"console window\". In case the current settings of the device are to be changed by AT commands, the value to be changed is written on the window, then the \"Write\" button is clicked. The value written is displayed in the \"console window\". If the write operation is successful, the command “OK\" is printed in the console window. Custom Command Window AT commands can also be sent from the custom command input window. If the current value in the device is to be read, the window \"AT + SPECIALTY =?\" is written, the \"send\" button is clicked, the current value is displayed in the console window. If you want to write a value from the device specific command window, the command \"AT + SPECIALTYPE = WRITE KOMUT\" is defined and the value written when the \"send\" button is clicked is displayed in the console window. If the write operation is successful, the command \"SPECIALTY = OK\" is printed in the console window. List of The AT Command Some of the AT commands used in Mikrodev products are only readable and some have both readable and writeble capabilities. The commands on the AT command list differ according to the devices. The AT commands used in GSM, Ethernet, Wi-Fi enabled products are indicated in the headers (E / G / W). AT+FBD In Mikrodiagram, it is used to read block value and write block value by using \"block numbers\" of door types. If the value is to be written, \"AT + FBD = BLOKNO, VALUE\" is defined and clicked on the \"write\" command. If the block value is to be read, \"AT + FBD = BLOKNO,?\" is defined and clicked on the \"write\" command. The \"read\" command is not used in the AT + FBD command, only the \"write\" command is used. Example; Since the 3000 no of block is a register block, both writing and reading can be done. When \"AT + FBD = 3000,10\" is entered and \"summer\" button is clicked, \"10\" value is written on block. Value information written is displayed as \"FBD = OK\" in the console window. If you want to read the block value of no 3000 , \"AT + FBD = 3000,?\" is written and when the \"write\" command is clicked, the block value is displayed as \"FBD = 10\" in the console window. AT+LOCALIP(E/W) Used to identify local IP to devices with Ethernet or Wi-Fi capability To change the local IP, type \"AT + LOCALIP = IP\" and click \"write\" command to write IP to the device. Click on the \"read\" command to read the current IP value. AT+MAC(E/W) It is used to define the MAC address for devices with Ethernet or Wi-Fi capability. Numbers can be defined in hexadecimal. The MAC address can be changed by typing \"AT + MAC\" command and clicking \"write\". The current MAC address can be read with \"read\" command. AT+GATEWAY(E/W) It is used to define gateway to devices with Ethernet or Wi-Fi capability. In a local network, the gateway is usually the IP address of the modem. AT + GATEWAY \"command to read and write the gateway address. AT+NETMASK(E/W) It is used to define \"netmask\" for devices with Ethernet or Wi-Fi capability. Netmask can be read and written with \"AT + NETMASK\" command. AT+ONLINE It is used to start and stop the online viewing from the mikroterminal while online viewing is performed in Mikrodiagram. Online monitoring is started when AT + ONLINE = 1 command is sent. Online monitoring is stopped when AT + ONLINE = 0 command is sent. AT+VERSION Mikrodev products software and hardware version information can be accessed with AT + VERSION command. The command \"AT + VERSION\" is only readable. The write operation can not be performed. The \"Quick user guide\" contains detailed information on the version. AT+SERIALNO The Mikrodev products serial number information can be accessed with the command \"AT + SERIALNO\". The command \"AT + SERIALNO\" is only readable. The write operation can not be performed. The \"Quick user guide\" contains detailed information on the serial number. AT+CONNECTION(G) Connection status check of Mikrodev products with GSM data exchange feature is done by \"AT + CONNECTION\" command. The AT + CONNECTION command has only readability. The AT + CONNECTION command receives even-numbered values 0-8. The AT + CONNECTION command response table is below. AT+HELP AT command list is reached. Information on the use of commands is also provided. Writable AT commands, AT commands giving status information are provided. AT+SETTIME With the AT + SETTIME command, the device real time clock can be read and written. When the AT + SETTIME command \"read\" is clicked, the current time of the device readable in the console window, the date and time to be set to the command window; When set to \"dd-mm-yyyy hⓂ️s\" and the \"summer\" command is sent, the time set is displayed in the console window. AT+ERROR If the device is in error mode, it is used to learn the error code. If AT + ERROR = 0, then there is no error condition. AT + ERROR = 61 means that the device does not have Mikrodiagram installed The AT + ERROR command is only a readable command. AT+DEFAULT The AT + DEFAULT command is used to reset the unit to factory settings. When AT + DEFAULT = 1 command is written and \"write\" is clicked, the device is restored to factory settings. When the device is restored to factory settings, the settings made with the AT commands are restored to factory settings, the most recently loaded Mikrodiagram project is deleted from the device. After the command is sent, the device drops to error ERROR = 61 The command AT + DEFAULT is only writable. AT+RESET The AT + RESET command is used for software restart of the device. When AT + RESET = 1 is typed and the \"send\" button is clicked, the device is restarted. AT+PLCRESET The AT + PLCRESET command is used when TCP communication protocols require the device to be reset after a certain period of time. If AT + PLCRESET = 0 command is sent to the device, the command is disabled. The AT + PLCRESET command runs at a minimum 60 second (sec) scale. To learn the current PLCRESET command programmed in the device, enter AT + PLCRESET =? command can be sent to the device. AT+CONFIGPORT The AT + CONFIGPORT command is used to identify the port number used in situations where a TCP port connection from Mikrodiagram is desired to be installed on devices with a TCP communication port (Ethernet, GSM, Wi-Fi). The factory default ConfigPort number is 502. It can be changed with AT + CONFIGPORT command. AT + = CONFIGPORT? command can be viewed with the current configport. CONFIGPORT is disabled when a selected TCP socket block is added to the device as a server Mikrodiagram. The device's listening port is the listening port that is inserted into the TCP socket block. AT+SERVERTIMEOUT AT+FORMATFS AT + FORMATFS = 1 command is used to format Mikrodev products. When the AT + FORMATFS = 1 command is sent to the device, the firmware will be deleted, so it is necessary to load the firmware again to program the device. AT+CANTIMEOUT AT + CANTIMEOUT command Mikrodev is used to protect the position of the inputs and outputs on the expansion units for a specified period of time in case of communication failure between CPU modules and expansion units. The CANTIMEOUT time runs in millisecond (ms) time scale. When the communication link between the input modules and the CPU breaks, inputs up to the number of CANTIMEOUT entered into the CPU do not change position in the software. When the communication link between the output modules and the CPU breaks, the outputs do not change positions as long as the CANTIMEOUT times entered in the output modules. The CANTIMEOUT time input to the CPU is used for the input modules, the CANTIMEOUT time input to the output modules for the output modules is used. For example, if AT + CANTIMEOUT = 60000 (ms) is defined for the CPU and expansion units, the incoming digital input signal position is maintained through the expansion unit until 60000 (ms) (1 minute) after communication between the digital input (DI) expansion unit and the CPU is interrupted. 60000 ms. After the CANTIMEOUT time has elapsed, the digital inputs are pulled to logic (0) if no connection to the expansion unit is still present. AT+GPRSIP(G) The data package (internet package) is the IP of the SIM card. Supplied by the GSM operator. It can only be read by AT + GPRSIP command. Changed. If the device is to be used as a server, a SIM card with a fixed IP address must be provided. When a SIM card with a fixed IP is provided, APN information must also be received from the GSM operator AT+GPRSAPN(G) AT + GPRSAPN command is used to define APN for Mikrodev products with GSM TCP communication feature. Since the APN that needs to be defined varies according to the SIM card operator used in the device,it must be supplied from the customer service of the relevant GSM operator. The APN has to be defined if the used device is to be used as a server in the TCP communication with the GSM line (if the device will connect to another IP). Note: The SIM card used in the APN-defined device must have a static IP AT+CSQ(G) It is the value of the GSM signal quality (the power of the GSM line) that the devices with GSM capability are installed. It can be between -1 and 31. Even if the SIM card is not inserted, the value can be read while the GSM antenna is connected. (Emergency calls are used on mobile phones when the SIM card is not inserted.) AT + CSQ is only readable command. The pull chart is as follows. AT+SIM(G) It is used for SIM card inquiry in Mikrodev products with GSM hardware. With \"AT + SIM =?\" read only command. The value can not be written. If the answer to the command is SIM = 1, it indicates that the SIM card is correctly installed and is fault-free. The response to the command is SIM = 0 to indicate that the SIM card is not inserted, is incorrectly installed or is defective. AT+WIFISSID(W) It is used to identify the WI-FI network name to be included in WI-FI enabled products. In the \"AT + WIFISSID\" command window, the WI-FI name is written, the \"write\" command is clicked, When you want to read the current WI-FI SSID, click \"AT + WIFISSID\" \"read\" command. AT+WIFIPSSW(W) It is used to describe the password of the WI-FI network to be included in WI-FI-enabled products. AT + WIFIPSSW WI-FI password is written into the command window, click on the \"write\" command, When the current WI-FI password is desired to be read, the AT + WIFIPSSW \"read\" command is clicked. AT+TEMPTYPE For products with RTD temperature sensor input, temperature sensor selection is made. Hardware must be manufactured in accordance with the temperature sensor of the product. The PT100 temperature sensor can be used if AT + TEMPTYPE = 0. The NTC temperature sensor can be used if AT + TEMPTYPE = 1. The PT1000 temperature sensor can be used if AT + TEMPTYPE = 2. AT+PRODUCTNO Hardware product code inquiry for the products in Mikrodev product family is made. The code that starts with the letter \"p\" (p42, p46, etc.) in the product embedded software (MP201_E_s11.09p42) must match the AT + PRODUCTNO code. AT + PRODUCTNO is the only readable command. AT+PTO It is used to activate the \"pulse train output\" and \"axis control\" blocks. AT + PTO = 1 command is activated. AT + PTO = 0 disable the command. For current status inquiry, \"AT + PTO =?\" Command can be sent. AT+SOCKET It is used to monitor the active connections of TCP socket blocks in Mikrodiagram project. When AT + SOCKET = <\"TCP Socket Block\" Block Number> command is sent to the device, the connections made from the relevant TCP socket block are displayed. Those with status \"1\" indicate that the connection exists. The \"status\" states, which are different from \"1\", indicate that the link already existed, but that the link broke down before the specified time. AT+POWERCOUNT It shows how many times the device is restarted after Mikrodiagram project is loaded. The first value is 1 since the device is restarted after the mikrordiagram project has been loaded. Writable and readable command. AT + = POWERCOUNT? , The current value is queried, and the desired value can be written with the command AT + POWERCOUNT = Set value","keywords":""},{"title":"MP110 Series Software Manual","type":0,"sectionRef":"#","url":"docs/PLC-MP110-Series-Software-Manual","content":"MP110 Software Manual","keywords":""},{"title":"MP110 Series Hardware Manual","type":0,"sectionRef":"#","url":"docs/PLC-MP110-Series-Hardware-Manual","content":"MP110 General Information MP110 Hardware Manual Physical Interfaces General Device Specifications Note: May differ on some models Installation Information Rail Installation DIN Rail Mountage First, the upper part of the device is mounted on the DIN rail. Then, with the help of the springs behind the device, when a lightly force is applied to the lower part, the device locates into the DIN rail easily and the montage is completed. DIN Rail Demountage To demount the device, firstly it is pulled from the bottom using flexibility of the spring, the device is removed from the DIN Rail and the demounting is completed. Expansion Installation The MP110 product and its extensions are mounted by sliding over the rail in such a way that the connectors correponds. Connection Diagrams Supply Connection Digital Inputs Digital Outputs Analog Inputs RS485 Serial Port","keywords":""},{"title":"MP211 Series Hardware Manual","type":0,"sectionRef":"#","url":"docs/PLC-MP211-Series-Hardware-Manual","content":"MP211 General Information MP211 Hardware Manual Physical Interfaces General Device Specifications Note: May differ on some models Installation Information Rail Installation DIN Rail Mountage First, the upper part of the device is mounted on the DIN rail. Then, with the help of the springs behind the device, when a lightly force is applied to the lower part, the device locates into the DIN rail easily and the montage is completed. DIN Rail Demountage To demount the device, firstly it is pulled from the bottom using flexibility of the spring, the device is removed from the DIN Rail and the demounting is completed. Expansion Installation The MP211 product and its extensions are mounted by sliding over the rail in such a way that the connectors correponds. Connection Diagrams Supply Connection Digital Inputs Digital Outputs Relay Outputs Analog Inputs Analog Outputs RTD Inputs RS485 Serial Port RS232 Serial Port","keywords":""},{"title":"MODBUS Application Notes","type":0,"sectionRef":"#","url":"docs/MODBUS-Application-Notes","content":"MODBUS COMMUNICATION Modbus can provide communication between approximately 247 devices. The operating logic is based on data exchange between a master device and one or more devices connected to the master on the same network. It is often used to interconnect a controller computer with remote terminals. Data transfer is provided in the form of ones and zeros, that is, in bits. Although there are many versions, the most used versions are Modbus RTU and Modbus TCP/IP. This guide shows how Modbus TCP/IP and Modbus RTU communications are implemented on Mikrodev products. If our device is Mikrodev - PLC product, you can program it on Mikrodiagram program. If our device is Mikrodev RTU product, we use Telediagram program. So our programmers are customized to our products. The blocks used and their settings are the same in Telediagram and Microdiagram programs. In our devices, under the function blocks, 2 separate addressing as Block address (B:) and Modbus address (M:) are used. B: is used for functions belonging to our product family, and M: is used for Modbus communication. MODBUS TCP/IP Communication As we mentioned before, there can be 1 Master/Master and up to 246 Slave/Slave devices in MODBUS Communication. We use TSB block for our Master or Slave device to communicate with TCP/IP protocol. We can add function blocks from the Door Types window or by right-clicking in the project area. Figure 1: TSB Block And High Gate for Enable As you can see in Figure 1, we can set the IP and Port information from inside the TSB block, as well as from the outside using a register. To observe the connection status, we can put a flag or register on the Con output to observe its value. 0 means no connection, 1 means there is a connection. In function block settings, it is more practical to write non-variable values in the block. You can see the TSB block settings in Figure 2. Figure 2: TCP Socket Setting Figure 3: Media Type and Other Settings If our device is going to be Modbus Master by connecting our TSB Block to a Master block, we select the TCP client option from the Parameters;TCP Socket section (Figure 2) and enter the Server Port and Server IP of the Slave device to which we want to connect.;If our device is going to be Modbus Slave in communication by connecting our TSB Block to a Slave block, Parameters;TCP Socket setting (Figure 2) TCP Server is selected. TCP Server settings section will be active. Here, the TCP/IP port of our slave device is written. If we want, we can limit the devices to be connected to our device using the IP filter method by filling in the Server IP section. Supported and desired media type (Figure 3) can be selected from Ethernet, GSM or WiFi. MODBUS TCP/IP Slave Settings We explained TSB settings in the previous section. Here, TCP Socket, TCP Server should be selected in TSB block for Slave device setting and Port number should be entered. For MODBUS communication, we add MODBUS TCP Slave, MTS block to TSB Block (Figure 4). Figure 4: Add MODBUS TCP Slave Function Block The block connections for the slave settings of our device are shown in Figure 4. We define the slave ID identifier from inside the MTS function block (Figure 5). We can also observe the data traffic of the Slave side in Modbus Communication. For this, if we want to get the number of packets received, the number of faulty packets and the last packet status information, we can use it by connecting a flag or register to the Rx, Err, Sta outputs, respectively. Figure 5: Modbus TCP/IP Slave Settings (Exp: Slave address : 1) MODBUS TCP/IP Master Settings After making the relevant settings from the TSB settings (MODBUS TCP/IP Communication), we add the MODBUS TCP Master, MTM block to our TSB Block (Figure 6). If it is in the function block, you can see the Request Timeout and other settings. Figure 6: Modbus TCP/IP Master Connection We can send requests from our master device to Slave devices. These requests can be made by reading the values of the registers/registers defined by the MODBUS addresses (M:) in Slave devices or writing values to these registers. When a rising edge hits the trigger pin of the read/write blocks, the reader/writer command is sent to the Slave device and a response is expected. We can add MODBUS Reader or Printer blocks to our MTM block as shown in Figure 7. These blocks are shown as Word, Float and Long. MWR/MWWr, Word Reader/PRINTER 16-bit positive it is used for integer values. MFR/MFWR, Float Reader/Printer is used for 32-bit decimal values. MLO/MLWR is used for Long Readers/printers and 32-bit integers. Figure 7: Request Sending(Write/Read) of Modbus Master Device to Other Slave Devices, Communication Instead of reading and writing values from consecutive registers of the same data type in separate blocks, we can read and write tables with a single function block. It is recommended to use MODBUS Read/Write Table for this. The MODBUS Status block is recommended to check the connection status of a particular Slave device. When a negative word value is to be read, the MWR block is connected to the Long transaction block, and the transaction type is selected as “Word to Signed” and the negative values are read.MODBUS reader and writer blocks settings are shown in Figure 8 and Figure 9. Figure 8: Modbus Word Reader Figure 9: Modbus Word Writer Common values from Figure 8 and 9 are ID number, Register Address and Byte Sequence of the Slave device to be read/written. Function Code varies for register type and value. You can also see Other Settings in the pictures. Function Code values are 4 types according to the type of registers on the related Slave. Reading values are classified as follows. Function Code values are divided into 3 for the Write operation on the corresponding Slave. The classification of write values is as follows. Figure 10: Function Codes Description Byte Order varies by manufacturer. The correct order can be found in the device user's manual. If we want the values to be permanent or 0 value written when there is no connection, adding it to the log-kayıt memory, Dev-net synchronization or seeing it from the web interface, this section is in this section. We can make adjustments. MODBUS RTU Communication As TCP protocol is used in MODBUS TCP/IP communication. RS232 and RS485 serial port communication is used in MODBUS RTU communication. For the cable connections of RS232 and RS485 devices, refer to the product user manual. Serial port communication is defined in our program as follows. Figure 11: Serial Port Block and Settings Its settings for serial port communication are shown in Figure 11. Serial Port No selection is to define which port of our device is connected to. Serial Port No:0 for RS485 is 1 for RS232. Port type should be selected accordingly. Baudrate serial communication value can be selected from the list, or the Other option can be used for values that are not in the list. Databits, Parity and Stopbit data are also entered. In this way, Serial port settings are completed. In this section, MODBUS RTU Slave and MODBUS RTU Master device settings will be displayed respectively. MODBUS RTU Slave Settings The physical cable connections and port settings of our MODBUS RTU supported Slave device are shown in the Serial Port Block in the previous section (MODBUS RTU Communication). In this section, we will show the MODBUS RTU Slave settings of my device. We select MODBUS RTU Slave from the Door Types section in programming and connect it to the Serial Port Block. Figure 12: MODBUS RTU Slave Connection and Settings MRS; When MODBUS RTU Slave block is clicked, Modbus Slave Address definition section is displayed. In Picture 9, Modbus Slave Address is defined as 1. We can also define the Modbus Slave address of our slave device here. Using the Rx, Err, and Sta connections of the MODBUS RTU Slave block, we can see the received data packet count, the number of faulty packets and the status of the last packet data by connecting a flag or register. MODBUS RTU MASTER Settings MODBUS RTU Slave, MODBUS RTU Master device is required to receive or send data from the device. For this, the settings of our device, which will be defined as MODBUS RTU Master, are explained in this section. In programming, MODBUS RTU Master , connection of MRM block is as shown below. Figure 13: MODBUS RTU Master Connection and Settings Request Timeout, which is the data waiting time, can be set from Function Block settings, block name/Line definition. By connecting a register or flag to the Tx, Err and Sta outputs of the function block, the number of data packets sent, the number of faulty packets and the last packet status can be seen. A suitable MODBUS Word, Long, Float reader or writer block can be connected to the MRM output to read or write data from Slave devices with MODBUS RTU protocol. Instead of reading and writing values ​​from consecutive registers of the same data type in separate blocks, we can do table read-write with a single function block. For this, it is recommended to use the MODBUS Read/Write Table. MODBUS Status block is recommended to check the connection status of a particular Slave device. Figure 14: Connection of Modbus Read/Rrite Block to Modbus RTU Master Block MODBUS read and write blocks are also used in common with TCP and RTU. Sample Project: Read Analyzer with MODBUS RTU Protocol In order to be able to read the analyzer with the MODBUS RTU protocol, the analyzer must support the RS232 and RS485 connections, which are the connection types in our device. In order to provide Serial Communication from supporting devices, we need to know the required values. You can find the information in the user manual of the device to be connected. For example, we will read an analyzer with RS485 communication. For this, Port type RS485 and Port no:0 are selected. If we used RS232, Port type RS232 and Port no:1 should be selected. We enter the baudrate value of the analyzer from the Baudrate Selection section. If this value is not in the list, we can enter Other. When we enter the Veribits, parity and stop bit values ​​for the connection and click OK, our Seriport block settings are completed. We add Modbus RTU Master and Read write blocks. In read-write blocks, we use it to access values ​​that do not have read or write protection from the analyzer. Modbus RTU Id, Register Address, Function Code and Byte Order settings should be entered in this block. These settings can be learned from the Analyzer user manual or from the interface on it, if available. Updating the values ​​to be read/written occurs when a rising edge signal arrives at the Ttk pin on the Modbus Read/Write Blocks. It is recommended to use the Modbus Read/Write Table, as the values ​​of the same type of registers with multiple sequential addresses are read in value readings. Figure 15: Read Analyzer with MODBUS RTU Protocol Other Function Blocks and Features Function blocks used and not mentioned with the MODBUS protocol are described in this section. MODBUS Read/Write Table Block It is used in MODBUS TCP or RTU Master blocks. It is recommended to use this function block when reading data values ​​from registers of the same type with sequential addresses, to avoid duplication. The connection type is as shown below. Figure 16: Connection and Settings of MODBUS Read/Write Table Function Block Table settings are the same as Read and write settings. The advantage of Modbus Read/Write Table is that we can read or write values ​​to Sequential address registers with a single MODBUS Status Function Block Connects to MODBUS Master blocks. It is used when we want to get status information of slave devices. Connection type and settings are as shown below. Figure 17: Connection and Settings of MODBUS Status Function Block The MSta Mas entrance is the entrance to the Master block. Rtu is the Slave ID entry from which we want to receive status information. It can be defined by adding a register to this part or from the settings section. MODBUS Gateway Function Block MODBUS Gateway devices are basically used to create a gateway for master units in MODBUS TCP network to access slave units in MODBUS RTU network. Request packets coming over MODBUS TCP are converted into MODBUS RTU packets and sent to the RTU network. It also receives the response from the RTU network and sends it to the MODBUS TCP network. On the MODBUS TCP side, the number of TRANSACTION in requests and responses must be the same, and it is also the duty of the GATEWAY device to provide this. Mikrodev Control devices can be programmed to work simultaneously as GATEWAY among the protocols they support. One of the blocks that provides this is the MODBUS GATEWAY block. MODBUS GATEWAY block can serve in 2 directions listed below: 1- MODBUS TCP Master device to MODBUS RTU Slave device 2- MODBUS RTU Master device to MODBUS TCP Slave device Master in block usage and Slave blocks are enough to start working as GATEWAY. In case of a request for a different ID than the Modbus ID on the slave block side, the relevant request will be read through the master block. Note that Modbus RTU Slave ID and Modbus TCP/IP Slave ID are not the same. Figure 18: Connection and Settings of MODBUS Gateway Function Block","keywords":""},{"title":"Example Projects","type":0,"sectionRef":"#","url":"docs/Mikrodiagram-Example-Projects","content":"Basic Logic Examples Apple Boxing Automation Download Project Files What You Need to Know Before Design DIGITAL INPUTDIGITAL OUTPUTBINARY FLAGORANDEDGEIMPULSE RELAYHIGHUP / DOWN COUNTERWORD COMPARATORAdding a Line Label Diagram Algorithm In apple automation, apples coming from apple conveyor band will be counted and 20 pieces will be passed into the box. When the number of apples counted is 20, the conveyor carrying the boxes will move. For this, the belt motor in which the boxes come will be controlled Diagram Solution The apple counting and box detection sensor generating the digital output is connected to the digital inputs of the PLC device.The box band motor will be activated with DQ1 when the system is first turned on or when the apple comparator generates a high level signal.When the box is detected, the box conveyor motor will be stopped and the apple conveyor motor will be activated immediately to send the apples.When the apple counting process is completed, the conveyor motor will reactivate and the cyclic process will continue.The box conveyor and the apple conveyor motors are stopped when the system shut off button is pressed. Sealing and ContactSafe Motor Switching Download Project Files What You Need to Know Before Design DIGITAL INPUTDIGITAL OUTPUTBINARY FLAGANDNOTORAdding a Line Label Diagram Algorithm When the button is pressed forward, the motor will start to move forward and the button will continue even if it is not pressed forward.When the button is pressed back the engine will stop and immediately the engine will start to run in reverse direction.If two buttons are pressed at the same time, the system will stop. Diagram Solution In the sealing algorithm, the 'motor forward' will start to work when the high signal is applied via 'forward button'. The 'motor forward' label will produce a high level output when the 'motor forward' starts to work and the 'motor forward' will be active even if the button is not pressed.In the safety algorithm, the two buttons pressed together condition is checked. Binary flag is used to generate a 1 cycle delay in button controls.In the above picture there is an online monitoring screen image where the button is pressed forward, the motor is forward activated and the 2 buttons in the picture below are pressed together so that the motor's forward and reverse outputs are inactive. Controlling Two Motors With Four Buttons Download Project Files What You Need to Know Before Design DIGITAL INPUTDIGITAL OUTPUTORIMPULSE RELAYAdding a Line Label Diagram Algorithm When Button 0 is pressed, Motor 1 will started.When Button 1 is pressed Motor 2 will started.When Button 2 is pressed, two motors will start togetherWhen Button 3 is pressed, two motors will stop together.If the start button of Motor 2 is pressed while Motor 1 is running, Motor 1 will stop and Motor 2 will start to work. Diagram Solution In the set algorithm, the running states of the motors; in the reset algorithm, the stopping states of the motors and in the pulse impulse part the permanence of the active or passive states of the motors are provided. Conveyor Automation Download Project Files What You Need to Know Before Design DIGITAL INPUTDIGITAL OUTPUTANDORIMPULSE RELAYON DELAYAdding a Line Label Diagram Algorithm When the Start button is pressed, the Motor 1 will start immediately.The program will stop immediately when any Stop button is pressed.Motor 2 will run, when FS1 has detected the object after 2 seconds.Motor 3 will run, when FS2 has detected the object after 3 seconds.When the FS3 detects the object, the program will stop immediately. Diagram Solution The system on-off function was implemented using the pulse relay. When the system is off, the system will be turned on when a high level signal is received from the Start / Stop button, and the system will shut down when a high level signal is received while the system is on.When the system is first turned on, motor1 will start to operate with the label 'System Start / stop' pulse relay.When the FS1 sensor activates, it will wait for 2 seconds and then work. For this algorithm, the FS1 tag was checked with an on delay.When the FS2 sensor is activated, motor 3 will start after waiting for 3 seconds with delay. Contact Locking Motor Control Download Project Files What You Need to Know Before Design DIGITAL INPUTDIGITAL OUTPUTBINARY FLAGANDNOTAdding a Line Label Diagram Algorithm Motor right and left turn conditions will be checked.If the motor turns to the left, it will not turn to the right, if it turns to the right, it will not turn to the left.If you press left while turning to the right, it will continue to turn to the right, it will be the same in the left turning situation.If neither of the buttons is pressed, the motor will not function. Diagram Solution Turn left turn to the right: If the motor is turning to the left, a low signal will be sent to the AND block because that the 'motor left' tag is high and not for the receipt. Therefore, if the left movement of the motor is active, it will not turn to the right even if the right button is pressed. The controller has a cycle delay using binary flags so that it does not enter the endless loop.The same situation in the upper part is also used to prevent turning to the left when turning to the right.It is observed that there is no button pressed in the online monitoring screen above.In the following example, the right turn of the motor is observed when DI0 is active. Bottle Liquid Level Control Download Project Files What You Need to Know Before Design DIGITAL INPUTDIGITAL OUTPUTBINARY FLAGANDORNOTIMPULSE RELAYEDGEAdding a Line Label Diagram Algorithm The bottles pass through the conveyor belt in groups of three. When the sensors can not see each other, the filling valves open to allow the bottles to start filling. In the meantime, the distance sensors next to the fill valves begin to measure. It is filled until the desired distance is reached. Then the filling valves are closed. The conveyor belt starts to move again and the other bottle is expected to be detected. Diagram Solution When the system is first turned on, the band motor is running. When the sensors detect the bottles, the logic is high and bottles are expected to be filled by stopping the motor. After the bottles are filled, the conveyor belt motor is energized again and the bottles are kept on the conveyor belt. The liquid level control sensors placed at the end of the belt control the filling bottles. If the liquid level in the bottle is not at the desired reference point, the system is stopped and the fault lamp is lit. The fluid level sensor is logic high when there is no desired reference value. Bottle Packing Automation Download Project Files What You Need to Know Before Design DIGITAL INPUTDIGITAL OUTPUTANDORIMPULSE RELAYAdding a Line Label Diagram Algorithm The bottles pass through a conveyor belt in groups of three. When the tips of the sensors can not see each other, the filling valves open to allow the bottles to start filling. In the meantime, the distance sensors next to the filling valves start measuring. The distance is filled until the level is increased to the desired level. When the sensor reaches the specified level, the filling valves are closed. The conveyor belt moves and waits to detect the other bottle. Diagram Solution When the system is first turned on, the band motor is running.When the sensors sense the bottles, the logic is high (1) and bottles are expected to be filled by stopping the belt motor.After the bottles are filled, the conveyor belt motor is energized again and the bottles are kept on the conveyor belt.The liquid level control sensors placed at the end of the conveyor belt control the filling bottles.If the liquid level in the bottle is not at the desired reference point, the system is stopped and the fault lamp is lit. If the fluid level sensor is not the desired reference value, the logic is high (1).RD is the abbreviation of color detection, while Cturn is the abbreviation of rotation until color is perceived. Led SwitchOn Delay With Functional Button Download Project Files What You Need to Know Before Design DIGITAL INPUTANDNOTORIMPULSE RELAYDIGITAL OUTPUTAdding a Line Label Diagram Algorithm When the two buttons are pressed at the same time, the first lamp lights up.When three buttons are pressed in the system with three buttons in total, the second lamp lights up and the motor enters the circuit.The system can also be shut down with the Stop button. Diagram Solution When Button_A and Button_B are pressed at the same time, the Lamp 1 lights up.When Button_A, Button_B and Button_C are pressed at the same time, the Lamp 2 lights up.When the Lamp 2 comes on, the Motor starts to work.A Stop Button has been added to stop the entire system. Bottle Recognition And Filling Automation Download Project Files What You Need to Know Before Design DIGITAL INPUTANDORIMPULSE RELAYEDGEDIGITAL OUTPUTNOTTIMER OUTPUT RELAYBINARY FLAGAdding a Line Label Diagram Algorithm Robust bottles will be filled for three seconds.Robust and broken bottles are determined with the camera.Broken bottles are thrown out with the cylinder.The camera will work immediately after the sensor detects the bottle. Diagram Solution With the Start button, the system starts and the belt starts moving.The camera works when the bottle sensor is activated while the belt is moving.The information that the bottles are firm or broken is sent to the system.The belt stops when you reach the bottle filling point.If the bottle is broken, the piston will run and the bottle will be ejected from the belt. If it is intact, the valve will be opened and the filling process will be done within the time specified by the timer.After filling, the belt becomes active.These operations continue until the stop button is pressed. Start and Resume Motor Download Project Files What You Need to Know Before Design DIGITAL INPUTDIGITAL OUTPUTSYMETRIC PULSE GENERATORTIMER OUTPUT RELAYEDGEIMPULSE RELAYBINARY FLAGORAdding a Line Label Diagram Algorithm After the motor connected to the output DO0 has been running for 5 seconds, the lamp connected to the output DO1 will flash for 0.5 seconds at intervals of 10 seconds.These operations will start when the button connected to the input DI0 is pressed, and will be stopped with the button connected to the input DI1. Diagram Solution When the start button is pressed, the engine is on for 5 seconds.When the engine stops, the lamp is triggered by the edge gate and flashes at 0.5 second intervals for 10 seconds.After 10 seconds the engine restarts.The system repeats this way.When the Stop button is pressed, the entire system stops. Systematic Motor Operation Download Project Files What You Need to Know Before Design DIGITAL INPUTEDGELOWDIGITAL OUTPUTAdding a Line Label Diagram Algorithm The system will be controlled by the limit switch, start and stop buttons.When the Start button is pressed, Motor 1 will start to operate.When a mechanical system comes into contact with the limit switch, the Motor 1 will remain active as long as the Motor 2 applies pressure to the moving system limit switch.After the mechanical system passes the limit switch, the Motor 1 will continue to run until the Motor 2 stops.All systems will stop when the Stop Button is pressed.When the Start Button is pressed again to restart the stopped system with the Stop Button, the motors will continue to operate in that position. Diagram Solution This system will be controlled by the limit switch and stop button.The mechanical system will start the Motor 1 when it contacts the limit switch until the stop button is pressed. The Motor 2 will run as long as the limit switch is pressed.Stop button will stop the entire system. Lift Automation What You Need to Know Before Design DIGITAL INPUTAdding a Line LabelANDDIGITAL OUTPUTNOTTIMER OUTPUT RELAYANALOG FLAG Diagram Algorithm The project will be prepared for a three-storey elevator. The controls that need to be done in elevator control are listed as follows.The elevator cab is raised / lowered by moving the motor forward and backward. Motors like cylinders continue turning for a while after the power is turned off. In this case, the elevator cab will not stop at the exact desired location, so the elevator will have a braking system.Only the motor and elevator car lighting will be checked from the digital outputs.There are 3 floor buttons and 1 emergency stop button in the cabin.Each floor has an elevator call button.There are sensors on each floor to understand which floor of the elevator car is the floor.If the elevator door is opened or the elevator call button is pressed while on the ground, the cabin lighting and the busy lamp are lit for 10 seconds.In case of emergency, the stop button will be provided to keep the cabin in place.An audible alarm or an alarm button must be placed in the cabin to be notified of any malfunction.In the designed system, the elevator door will be opened and closed by hand (a system with automatic opening motor is required). Telephone voice notification will be made independent of the PLC. The elevator door will not open unless the cab is on the floor. Diagram Solution 3-storey elevator system to be controlled in this system.Motor forward output will move the elevator down, Motor backward output will move the elevator up.These motors continue turning a little further after the power is turned off.Because of this, whenever the elevator stops, the pneumatic brake system works and the elevator stops at the desired place.Where the elevator is located is controlled by the switches located on each floor.There are 3 floor buttons and a stop button in the elevator.When the call buttons in the elevator and on the floors are pressed, the elevator moves to where the elevator is called.The elevator door opens manually.The status of the door open or closed is controlled by the switch.If the door is open, the elevator will not move.If the elevator is called from the other floors while the door is open, the busy lamp lights up for 10 seconds.This process is done by timer block.When the emergency stop button is pressed, it stops at the elevator. Analog Clock Automation Download Project Files What You Need to Know Before Design DIGITAL INPUTDIGITAL OUTPUTORHIGH GATEBINARY FLAGBINARY REGISTERSYMETRIC PULSE GENERATORTIMER OUTPUT RELAYEDGEWORD COMPARATORUP/DOWN COUNTERAdding a Line Label Diagram Algorithm A two-armed system is designed to make a circular motion connected to the center.The system produces a one-second trigger every six degrees. The process will be repeated in sixty steps.The second and minute hands will move 600 milliseconds each on the trigger.The hour hand will move five hundred milliseconds every ten minutes. In this way, the clock dial movement within sixty minutes will be carried out gradually.The system that will return to the beginning in 12 hours will be realized. The motors that rotate the wheels are stepping motors. Diagram Solution In the system, the input DI0 is the input of the step motor.Second hand remains high for 600ms on each trigger (DO0).The output of the minute stepper motor is triggered at intervals of 60 seconds (DO1).The stepper motor of hour hand is triggered for 500 ms every 10 minutes (DO2). At the end of 60 minutes, the clock dial will progress gradually to one unit.When the system is energized, it starts to work automatically.If it does not start, it is started with start button. Automatic Door Control Download Project Files What You Need to Know Before Design DIGITAL INPUTAdding a Line LabelANDDIGITAL OUTPUTNOTTIMER OUTPUT RELAY Diagram Algorithm The system will have two start and one stop button.The door will open when the first start button (open button) is pressed.When the second start button is pressed (close button) the door will close.The door will continue to open if the close button is pressed while the door is opened.If the open button is pressed while the door is closed, the door will continue to close.If the stop button is pressed at any time when the door is open or closed, the door will stop and then whichever button is pressed will move in that direction.When the door is closed, the door will be opened if you enter the vehicle. The door will close again after the vehicle has passed. Diagram Solution There are two start buttons that open and close the door.The door can not be opened while the door is closed, it can not be closed while the door is opened.If the stop button is pressed at any time when the door is open or closed, the door will stop and then whichever button is pressed will move in that direction.There are one photocell at the entrance and exit of the door.Photocells consists of transmitter and receiver.Infrared light communicates between the receiver and the transmitter.The receiver and transmitter are mounted mutually.The photocell generates an output signal when an object enters between the receiver and the transmitter.In this system, when the door closes and the first photocell detects the object, the door stops and starts to open again.When the object exits, the second photocell becomes active and the door closes.The stop button stops the entire system. Count Items Download Project Files What You Need to Know Before Design DIGITAL INPUTDIGITAL OUTPUTANALOG COMPARATORANDON DELAYUP/DOWN COUNTERHIGHBINARY FLAGEDGEIMPULSE RELAYAdding a Lane Label Diagram Algorithm Products pass through the conveyor belt. When the total product is 500, the system will wait for 30 seconds and it will work again and the same process will be repeated. Diagram Solution In this system, the conveyor belt motor is started with the start button.There are bottles in the counter.These bottles are counted with the counter.When the number of bottles is 500, the belt motor stops in the time defined in the timer (30 sec).Then the belt motor continues to work.This process is continuous. Oven Automation Download Project Files What You Need to Know Before Design DIGITAL INPUTANDORDIGITAL OUTPUTWORD COMPARATORIMPULSE RELAYEDGE GATEBINARY FLAGSYMMETRIC PULSE GENERATORUP/DOWN COUNTERHIGHAdding a Line Label Diagram Algorithm An oven door is to be controlled automatically by PLC.The start button activates the belt motor.When the product comes in front of the first photocell (P1), it is requested to open the door automatically by energizing the piston opening bell and to close the door by energizing the piston when the product comes in front of the second photocell (P2).The information that the door is open or closed is detected by the S1 and S2 proximity sensors.If the product can not be opened within 5 seconds after passing through the P1 photocell, the belt motor must be stopped and the fault signal must be lit. If the door does not close within 5 seconds after the product has passed the P2 photocell, it is still required to turn on the fault signal lamp.The belt motor will not move as long as the fault signal lamp is on.Fault signal will be reset by reset button.Pressing the stop button will stop the operation of the belt motor. Diagram Solution The start button activates the band motor.When the product comes in the first photocell, the oven door opens.After the product passes through the second photocell, the oven door closes.The open position of the oven door is detected by the S1 proximity sensor. If the oven door is closed, it is detected by the S2 proximity sensor.If the door is not opened or closed after 5 seconds after the product has passed through the photocells, the alarm will work.The alarm is stopped with the Reset button.Stop button also stops the belt motor. Smart Home Application Download Project Files What You Need to Know Before Design DIGITAL INPUTANDNOTORWEEKLY TIMERDIGITAL OUTPUTRTD INPUTHYSTERESIS Diagram Algorithm These applications will be realized by means of sensors, which will minimize the work done by the people living in the home where all kinds of security measures will be taken.In the event of a fire possible, the smoke detector will trigger the alarm and fire extinguishing fountains will work.The air conditioner will work when the house temperature is above 25 degrees Celsius and will stop when they are below 20 degrees Celsius.The grass will be watered every day at 09:00.In the evening, the lights in the garden will open.In the weekend or after 00:00 at night, the alarm will sound with the motion detector.The window shutters will automatically shut down when it rains or between 11 am and 2 pm. Diagram Solution Thanks to the smoke sensor, the fire is extinguished with the mounted fountains.The temperature of house is measured by RTD sensor.The air conditioner is activated when the temperature is above 25 Celcius degrees and is stopped when temperature is below 20 Celcius degrees.The weekly timer block provides daily watering of the grass between 09:00 and 09:30.The shutters closes when it is raining thanks to the rain sensor.The shutters closes every day between 11 pm and 2 am with the weekly timer.The weekly timer block is run against theft on weekends and from 00:00 pm to 08:00 pm on weekdays.When the weather is dark, the garden lighting is switched on thanks to the illumination sensor. Analog Functions RTD Temperature Control Download Project Files What You Need to Know Before Design RTD TEMPERATURE INPUTDIGITAL OUTPUTANALOG REGISTERANALOG COMPARATORHIGHSYMMETRIC PULSE GENARATOREDGE GATEAdding a Line Label Diagram Algorithm PT100 data is check with periods 20 second. If over the set value, the digital output DQ0 is activated.DQ0 will be inactive when the alarm condition is cleared. Diagram Solution For the desired PT100 sensors to be read, the RTD Temperature Inputs block on the Physical I/O Blocks tab is added.The Symmetric Pulse Generator was used to determine the control period of the data from the RTD.Since there are four sensors, four analog comparators are used. The sensor data to the inA input of Analog Comparators was connected to the inB input of the temperature value register to be controlled. It was done the comparison trigger by the signal from the Symmetric Pulse Generator.The Or gate is used to switch to an alarm state over any temperature sensor. Analog Table and Operations Download Project Files What You Need to Know Before Design ANALOG INPUTANALOG TABLEDIGITAL INPUTANDANALOG TABLE OPERATIONREAL TIME PULSE GENERATORAdding a Line Label Diagram Algorithm The analog values read out for periods of five seconds will be collected. The values will be maximum 30 pieces. In the readings above 30 pieces, the first written value will be deleted and the last read value will be written. The system will operate when digital input 0 is activated, it will stop when it is disabled. Diagram Solution Analog input value was be read with AI0.If the system is on (when DI0 is in high signal state), the system will be triggered by the signal from the timing trigger and through the And gate.An analog table was created with an array of 30 values. Each rising edge to the Clk input of the analog table block will read the new value from AI0. When analog table type FIFO is selected and 30 table size is filled, the last read value will be overwritten with the first read value.Analog table operation block also collects the values in the table. Word Functions Traffic Lights Download Project Files What You Need to Know Before Design DIGITAL INPUTDIGITAL OUTPUTHIGHORBINARY FLAGEDGE GATEWORD COMPARATORSYMMETRİC PULSE GENARATORUP/DOWN COUNTERIMPULSE RELAYAdding a Line Label Diagram Algorithm System will be turned on when to DI0 is pressed,System will be turned off when to DI1 is pressed.The light will turn red for 30 seconds, yellow for 10 seconds, green for 20 seconds.The system will repeat this process until the Stop button is pressed. Diagram Solution Impulse relay is used to control system on-off. DI0 is connected to the Set Input of the impulse relay namely the activation input. When from DI0 signal is high, system will open.DI1 was connected to Res Input of impulse relay. When from DI1 is high, system will close.Symmetric pulse generator was used for to create timing algorithm. When the system is turned on, the symmetrical pulse generator will begin to generate signals with periods of one second to be activated. Symmetric pulse genarator is specified 500 milliseconds block that value inside because it produce output at high and low level signal sum period. So, It 500ms+500ms=1 sec will produce output.Signals coming from symmetric pulse genarator ıt was counted with counter. Counter operation was used for Up/Down counter. Double click on the block to select the up option. It would count to select up every signal for the coming 0,1,2,3, ... down every signal for the coming 0,-1,-2,,...Total burn times for red, yellow and green lights are 60 seconds. When the counter value is 60, the counter is reset because the signalization process will be canceled. the system will repeat the function until system turn off. The binary flag is used because it connects with the timer output to the Word Comparator input.The light will turn red in the range of 0-30 seconds, yellow in the range of 30-40, and green in the range of 40-60. Word Table and Operations Download Project Files What You Need to Know Before Design WORD REGISTERANDDIGITAL INPUTWORD TABLEWORD TABLE OPERATIONREAL TIME PULSE GENERATORAdding a Line Label Diagram Algorithm The word values read out for periods of five seconds will be collected. The values will be maximum 30 pieces. In the readings above 30 pieces, the first written value will be deleted and the last read value will be written. The system will operate when digital input 0 is activated, it will stop when it is disabled. Diagram Solution Word register was connected Word Table input.If the system is on (when DI0 is in high signal state), the system will be triggered by the signal from the timing trigger and through the And gate.A word table was created with an array of 30 values. Each rising edge to the Clk input of the word table block will read the new value from word register. When word table type FIFO is selected and 30 table size is filled, the last read value will be overwritten with the first read value.Word table operation block also collects the values in the table. GSM Communication Examples Send Temperature Values via SMS Download Project Files Things to Know Before Design RTD INPUTSMS SENDWEEKLY TIMERSTRING REFERENCEAdding a Line Label Diagram Algorithm It is requested to send as sms to five numbers determined at 9:00 am on weekdays. Diagram Solution Using the Weekly Timer Block, the system is only activated between 9.00 and 9.15 on weekdays.The PT1000 sensor is connected to the RTD inputs.For the values read from the temperature sensor, the phone numbers to which the SMS is sent are defined.In the 'String table' section, the contents of the message to be sent are written.The block number of each RTD Input block is defined by putting a '$' sign at the beginning. For example, $ 5000 is written to the SMS content to read the temperature value from the RTD0 input. The RTD0 input value is $5000, the RTD1 input value is $5001. Make Call on Alarm Download Project Files What You Need to Know Before Design RTD INPUTBINARY FLAGORNOTHIGHEDGE GATEIMPULSE RELAYRUN TIMELONG COMPARATORLONG MATHON DELAYSYMMETRİC PULSE GENARATORDTMF ORIGINATE CALLANALOG COMPARATORAdding a Line Label Diagram Algorithm When a RTD temperature sensor data checked in 20 sec period passes the specified value, DTMF calling will start. Three different numbers will be dialed in order. After calling operation is finished, If temperature value is in location alarm again inside of 30 minute, calling operation will be repeated. Diagram Solution With the analog register, the temperature value at which the alarm condition is generated is determined. With the symmetrical pulse generator, the temperature values are controlled once every 20 seconds. Each of the RTD inputs is controlled by an analog comparator.Any analog comparator block output from the analog registers above the specified temperature value will produce a high level signal and go into an alarm state. After going through the alarm condition, the call timer will start to increase at one second intervals.If the temperature does not fall within 30 minutes, when the counter value reaches 1800 (1800sec / 60 = 30min), the Ori input will be reset and the calling will start again.The calling operation will be performed according to the data received from the analog comparator. If the temperature is between 0-30, the first call will be made, between 100-180 second call and between 200-230 third call.The numbers to be dialed are double-clicked in the DTMF Originate Call Block. Oven Automation via SMS Download Project Files What You Need to Know Before Design DIGITAL INPUTDIGITAL OUTPUTANDNOTSMS RECEIVERSMS SENDSTRING REFERENCETIMER OUTPUT RELAYON DELAYIMPULSE RELAYAdding a Line Label Diagram Algorithm The system will be turned on at any time by throwing an SMS in the oven project.When the message \"Prepare dough\" is thrown to +441234567890, the system will work.On the automation side when commanded, flour is poured into the dough kneading bowl for 50 seconds. Water is added for 20 seconds and the ferment is poured for 10 seconds.After the mixture is finished mixture motor will run 15 minute, And then to ovener will be sent \" I prepared to dough\" message. Diagram Solution From designated number \"prepare dough\" message, when came will be opened system with impulse relay. The DI0 is connected to the Sif input of the impulse relay to close the system in emergency response or to complete the dough process.Timer output relay is used to add flour, water and yeast at different times. The system will become inactive after it has been active for the defined period of time.DQ0, DQ1 and DQ2 outputs will be passive after the flour, water and yeast intake is complete when the system is on. These digital outputs are connected to the Not block for producing a high-level signal.After the flour, water and yeast are taken, the And gate output will be activated and the mixing will start and the message will be sent after the mixing time is over. Send Register Values to Internet Download Project Files What You Need to Know Before Design TCP SOCKET BLOCKMODBUS TCP SLAVEWORD REGISTERGSM SIGNAL QUALITYGPRS APNCSQCONNECTIONGPRS IP Diagram Algorithm Modbus TCP protocol to read and change the word register value via GSM communication. Diagram Solution In the above picture with the online monitoring screen image, the word register data with the modbus address 4000 is read via GSM communication.PLC device was arranged server and slave, for GSM connection .The server was selected from the TCP socket block and written as listening port 502. The IP filter is not defined because the connection is requested from any IP address. If only one IP was to be connected, an IP filter would have to be specified.The Modbus ID number is determined by the Modbus TCP slave block contents. Modbus slave address will allow communication with multiple slave terminals.In order to provide GSM connection, firstly Mikroterminal is opened in Tools section in Mikrodiagram. CSQ, CONNECTION and GPRSIP interrogation must be performed after the APN description is made.If the data line used has a static IP address, the APN number that can be learned from the GSM operator must be entered correctly. For example, if the APN address of the GSM operator is 'mgbs', then the AT+GPRSAPN command is typed as 'mgbs' and the write button is pressed.To read the quality of the GSM line, press the read button on the AT + CSQ command line. In the example, the CSQ value is read as between 16 and 20. This value indicates that there is enough attraction power to make the connection.After starting the GSM line, AT+CONNECTION=? command is sent. If the command reply is '6', GPRS IP is received. AT+GPRSIP=? command is sent to find out the IP address, the device is connected. Communicating two PLCs via GPRS Download Project Files What You Need to Know Before Design TCP SOCKETMODBUS TCP MASTERMODBUS TCP SLAVEHIGHSYMETRIC PULSE GENERATORWORD REGISTERMODBUS WORD READERGPRS APNCONNECTIONCSQGPRS IP Diagram Algorithm The PLC configured as MODBUS Master will read a register value from the PLC configured as MODBUS Slave. In MODBUS protocol a SLAVE device creates a \"TCP Server Socket\", however the MASTER device creates \"TCP Client Socket\". The MASTER device connects the SLAVE device. So the MASTER should know about the IP and PORT information of the SLAVE device. Diagram Solution Two devices and two separate diagrams are used as server and client.GSM is selected as the media type in the TCP Socket Block.Modbus TCP slave block is used in server diagram. This allows the client device to connect to the server. By specifying the ID, more than one device will be able to operate as a slave. In the TCP socket block, the server is selected and the listening port is entered.The MODBUS TCP MASTER block is added on the client diagram to connect to the SLAVE device. Each time the rising edge of the MODBUS word reader block arrives at the trigger input, the specified register is read from the device it is connected to. The ID of the device identified as a slave should be written in the \"ID\" definition field in the MODBUS word reader block.Since the MODBUS register address of Word Register Block with modbus adress is 4000, MODBUS address is set to 4000 in to Modbus Word Reader Block. In the TCP socket of the client device, the IP number of the PLC to be connected and the listening port values are entered. The SLAVE device's IP and listening port values can be learned on the Mikroteminal application console with GPRSIP and LISTENPORT commands.You also need to check APN, CSQ and GPRSIP values on Mikroterminal. Please see MODBUS TCP GSM Communication example for connection settings. Master Device: Slave Device: PLCRESET and GSMRESET Definition via SMS To use AT commands from mobile, the blocks must be installed as follows. AT+PLCRESET=? and AT+GSMRESET=? When the command is sent, the information stored in the device is sent by the PLC as sms. When AT+PLCRESET=26400 and AT+GSMRESET=600 command is sent, the specified number is set to the PLC in seconds. Repeat AT+PLCRESET=? and AT+GSMRESET=? When the command is sent, it is seen that the set value is processed to PLC. Using SMS Console Description You can get and change the data in PLC by sending AT commands from a mobile phone. The following shows sample applications and the transmission of several AT commands. Example:1 To enable SMS console To set a string via SMS: Send SMS text message to device in following format: AT+FBD=Block No,NewTextValue In order to update String Text referenced by String refeecne block (Block No: 2) and String Text Offset 1, send a SMS to device like follows: AT+FBD=2,+905457878774 Send above SMS text message to the device, to change a string referecence value from remote. Example:2 To enable SMS console, select the String Reference Text Offset \"AT + SMS\" to the SMSR Msj input. Word Register value is 0. To change the value in the word register, AT + FBD = 3000,20 is sent from Mobil.Word Register value is 20. The following table shows the sending and incoming responses of AT commands from the mobile. Ethernet Communication MODBUS TCP Ethernet Communication Download Project Files What You Need to Know Before Design TCP SOCKET BLOCKMODBUS TCP SLAVEMODBUS TCP MASTERREAL TIME PULSE GENERATORMODBUS WORD READERLOCAL IPMACGATEWAYNETMASKAdding a Line Label Diagram Algorithm The PLC configured as MODBUS Master will read a register value from the PLC configured as MODBUS Slave. In MODBUS protocol a SLAVE device creates a \"TCP Server Socket\", however the MASTER device creates \"TCP Client Socket\". The MASTER device connects the SLAVE device. So the MASTER should know about the IP and PORT information of the SLAVE device. Diagram Solution Two devices and two separate diagrams are used as server and client.Ethernet is selected as the media type in the TCP Socket Block.Modbus TCP slave block is used in server diagram. This allows the client device to connect to the server. By specifying the ID, more than one device will be able to operate as a slave. In the TCP socket block, the server is selected and the listening port is entered.The MODBUS TCP MASTER block is added on the client diagram to connect to the SLAVE device. Each time the rising edge of the MODBUS word reader block arrives at the trigger input, the specified register is read from the device it is connected to. The ID of the device identified as a slave should be written in the \"ID\" definition field in the MODBUS word reader block.Since the MODBUS register address of Word Register Block with modbus address is 4004, MODBUS address is set to 4004 in to Modbus Word Reader Block. In the TCP socket of the client device, the IP number of the PLC to be connected and the listening port values are entered. The SLAVE device's IP and listening port values can be learned on the Mikroteminal application console with LOCALIP command.From inside of TCP socket block \"TCP server \" selecting 502 was written as listening port.Was not write ip filter because you want to connect from any ip address. If only one from IP had to be connected, was will needed IP filter to determine.You also need to check MAC, GATEWAY and NETMASK values on Mikroterminal. Please see MODBUS TCP Ethernet Communication example for connection settings.Local Ip address, is specified the IP address of PLC device.Local Ip setting have to configured subnet mask, default gateway parameters as using. Master Device: Slave Device: DevNET Communication What You Need to Know Before Design DEVNET MAINDEVNET REGISTERWORD REGISTERAdding a Line Label Diagram Algorithm There are two different PLC products connected to the same local network.By using DevNET blocks, we will transfer the value of the PLC word register to the DevNET registers of the other device. Diagram Solution First Device Sync with DevNET must be selected in Word registers.Values are entered into Word registers.The DevnetMain settings, were looked a pre-design from what needs to be known tab. Timeout and Cycle Delay times are equal since two devices are communicated. Second Device DevNET Main settings for other PLC have been made.The address and block number of the device to be read into the DevNET register block are written.As you can see in the pictures, the values of the first device's word register are read in DevNET registers of the second device. Serial Communication Reading Network Analyser via RS485 Download Project Files What You Need to Know Before Design SERIAL PORT BLOCKMODBUS RTU MASTERSYMMETRİC PULSE GENARATORHIGHMODBUS WORD READERANALOG MATHAdding a Line Label Diagram Algorithm Reading the voltage data from the network analyzer with RS485 communication port. Diagram Solution Serial port and RTU master block are used for serial communication. The Baudrate, Databit and Parity values of the network analyzer are entered in the serial port block.Serial port no is entered 0 in the Serial Port Block and Port Type is selected RS485.The slave address and register address of the analyzer are entered in Modbus word reader blocks.The value is read at every rising edge from the symmetrical pulse generator.Since the network analyzer's data is in word format, 222.7 V voltage value is read as 2227. The actual value read from the analyzer screen is accessed by performing a division operation with the Analog Math Block. Serial Communicating two PLCs via Modbus Table Reader Download Project Files What You Need to Know Before Design SERIAL PORT BLOCKMODBUS RTU MASTERMODBUS RTU SLAVEHIGHSYMMETRİC PULSE GENARATORWORD REGISTERANALOG REGISTERMODBUS READ/WRITE TABLEWORD TABLE OPERATIONANALOG TABLE OPERATIONAdding a Line Label Diagram Algorithm Reading of 10 Word and 10 Analog registers in RTU Slave device by RTU Master device via RS485 communication protocol. Diagram Solution For the slave device, the Modbus RTU slave block located on the Modbus blocks tab is added.Serial Port Block is added for serial communication and communication parameters are set. The slave and master devices must have the same baud rate, data bit and parity option.The monitoring screen above is the RTU slave device, and below is the screenshot of RTU Master device.For the master device, the Modbus RTU master block located on the Modbus blocks tab is added.Since the Modbus table block reads every rising edge, the trigger is sent via the symmetric pulse generator.Two modbus table blocks have been used since two different register formats like Word and Analog. Because the word registers start at 4000 and the analog registers at 6000.The RTU master line tag has been added to the Mas input of Modbus table blocks.The symmetric pulse generator is connected Trg input of Modbus table blocks for trigger.For to be read Word and Analog values is added two separate Table Block. The output of table block is connected to the Tab input of the Modbus table block.The word table field must be created twice the size of the word register to be read.The analog values read from the Modbus table block constitute twice the number of registers read from the RTU Slave. An analog table size is created twice as much as the number entered in the Modbus table block. For example; There are 10 analog registers in RTU Slave. The number of registers in the modbus table read by RTU Master is 20. An analog table block with a table size of 40 is also added for data transfer.Modbus table reading function as \"0x03 Read Holding Register\" must be selected.Select \"Read Offset\" from the operation blocks and the table index number is entered.10 Analog and 10 Word table operation blocks have been added to receive 10 data from Modbus table blocks. This method can also be used by adding two table operation block(for analog and word) and changing the offset value by connecting the register to the \"inB\" input of the table transaction blocks. Master Device: Slave Device: Digital Control Systems Ventilation System with PID Control Download Project Files What You Need to Know Before Design DIGITAL INPUTANALOG INPUTANALOG OUTPUTPID CONTROLLERANALOG DUAL MULTIPLEXERAdding a Line Label Diagram Algorithm In the system read with the temperature value RTD0 temperature input, it is desired to control the temperature by the fan connected to the analog output. PT100 sensor is connected to RTD0 input. Temperature measurement is made between -50 and 100 degrees centigrade. As the ambient temperature increases, the speed of the fan connected to analog output 0 will also increase. Ortamın sıcaklığı arttıkça analog çıkış 0'a bağlı olan fan motor hızı da artacaktır. The analog output produces current between 4 and 20 mA. As the motor speed increases, hot air will flow out. This will prevent the heating of the environment. PID parameters will be calculated with autotunning. In case of emergency, digital input signal information is received. The analog output value will be reset(4 mA) when a high level signal is input to the digital input 0. Diagram Solution It is predicted that the temperature of the system will be 60 milliseconds.The system is run in 'autotunning' mode to set the PID parameters with Autotunning. PID parameters calculated by opening the port from the Mikroterminal console are expected to be displayed. Calculation of PID parameters is provided for 30 minutes by testing the system for possible conditions. The calculation time varies according to the system conditions.Once the PID parameters have been calculated, double clicking on the PID block switches the mode option to 'automatic' mode. In automatic mode, the system will continue to operate according to the previously calculated PID parameters.An analog multiplexer is used to reset the analog output in emergency situations. If the emergency button is not pressed (DI0), the analog value from the I1 channel of the multiplexer will be transferred to the analog output. When DI0 button is pressed, 4 mA value coming from I2 channel of the multiplexer will be transferred to analog output. Macro Examples Define Logical AND Operation on Macro Download Project Files What You Need to Know Before Design HIGHSYMMETRIC PULSE GENARATORBINARY FLAGBINARY REGISTERMACRO Diagram Algorithm Eight binary register values are controlled by the macro with the logical \"And\" operation.Macro block will only work when trig is active. Diagram Solution Macro Commands: [v0=$0&$1] // Evaluate the registers $0 and $1 in the \"and(&)\" operation and assign the result to variable v0, [v1=v0&$2] // Evaluate the registers v0 and $2 in the \"and\" operation and assign the result to variable v1, [v2=v1&$3] // Evaluate the registers v1 and $3 in the \"and\" operation and assign the result to variable v2, [v3=v2&$4] // Evaluate the registers v2 and $4 in the \"and\" operation and assign the result to variable v3, [v4=v3&$5] // Evaluate the registers v3 and $5 in the \"and\" operation and assign the result to variable v4, [v5=v4&$6] // Evaluate the registers v4 and $6 in the \"and\" operation and assign the result to variable v5, [v6=v5&$7] // Evaluate the registers v5 and $7 in the \"and\" operation and assign the result to variable v6, [o0=v6+0] // Transfer the value macro block in variable 6 (v6) to the output 0. [E] // Macro end definition operation The result of the operation where the value of the register with block no 7($7) is 0 and the other registers are 1: The result all register values ​​1: Poligon Valve Linearization Download Project Files What You Need to Know Before Design WORD REGISTERANALOG REGISTERBINARY REGISTERMACRO Diagram Algorithm The input value is parametrically calibrated at ten different points and transferred to the output. Diagram Solution Some sections are explained from within the macro. The entire macro is in the project. [v0=$3000b0] // Controls whether the value in the register with block number 3000 is equal to or greater than 0. If the condition is satisfied, the v0 variable becomes 1. [v1=$3000<10] // Controls whether the value in the register with block number 3000 is less than 10. If the condition is satisfied, the v1 variable becomes 1. [v2=$3000b10] [v3=$3000<20] ........... ........... ........... [v20=v0&v1] // Variables 'v0' and 'v1' are subjected to 'And(&)' operation. If the condition is satisfied, the v20 variable becomes 1. [v21=v2&v3] .......... .......... .......... [IF,v20,17] [v30=$3001-$3002] // The value of the register with the block number 3002 is subtracted from the block number 3001. The result is written in variable v30. [v31=$3003-$3004] [v32=v31/v30] // The value of the variable v31 is divided by the value of the variable v30. The result is written in variable v32. [v33=$3000-$3002] [$0=1+0] // If the block number is 0, the value of the register becomes 1. [$1=0+0] // If the block number is 1, the value of the register becomes 0. [$2=0+0] [$3=0+0] [$4=0+0] [$5=0+0] [$6=0+0] [$7=0+0] [$8=0+0] [$9=0+0] [$5008=v32*v33] // Variables v32 and v33 are multiplied and written into the block numbered 5008. [E] // Macro operations end .......... .......... .......... [E] Getting Device Serial Number You can get the serial number of the device using a \"Long Math\" block. The serial number is kept in a special register with address \"30000\". To be able to access that register you need to use \"Get\" math operator in \"Long Math\" block. The following image shows the necessary configuration. Updating Phone Numbers on Mikrodev Device through SCADA By using Mikrodev devices, you can send and receive SMS messages(with non-pp* firmwares). The content of the messages and phone numbers are stored in string registers of PLC device. And these strings are configured in PLC project on \"string tables\". Sometimes you may want to view and update the phone number for SMS messages through your SCADA system. The following example illustrates how you can achieve this. Storing the Phone Number Since industrial protocols like Modbus only supports numeric data types, you need to store a numeric version of your phone number. And since a single \"Long register\" is not enough for storing a phone number, this can be done by using \"2 Long Registers\". You can divide the phone number into 2 parts and write and read these numbers through these registers. But of course; you will also need to convert these \"2 Long Registers\" containing the phone number parts into a single \"String Register\". And copy that register into the \"phone number input\" of SMS block. In the \"StringManipulation Block\" you need to select \"ToString\" function and write it into a string register, i.e \"index 2\". Formatting the Phone Number In our example; we are using 10th and 11th String indexes as the format input of the phone number parts: You should take care of these formats and actual phone number parts. They should be in accordance with each other. That means; If your phone number is like: +905556008899, your configuration will be something like that: Content of 10th string index: \"+90%04s\" Here\"%04s\" means prepend leading zeros up to 4 digits to your number. Content of 11th string index: \"%06s\" Here\"%06s\" means prepend leading zeros up to 6 digits to your number. So if your first long register contains \"5556\" and second long register contains \"8899\" these numbers will merged into \"+905556008899\" by using these formatting rules. In the \"StringManipulation\" block below, you should select \"Append\" operation and copy the result into a string register i.e \"index 1\" Running the Logic After configuring your \"phone number string\" mechanism, you just need to connect that string into the SMS block and write \"1\" into the \"trigger\" register. View and Update on SCADA On the SCADA side; you can display \"2 Long Registers\" in two different components and an apply button for triggering the \"trigger\" register int the PLC project. The only drawback here is that the user should use the same number of characters as indicated in the format strings in PLC project. Download the sample PLC project from here non-pp firmware: There are 2 types of firmware , default one and the one with point to point networking stack for 3G connection. With point to point firmware you will have higher download/upload speed but no sms or call functionality. MQTT Communications Example: 1 MQTT Publish/Subscribe Configuration Download Project Files What You Need to Know Before Design TCP SOCKET MQTT CONFIG REAL TIME PULSE GENERATOR WORD FLAG WORD REGISTER HIGH Parameter Settings For MQTT Client mode must be defined in the TCP socket block for MQTT communication.The server ip and port information are entered into the TCP socket block. The media type is selected within the block.The Ena input of the TCP socket block must always be active for the duration of the communication.After the TCP Socket output is connected to the I1 input of the MQTT Config, verification information such as Client ID, username and password is entered in the MQTT Config Block.If Clean Session selection is activated, information is shared when there is communication between publish and brooker. If not selected, the information recorded in the communication breaks will not be sent.If there is no communication between the publisher and the broker, the attempt is made to re-establish the MQTT connection in the Keep Alive after the time defined in seconds.Timely triggering of I2 input of MQTT Config block is required when periodic data transmission is desired. If there is no trigger for I2 input, the information is sent to the broker according to the defined event conditions.According to the information from the o0 output of MQTT Config block, it means: 0: TCP_DISCONNECTED, 1: TCP_CONNECTING, 2: MQTT_CONNECTING, 3: MQTT_CONNECTEDAccording to the information from the o1 output of MQTT Config block, it means: 0: E_MQTT_SEND_CONNPACK,1: E_MQTT_STATE_IDLE, 2: E_MQTT_STATE_SUBSCRIBING, 3: E_MQTT_STATE_PUBLISHINGThe publish tmo information is read from o2 output of MQTT Config block. Event Definitions in MQTT Table In the Topic to Publish section, you can turn on and off the send options with Onchange send enabled block and periodic send enabled block, the block must be attached here. If the block value is 1, the send option is active, if it is 0, the send option is disabled. Qblock line label and Trgblock line label have been added in the publish to block for topic section. A qaulity information that can be determined by the user is sent together with the data to be sent with Qblock, can be left blank. With the trg block, it is possible to send a different trigger, regardless of sending a periodic, and leave it blank. To create event definitions, click 'MQTT Table' option in 'Projects' in Mikrodiagram or Telediagram Program.In the Topic to Publish section, the topic title to be published is entered. Payload type is selected. The query status of the package to be published in the QOS section is determined. If QOS 0 is selected, the status of the package to be publisher is not queried. If QOS1 is selected, it is informed that broadcast package is transmitted. If QOS2 is selected, the broker will receive feedback on the delivery of the published information. If retain is selected and the communication between publish and broker is lost, the latest information is kept in memory. When communication is established again, the last information is published. If clean session is selected in MQTT Config block, the information will not be published again even if retain is selected.In the Publishtopic section, the blocks to be published are selected. By selecting the line tag, it is determined in which case the data will be sent. If Send on trigger is selected, the data will be published according to the trigger for I2 input of The MQTT Config block.In the Topics to Subscribe section, a topic title is created for the tags to be subscribed. The verification status of the subscribed information is selected (QoS0, Qos1, Qos2).In the Subscribe Topic section, the information to be subscribed is selected. Example: 2 Download Project Files &gt; Mikrodev device sends the MQTT data in the following format: {\"BLOCKNUMBER1\":VALUE1} or {\"LINELABEL1\":VALUE1} for multiple values : {\"BLOCKNUMBER1\":VALUE1 , \"BLOCKNUMBER2\":VALUE2} or {\"LINELABEL1\":VALUE1 , \"LINELABEL2\":VALUE2} As an example, if you have selected blocks with block numbers 3001 and 6001 under a topic the device will send the following strings: {\"3001\":1234, \"6001\":123.6 } You can also use \"Line Labels\" instead of \"Block Numbers\" in the JSON format. \"Block Number\" or \"Line Label\" display format selection is made within the block properties. Using LCD on MP211 Series Setting Welcome Text The Mikroterminal application is used to change the text that appears on the LCD screen when MP211 is energized first time. After starting Mikroteminal application, you can change the upper line by entering the command 'AT + MENULINE1 =' and lower line by entering the command 'AT + MENULINE2 ='. The text will change when you send the command to the device after typing any word at the end of these commands. Example: AT+MENULINE1=BUILDING AT+MENULINE2=AUTOMATION Start/Stop Control To start or stop PLC process select \"PLC CONTROL\" on the LCD screen using the arrow buttons on the keypad. And choose \"START\" or \"STOP\". The PLC will behave accordingly. Monitor I/O Values You can monitor the real-time values of Inputs and Outputs by selecting \"IO MONITOR\" on the LCD screen using the arrow buttons on the keypad. Selecting Blocks for Online Monitoring You need to select the 'LCD/Web View' option in Mikrodiagram for the blocks which you want to view/control on LCD screen. If you only need to monitor the value select \"View Only\". If you also want to be able to modify the block value via LCD and keypad select \"View and Set\". And you also need to define a \"Line Label\" for these blocks. \"Line label\" string will appear on the LCD with its real-time value. Modifying Register Values To set a register value; select \"BLOCK MONITOR\" on the LCD screen using the arrow buttons on the keypad. And select the block which you want to set value. After entering the password, you can enter a value for the block. If you haven't set a login password for the device yet, just enter \"0\" value as password. Example In the following example, the output of the binary register is connected to the input of the digital output(DO0). Digital output(DO0) is activated by writing a (high) binary register value on the LCD screen. DNS Block DNS Block Usage Block Custom Settings Blok Name: The name of the block. Primary DNS Server: The Primary DNS server is entered in this section. Secondary DNS Server: Secondary DNS Server is entered to this section. URL : The URL to use is entered in the string table. The ID of the URL entered in the string table is selected here. Default IP : Default IP is entered in this section. If the DNS block cannot convert the URL to the IP address, Default IP is used. DNS Timeout : The DNS timeout value is entered in this section String Table Entering Value Click the Projects tab on the left of the Mikrodiagram software. String Table is selected from the top menu. You can enter a URL under the String Text heading. Use with TCP Block The dns block output is connected to the ip pin of the tcp socket block. The DNS block will convert the URL to IP, Fou. pin is active. The tcp block uses the ip address from the DNS block. The TCP socket block can be used with the Mqtt block.","keywords":""},{"title":"MQTT Application Notes","type":0,"sectionRef":"#","url":"docs/MQTT-Application-Notes","content":"MQTT PROTOCOL General Information Figure 1: MQTT Communication MQTT (Message Queuing Telemetry Transport) protocol is a machine-to-machine (M2M) message-based protocol widely used on the Internet. It has been adopted in the Internet of Things (IoT) ecosystem with its light weight and low resource consumption. Almost all IoT cloud platforms support MQTT protocol to send and receive data from smart objects. Block Definitions MQTT Config Block To configure MQTT settings, you must first add the Mqtt Config block to your project. Figure 2: MQTT Config Block Pin Definitions; • Soc: It is used for TCP socket block connection. Mqtt Config block cannot be used without TCP socket block. • Trg: When periodic data transfer is desired, a trigger should be given to the mqtt config block from this input. If this entry is left blank, data is transmitted according to other specified conditions. • Mqtt0: Output showing the connection status. The information from this output is as follows; - 0: TCP Disconnected - 1: TCP Connecting - 2: MQTT Connecting - 3: MQTT Connected • Sta: Output showing the communication status. The information from this output means: - 0: MQTT Send Conn Pack - 1: MQTT Idle Status - 2: MQTT Subscribe Status - 3: MQTT Publish Status • Pub: Output showing Publish timeout. Mqtt Config Block Custom Settings; Figure 3: Mqtt Config Block Custom Settings Definitions; • Client Id: The field where the device is manually given an ID for the broker connection. • User Name: The field where the device is named for the broker connection. • Password: Password field entered in the device for the broker connection. • Keep Alive: If the connection between the broker and the Publisher is lost, the waiting time before reconnecting. • Clean Session: If selected, messages will be broadcast if there is communication between the device and the broker, otherwise the information recorded in communication interruptions will not be sent. • Use Device Serial as User Name: If selected, the serial number of the device is used as the device username. • SSL Enabled: It is marked to make the connection with SSL. (Only active in DM Series.) TCP Socket Block Connection The output of the TCP Socket block is connected to the Soc input of the Mqtt Config block. Figure 4: TCP Socket Block and Mqtt Block Connection The special settings of the TCP Socket block should be made for mqtt connection as follows; • TCP Client should be selected as the socket type, • The mqtt server IP to be connected to the Server IP section must be entered, • Mqtt server port information should be entered in the Server Port Section, • As for the media type, Ethernet, GSM or WI-FI can be selected according to the characteristics of the microdev device used. Figure 5: TCP Block Custom Settings MQTT Table The table where all MQTT-related adjustments are made can be accessed from the Projects/MQTT Table tab. Figure 6: Mqtt Table Topics The Publish In this table, the Publish topic is entered to publish the data to the broker. The topic name is entered on the screen that appears by pressing the Add Topic button in the table. Block definitions where you can enable/disable Qos, Retain, Last Will, Payload settings, send on exchange and periodically send options are also made on this page. Figure 7: Topic Definition Definitions; • Topic Name: The field where the topics you will send the messages are determined. • QoS: Quality of Service refers to the agreement between the sender of a message and the receiver of the message. The QoS levels are as follows; o QoS 0: Minimum data transfer is ensured. At this level, each message is forwarded to a subscriber and no confirmation is received that the message has arrived. o QoS 1: The broker tries to transmit the message and waits for an acknowledgment response from the subscriber, if no confirmation is received within a specified time frame, the message is sent again. o QoS 2: The broker receives two acknowledgments to ensure that the subscriber receives the message and only once. • Retain: If this option is checked, if the connection between the broker and the subscriber is broken, the last value will be saved in memory. • Is Last Will Topic: Last will topic. If a topic is created and this option is checked, the message under this topic will be forwarded to the subscribers when the device is disconnected from the broker. • Payload Type: It is determined in which format the message content will be sent. Subscriber interprets incoming messages with this information. “MJson v1” can be selected if a time stamp is desired to be added to the sent messages. • On Change Send Enable Block: Block selection added in the diagram to enable or disable the sending feature of the created topic on change. • Periodic Send Enable Block: Block selection added in the diagram to enable or disable the periodic sending feature of the created topic. Publish Blocks for Topic In this table, the blocks to be published for the relevant Topic are selected. After clicking the topic in the Publish to topic table, the Add Entry button becomes active and by pressing this button, the block to be published in the project is selected. How to transmit the data can also be selected from the screen. Figure 8: Add Block for Message Definitions; • Select Block for Subscribe on Topic: The area where the block that you want to send as a message in your project is selected. • Send On Change: Send selection field on exchange o On Level Change: Send when there is a change in the value specified in Change Value, if 0 is written, it will be sent in every change. o On Percent Change: Send when there is a percentage change of value specified in Change Value, for example 10%. • Change Value: Change amount input field. • Send Periodcally: If checked, a message is sent every time a trigger comes to the trg input of the mqtt config block. • Select Block for Quality Value: The block in which the Quality value included in the message content is selected in MJson v1 payload type. • Select Trigger Block: Apart from change or periodicity, we can send the message by triggering the block we will specify here. Figure 9: Message Formats Note: Blocks used in messages; It can be sent and received with the block number (B:3006) under the block, or it can be added to the messages with line tags (word_publish_ch). This selection is made under the Mqtt Format tab in the block properties. • Message that will appear if View and Set is selected; Figure 10: View And Set Select • The message that will appear if No View is selected; Figure 11: No View Select Subscribe to Topic In this table, the relevant subscribe topic is entered to send data from the broker to the device. Figure 12: Topic to Subscribe Screen Definitions; • Subscribe Topic Name: Enter the name of the topic to be subscribed to. • QoS: Service quality level is selected. • Parse Format: Select the format in which the messages will be parsed. Subscribed Block Values for Topic From this screen, the blocks to be associated for the subscribe topic are added. To use line tags, mqtt format should be selected as view and set from the special settings of the relevant block. Figure 13: Subscribed Block Values for Topic Screen Special Applications Ubidots When you want to use Mikrodev PLC with ubidots mqtt, the following steps should be followed in addition to the settings described above; From the Mqtt Config block custom settings, Ubidots ID should be entered in the Client Id section and the Token Key of the device created in Ubidots should be entered in the Username section. Publish Topic: Enter as /v1.6/devices/< Device Name >. There is no need to define variables in the ubidots calculation for the blocks to be associated. With the first sent data, the variables are created automatically by Ubidots. The data is read on the Ubidots server with the block number or line tag. Subscribe Topic: Entered as /v1.6/devices/< Device Name >/< Value Name >. A separate connection must be defined for each data to be subscribed. Data must be defined in the Ubidots environment. If the line tag is to be used, the variable created in Ubidots should have the same name as the line tag, if the line tag is to be transmitted only with the block number, the variable with the same name as the block number should be defined in the ubidots environment. Example Applications Topic Publish General Configuration; After the project is created, the diagram is designed as in the figure, the mqtt formats of word and analog registers are selected as view and set. Figure 14: Example Project Configuration Send On Change; Follow Projects > MQTT Table >Topics to Publish > Add Topic. Figure 15: Add Topic Screen Select the Topic name, enter the High gate we have prepared in the diagram for the OnChange Send Enable Block, and click add. Then, from the Publish Blocks for Topic section in a subtable, click to the Add Entry. Figure 16: Add Block Into The Topic Screen Select the block in the diagram that you want to broadcast as a message to the Select Block for Subscribe on Topic section. In the SendOn Change section, On Level Change is selected and Change Value is set to 0 so that it can send a message every time the value changes. Click on Add and continue. The project is loaded on the device and online monitoring is opened. Subscribe to the topic opened with a program such as MQTTBox. After watching the mqtt config block value of 3 in online monitoring in the Mikrodiagram, when the value of the register is changed, it is seen that the value is published. Figure 17: Messages of Send on Change Periodic Send; In addition to the configuration sent in the change, a real time pulse generator is added to the trg input of the mqtt config block, Figure 18: Sample Project with Periodic Sending Attached Real time pulse generator is set for 5 seconds to broadcast a message periodically every 5 seconds and the created topic is changed as follows. OnChange Enable Block= NULL and Set the High gate in the Periodic Send Enable Block diagram, In the Select Block for Subscribe on Topic section, select SendOn Change= None and click Send Periodically. Figure 19: Changes Made for Periodic Sending The project is loaded back to the device and incoming messages are observed. Figure 20: Periodically Send Messages Subscribe Topic General Configuration; After the project is created, the diagram is designed as in the figure, the mqtt formats of the word and analog registers and the relay output are selected as view and set. Figure 21: Sample Project Configuration with Added Blocks to Subscribe Follow Projects > MQTT Table >Topics to Subscribe > Add Topic. Figure 22: Name of Topic to Subscribe Enter the topic name and click Add. Then, the add entry is clicked from the Publish Blocks for Topic section in a subtable. Figure 23: Selection Block of Subscribtion Here, the block to which the subscribed value will be transferred is selected. Figure 24: Subscriber Blocks After all blocks to be subscribed are determined, the project is loaded into the device. Figure 25 When the message is published to the test2 topic with the above format, the final state of the variables is as follows; Figure 26: Values of Subscribed","keywords":""},{"title":"MP211 Series Software Manual","type":0,"sectionRef":"#","url":"docs/PLC-MP211-Series-Software-Manual","content":"MP211 Software Manual","keywords":""},{"title":"DM100 Hardware Manual","type":0,"sectionRef":"#","url":"docs/RTU-DM100-Hardware-Manual","content":"DM100 General Information DM100 Hardware Manual Physical Interfaces Notes: DM110 has 2 ethernet ports Available for DM100 General Device Specifications Notes: May differ on some modelsAvailable for DM100 Installation Information Rail Installation DIN Rail Mountage First, the upper part of the device is mounted on the DIN rail. Then, with the help of the springs behind the device, when a lightly force is applied to the lower part, the device locates into the DIN rail easily and the montage is completed. DIN Rail Demountage To demount the device, firstly it is pulled from the bottom using flexibility of the spring, the device is removed from the DIN Rail and the demounting is completed. Expansion Installation The DM100 product and its extensions are mounted by sliding over the rail in such a way that the connectors correponds. Connection Diagrams Supply Connection RS485 Serial Port RS232 Serial Port","keywords":""},{"title":"XIO110 Series Hardware Manual","type":0,"sectionRef":"#","url":"docs/PLC-XIO110-Expansion-Modules","content":"Mounting Information XIO110 Expansion Modules DIN Rail Mounting First, the upper part of the device is mounted on the DIN rail. Then, with the help of the springs behind the device, when a lightly force is applied to the lower part, the device locates into the DIN rail easily and the montage is completed. Expansion Installation Assembly between MP110 series PLC or RIO110 series remote I/O products and XIO110 series expansion modules is carried out by sliding the tabs over the rail so that the tabs overlap each other. XIO110.DI8 Digital Input XIO110.DI8 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection Digital Inputs XIO110.DI16 Digital Input XIO110.DI16 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection Digital Inputs XIO110.DO8 Digital Outputs XIO110.DO8 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection Digital Outputs XIO110.DO16 Digital Outputs XIO110.DO16 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection Digital Outputs XIO110.DI8DO8 Digital Outputs XIO110.DI8DO8 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection Digital Input and Outputs XIO110.AI4 Analog Input XIO110.AI4 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection Analog Inputs XIO110.AI8 Analog Input XIO110.AI8 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection Analog Inputs XIO110.AO4 Analog Output XIO110.AO4 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection Analog Outputs XIO110.AO8 Analog Output XIO110.AO8 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection Analog Outputs XIO110.AI4AO4 Analog Output XIO110.AI4AO4 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection Analog Input and Outputs XIO110.P6 RTD INPUT(PT100/PT1000) XIO110.P6 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection RTD Inputs XIO110.R8 Relay Ouput XIO110.R8 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection Relay Outputs","keywords":""},{"title":"Mikrodiagram Editor","type":0,"sectionRef":"#","url":"docs/Mikrodiagram-Editor","content":"Introduction About Mikrodiagram Mikrodiagram is an editor software for used programming of Mikrodev PLC family devices that developed by Mikrodev. Mikrodiagram provide to you perform very complex projects quickly with a visual and easy-to-understand interface. Mikrodiagram library keep advanced blocks that will facilitate complex aplications such as “PID, astronomical timer” as well as basic logic blocks like “AND, OR, XOR”. Settings such as program installation and update, online monitoring and firmware update are presented in Mikrodiagram by connecting to devices via different interfaces(USB/TCP). Setup System Requirements Minimum computer requirments for Mikrodiagram setup: Operating system: Microsoft Windows XP/Vista/7/8/10/12 (32/64 Bit), Linux CPU: 500 Mhz RAM: 512 MB Video Card: 128 MB Disk Area: 200 MB Mikrodiagram Setup Mikrodiagram software is designed to work with current Windows versions. The installation file can be downloaded free of charge from the following internet address: Mikrodiagram Setup Mikrodiagram setup is completed by following the directions on the screen. Usb Driver Setup STM Processor USB driver installation file…………………… can download in internet adress. USB driver setup is completed by following the directions on the screen. = Note:= There is no need to install a USB driver when Mikrodiagram is installed on a computer with Windows 10 or higher operating system. Interface Menu Options In Mikrodiagram menu options \"File, Edit, Build, Tools, Window and Help\" menus are available. File Menu Basic program filing operations can be done from Mikrodiagram file menu. File menu options are described on the tablature. Edit Menu Edit menu is used for undoing the operation, restoring the undo operation, renaming, cutting, copying, pasting, and selecting all operations. Build Menu The Build menu is used for compiling the project. Tools Menu From the Tools menu, you can access Mikrodiagram interface configuration settings and the \"Mikroterminal\" program where the USB serial port device settings are made. Window Menu Window menu is used to Mikrodiagram make to design window settings. There are features such as full screen, sidebar display, mode selector display, screen splitting in various shapes Help Menu From the help menu you can access Mikrodiagram \"help text\" and \"about Mikrodiagram\" options. Information on Mikrodiagram software version can be found on the \"About Mikrodiagram\" tab. Status Bar In the status bar you can select the mode \"move object, link object, add object, add text, add line tag, group blocks, save, save as, diagram settings, zoom in, zoom out,”. The memory space used is also observed from this section. Object Move Mode It is the mode selection used to move objects in Mikrodiagram work area. Object Connect Mode It is the mode used to connect objects together in Mikrodiagram work area. Object Add Mode It is the mode used to insert object in Mikrodiagram work area. When selected, inserts the last selected door type when clicked in Mikrodiagram work area. Text Add Mode It is the mode used to insert word note in Mikrodiagram study area. Add Line Label It is the mode used to insert line tag in Mikrodiagram study area. The line tags provide a convenient way of connecting the output of doors with \"line identification\" on door types to the entrance of other blocks. Mikrodiagram provides ease of reading and following of projects. Group Blocks The projects prepared in Mikrodiagram work area are used in groups. Provides ease of reading and following the projects. Save- Save as On Mikrodiagram, \"Save\" to save changes made to projects and \"Save As\" to save projects in a different folder. Diagram Setting On Mikrodiagram, it is the mode selection used to adjust the dimensions of the work area to which door types can be added. Zoom In-Zoom Out-Reset Zoom On Mikrodiagram, used to zoom in and out of the work area to which door types can be added and to set them to the initial settings. Find On Mikrodiagram, it is the search engine used to find door types or line tags on prepared projects more easily with \"block name, block number, modbus address, line description and line tag\" filters. Used Memory On Mikrodiagram, the memory area to be used is observed when the prepared projects are uploaded to the device. Mode Options Gate Editor On Mikrodiagram, it is mode of project preparation. Projects \"Device configuration, PLC and extensions, text table, block properties table, variable address table, display options and IEC61850 table\" options. Simulation On Mikrodiagram, provide you to test the prepared projects in offline mode without loading the device and examine the program responses. Online View It is used to track block values and load new values into blocks by USB or TCP connection to Mikrodiagram project loaded on the device. Build Mode Options Build mode options can be switched to \"connect / disconnect device, compile project, send to binary device, send project to device and project selection\" modes. Device Connetion/ Disconnetion Used to establish a connection between the device to be programmed and the computer. USB or TCP port connectivity options are available. Build Project On Mikrodiagram, it is used to compile the prepared project. Send Binary to Device Used to send binary files to the device. Send to Device Used to send the prepared project to the device. Project Selection On Mikrodiagram, if more than one project is open it is used to select the project to be sent to the device. Sidebar Options You can switch to the \"block types, line labels, block packages, projects, open diagrams and file system\" modes from sidebar options. Gate Types On Mikrodiagram , in order to select the blocks used for FBD programming and move the blocks to programming age, it is necessary to select \"Gate Types\". Line Labels While \"line labels\" is selected in the sidebar, \"line definitions\" defined in Mikrodiagram can be displayed and used in the project. Projects While \"line labels\" is selected in the sidebar, open projects are displayed, and projects are selected. Split It can be divided into sections using the \"split\" option to select more than one mode in the sidebar. Mikrodiagram Configuration Mikrodiagram configuration can be accessed by clicking on \"Options\" on the \"Tools\" menu. \"environment, text editor, diagram editor and version control\" are available. Environment On the environment tab, there are \"general, keyboard, external tools, MIME types and locator\" options. General From the General tab, Mikrodiagram interface color can be changed and the color settings can be reset. (Return to factory settings.) Mikrodiagram have Turkish and English languages options. If the files are changed from the outside in Mikrodiagram, the application status of the changes is checked. Mikrodiagram needs to be restarted when selecting between language options. When it is desired to automatically save changes made to the project in Mikrodiagram, the \"modified files can be saved automatically\" can be selected and the time interval to be saved can be specified. Keyboard It provides access to the factory settings of the shortcut keys used in Mikrodiagram on the keyboard tab. The shortcut key settings can be changed and the factory default settings can be restored. External ToolsMIME TypesLocator Text Editor The current status of the fonts used in Mikrodiagram is displayed. With the font&colors, behavior, display, generic highlighter, snippets, completion options, the appearance of the text editor can be edited. Diagram Editor It is used to make settings for Mikrodiagram background color, block color, page size and USB port selection It can be adjusted by selecting color from \"background color\" section in Mikrodiagram. It can be adjusted by selecting color from \"block color\" section in Mikrodiagram. Page sizes can be set to any size. It is used to make COM port selection from Mikrodiagram to serial port connection to device. The \"logging\" to save newly created projects is selected. Version Control General Subversion Creating A Project To create a new project in Mikrodiagram, select \"New file or Project open \" in the \"File Menu\". Step 1 Step 2 The newly created project name and project creation place are selected When \"Use as default project location\" is selected, project creation place is fixed for the projects to be created later. Step 3 Programming method selection is done. Step 4 The device to be programmed and the expansion unit if required are selected. Step 5 Project configuration settings can be changed. Step 6 A new project has been created. Project design can be started on the page opened by clicking on the file \"main.mdv\". Using Editor Block Inserting (Gate Type Inserting) Mikrodiagram-specific FBD (function block diagram) can be programmed with door types keep in the programming library. \"Gate Types\" are selected from the sidebar and the door type to be added is selected. The door type to be added is clicked, then the door type is moved to the work area when it is clicked on the work area. The input and output of the added blocks are connected to each other and the design of the project is continued. Inserting Line Label In projects of Mikrodiagram can be made programming by connecting block outputs to inputs of other blocks. Another way to connect block outputs to the inputs of other blocks is to add a line label. Any block named \"line definition\" can be used as a line tag when connected to a block. Line labels facilitate the preparation of projects and increase the readability of the projects. Step 1 To move any block output to another point with a line tag, double-click on the block to access \"object properties\". The \"line description\" tab in the object properties is clicked, and a description is written in the line tags. Step 2 The \"line tag\" is added when clicking on the \"add line tag\" icon in Mikrodiagram status bar and then clicking on the work area. The output of the line tag is connected to the block input, as is the method of connecting the blocks together. Step 3 Double-click on the line label to select from line definitions. Step 4 Another way to add a line tag is; The \"line tags\" are selected from the sidebar. A \"line tag\" can be added to the work area by selecting from the line definitions defined in the project. There is also a filtering feature to choose from line tags. Inserting Text It is used to add notes to project creation area in Mikrodiagram. The fonts and background of the added notes can be changed. If you click on the \"insert text\" button in Mikrodiagram status bar and then click on the work area, the memo page to be added is moved to the work area. The notes can be written on the note sheet. Font, color, background etc. to change the settings right-click on the note and make selection. Grinding Of Blocks Mikrodiagram block grouping feature; it facilitates the follow-up of the functions of the block groups in the projects. Click on the \"Block Group\" icon in the status bar, then the blocks are grouped in the work area using the select-and-drop method. The block grouping properties page is reached by double clicking on the block grouping. The name of the block group is defined by \"group title\" option. With the \"Look\" option, the background of the block group (transparent background or rectangular line) is selected. With the \"Color\" option, the desired color selection is made for the block group. The size of the block group is adjusted by \"Size\" option. In the \"Behavior\" option the selectivity status of the block group is determined. Diagram Settings In Mikrodiagram, it is used to adjust the dimensions of the pages on which the projects are created. In the diagram settings, page sizes can be selected from standard A3, A4, A5, A6, as well as making custom settings for the programmer. Gate Editor In the \"gate editor\" section of the mode options, the project creation page is accessed Object (Block) Properties Block properties are reached by right clicking on the blocks added in Mikrodiagram. Block features include \"object properties, cut, copy, delete, align horizontal, align vertical \" properties. Object Properties In the block object properties, there are \"parameters, line definition and notes\" windows. Parameters The parameter definitions are explained in the table. Line Definition Block outputs are used when you want to be identified by a name determined by the programmer. Line definitions have multiple uses. 1 - The \"line definition\" is used in the blocks where the outputs are to be connected with the \"line label\" to the entrance of another block. 2 - If the block value is to be monitor and changed from devices with LCD screen feature or WEB interface.\"line definition\" should be added 3 - If the blocks in Mikrodiagram will be defined in the \"variable address table\", the \"line definition\" must be added to the blocks. Notes It is used by the user to write notes into the block. Cut-Copy-Paste-Delete Cut-copy-paste-delete operations can be performed on the blocks used in Mikrodiagram project. Cut-copy-delete operations can be done by right clicking on the block. For the \"Paste\" option, right click on an empty area in Mikrodiagram workspace and select the \"paste\" option. Align Horizontal-Align Vertical It is used to scale the selected block group horizontally or vertically in Mikrodiagram. Project Configuration In Mikrodiagram, project-specific configurations can be made from the \"projects\" section in mode options. Device Configuration Connected to device on TCP when, is used for Ip ,port, version etc. settings making and viewing Connection It is used to establish a connection to the device over the TCP port and to restart the device with the \"Restart device\" button on the TCP port. In the \"Device IP\" section, the IP address of the device to which the TCP connection is to be made is written in. If a connection from a local network, connection from an external network, or connection to a GSM device will be established, appropriate IPs must be defined. Port: The listening port identification of the device should be done. The standard listening port 502 in Mikrodev products. It can be changed. In order for the \"Restart device\" button to be active, the TCP connection must be established. Firmware Update After the TCP connection is established, use the name of the device embedded software you want to update. Advanced Parameters After the TCP connection is established, it is used to configure the device's version, IP, port, clock etc. settings. \"Read parameters\" are used to read the parameters, and \"apply parameters\" buttons are used to set the parameters. When \"apply parameters\" is selected while \"Sync Device time with PC time\" is selected, the computer clock is written to the device. In order to be able to set parameters of the GSM section, the device must be GSM supported product. After making the settings with \"Apply parameters\", the device needs to be restarted. PLC And Expansions The devices used in the project are selected. Update Main Device The device to load Mikrodiagram project is selected. The main unit to be used in the project is clicked, the \"Update MainDevice\" tab is clicked to select from the devices. Add Selected Device/Remove Selected Device If the number of physical inputs / outputs used in the prepared project is more than the number found on the main unit, it is necessary to add expansion units to the project. Click on the relevant module in the Extension Devices section, click on the \"Add Selected Device\" tab to add. When the extension unit to be added is desired to be removed, the relevant unit can be clicked and the \"Remove Selected Device\" or \"delete\" key can be pressed. For example, MP201 PLCs have 16 digital inputs (DI). If more than 16 digital inputs are used in the prepared project, it is necessary to add digital input expansion unit (IO200_I32). Incompatible Device Error Code:17 If a mistake is observed in loading the prepared project into the device, the number of physical inputs and outputs used in the project is more than \"main unit and selected units\". The MP201 PLC and 32 digital input expansion modules (IO200_I32) have been added to the project in the above line. A total of \"digital input\" door types have been added to the project. However, since the digital input expansion module (IO200_I32) \"extract the selected unit\" was made, the \"incompatible device error code: 17\" error occurred when loading the project into the device. The digital input expansion (IO200_I32) unit must be added again in order to avoid the error. String Table While SMS and DTMF search features are used in GSM products , SMS content and phone number are used for identification. There are 64 lines in the text table and 64 characters per line. Turkish characters should not be used in the text table. The definitions in the text table must be selected from \"text blocks\" for use in SMS and DTMF searches. String Text Definitions in the text table The Mikrodiagram project is loaded into the device when it is sent to the device. The way in which phone numbers are written in text contents may differ according to GSM operators (some operators support numbering with country phone codes as (+905001234567), others without country phone codes. (05011234567)). No spaces between words when writing text content. Block Property Table Block number of blocks, register addresses and variable types added to the project prepared in Mikrodiagram are used for easier definition of line definitions, logging and online monitoring situations. There is also the possibility to export the table to CSV. Select/Export Selected Blocks to CSV It is used to transfer the selected blocks to CSV. With the \"Invert\" tab, the selection of blocks is reversed. All blocks are selected with the \"All\" tab. With the \"None\" tab, the selections in all blocks are removed. Block No It is used to monitor block numbers of door types and to transfer them to CSV. Reg Address It is used to monitor modbus communication addresses of door types and to transfer them to CSV. Line Description It is used to modify and follow line definitions defined in blocks. The line definitions can be changed from the block object properties and the block properties table. Variable Type There are 4 types of variables in Mikrodiagram: logic, word, float, long type. It is used to monitor and transfer variable types of blocks to CSV. Logging Active& DevNET It can be selected from the block object properties and the \"Add log record to memory and synchronize with DevNET\" options can also be changed from the block properties table. Online View Active It is possible to select the blocks to be watched and changed in the program via USB or TCP port. With \"Turn on / off online monitoring for all blocks\", online monitoring can be activated for all the blocks in the program, as well as the blocks that need to be monitored from the \"online monitoring active\" section can be selected. Variable Address Table Descriptions 1- In DNP3, IEC101 and IEC104 protocols, variable addresses, types and data transmission methods are used. 2- It is used in Modbus Protocol when it is desired to define a different Modbus address than the standard modbus register addresses on the blocks. 3- It can be used to read data recorded in table blocks starting from a specified address determined by TCP communication. 4- In Mikrodiagram, \"block definition\" must be made to blocks so that blocks can be defined in variable address table. Alias It is used naming for blocks transferred to the table. Start Address It is used for variable address definitions. If MODBUS is selected as the protocol type, the selected start address must be selected differently from the block addresses used in Mikrodiagram. (Variable addresses in Mikrodiagram, word: 4000, binary: 1000, analog: 6000, long: 8000). Line Label Block selection is made, defined in the variable address table. In Mikrodiagram should be defined \"line definition\" to blocks to be transferred to the variable address tab. Point Count The number of addresses to be identified from the starting address added to the variable address table is determined. If table blocks are added to the variable address table, the number of points to be read according to the size of the table is automatically defined. (If the starting address is 10000 and the dot number is 4, the defined addresses are 10000, 10001, 10002 and 10003.) Protocol Type Communication protocol type selection of blocks transferred to variable address table is configured. Object Type Object (variable) types that differ in each protocol are selected. Object Class Object classification definitions Send On Trigger In DNP3, IEC 101, IEC104 protocols, the data added to the variable address table at specific time intervals are used to sending to client of the datas. For example, if a trigger is detected for 10 seconds on the side of the IEC slave block and the defined block in the variable address table is \"send on trigger\"; The block value is sent to the client at intervals of 10 seconds. Send Method/Change Value In DNP3, IEC101, IEC104 protocols, the block values defined in the variable address table are used sending to client the when the change exceeds the specified value according to the determined change method. For example, if the sending method is \"change level\" and the change value is 4, then the value client is sent if the difference between the first value and the value to be sent is greater than 4. (If the first value is 15 and the last value is less than 11 or greater than 19, is sent. Example 1 In the sample; RTD block value in which the ambient temperature value is read is defined in the variable address table by the IEC104 protocol. In the variable address table, the address of the address is 12000 and the client will be sent when the temperature value changes by more than 1 ° C (as the value changes). \"Send on trigger\" is selected in the variable address table, but it is not active because the \"Ttk\" input of IEC104 slave block is left empty. Example 2 In the sample; The analog input block values are printed in an analog table at the top and read from the address 11000 defined in the variable address table with 5 modbus protocol from the address. If the size of the analog table block is 20 bytes and 1 analog value is 4 bytes, 5 analog values are recorded in the table. Since the tabloda has 5 analogue values, the analogue table is selected as the line tag, so that the data on the tabloda is automatically displayed in the \"variable address table\" \"dot number\". The \"send on trigger\", \"sending method\" and \"exchange value\" sections are not active due to the Modbus TCP slave protocol feature. Display Options In Mikrodiagram,changing the project working background and block colors; is used block name, block number, and register addresses on blocks. The settings are project-specific. Different settings can be used in each project. Background Color The Mikrodiagram workspace background colors can be changed and reset to their initial settings. Block Color Mikrodiagram block colors can be changed, reset to initial settings. Data View It can make block name, block number and modbus register addresses selection of display status on the block. Simulation The projects prepared in Mikrodiagram are tested without loading in the device and used in monitoring the reactions. Descriptions To run the project prepared in Mikrodiagram in simulation mode, click on \"simulation\" from \"mode selection\". Start the simulation with the Start button. Values are written from \"inputs\" section to digital and analogue inputs. Digital and analog outputs, \"output\" section can be monitored. Assigning values to variables process (word, long, analog, binary register, etc.) is done from the displayed window by right clicking on the corresponding block. Block status and values are monitored over blocks in simulation mode. = Note:= Simulation mode is not active in some blocks such as communication blocks, motion control blocks, GSM blocks. Online View The projects prepared in Mikrodiagram are used after uploading to the device, monitoring the responses using USB or TCP port connection and assigning new values to the blocks. Cyle Periods(ms) It is used to determine the cycle time of online view.At the specified time intervals, online monitoring is performed on the blocks, the block values are read and written over the blocks. Descriptions The processes to be followed in order to get the project prepared in Mikrodiagram to \"online view\" mode; 1 - The selection of the blocks to be monitored online should be made under the heading \"Online view active\" in the \"block configuration\" tab in the \"project configuration\" section. Selection of blocks to be monitored online can be done by right clicking on the block after loading Mikrodiagram project on the device and \"enable / disabe online view\". 2 - USB or TCP port connection is established. 3 - Prepared Mikrodiagram project is loaded on the device. 4 - Reconnect the USB or TCP port. 5 - In the mode selection, click on \"online view\" and the \"cycle periods\" is set. Click \"Start\" to start online monitoring. The red-blue colors flash on the blocks for which online monitoring is active. Connecting To Device It is necessary to connect the device to send the project prepared in Mikrodiagram to the device and to monitor online. Mikrodiagram can be connected to the device via USB or TCP port. Mikrodiagram can not be connected to USB and TCP port at the same time. Usb Connection In order to use the USB connection, installation of the USB driver should be completed. There is no need to install a USB driver on computers with Windows10 or higher operating system. After the USB Driver installation is complete, a USB cable is connected between the computer and the device. \"USB A and USB B\" (printer cable) should be preferred when selecting USB cable. The USB B side is connected to the device and the USB A side is connected to the computer. The COM port from which the USB cable connecting from Device Manager is defined is determined. Connetion interface is accessed by clicking the tab in the build mode options. \"Connect using SERIAL USB\" is selected, COM port selection is made. \"OK\" button is started the connection process. When the “A USB connection is established between the device and computer on serial port COM8” warning is received and the connection button reaches the \"connected\" position, the connection via USB is completed. TCP Connection In order to establish a TCP connection between the computer and the device; At least one of the \"Ethernet, Wi-Fi or GSM\" ports must be found in the device to be connected to the TCP. Establishing a TCP Connection with Ethernet For the Ethernet connection to be established; 1 - The device must be an ethernet port. 2 - The ethernet cable (CAT5, CAT6) connection must be established between the device and the computer. 3 - If the device and the computer are on the same local network, the defined IPs must be selected accordingly. Defining IP to Device The \"Mikroterminal\" program must be used to make device IP settings via USB connection. (See section \"Using Mikroterminals\".) Mikroterminal application can be accessed from Mikrodiagram \"Tools\" menu. After the device and computer IP settings are complete, the device must be \"pinged\" from the computer for the \"ethernet cable connection test\" between the device and the computer. For the \"pinging\" operation, the computer is typed in the \"command window\", the device IP is shown in the picture and \"ENTER\" is clicked. If the resulting output in the top image occurs, the ping operation is \"unsuccessful\". IP settings and ethernet cable connections should be checked again. If the result output looks like the following figure, the ping operation is \"successful\". An ethernet TCP connection can be established from Mikrodiagram to the device. Defining Listening Port to Device The standard listening port 502 in Mikrodev products is defined as. To change the default listening port 502; 1- A TCP socket block should be added to the project prepared in Mikrodiagram. 2- Socket type \"TCP server\" is selected. 3- Listen port is defined. 4- Select \"Ethernet\", \"GSM\" or \"Wi-Fi\" as the \"Media type\". Note: The listening port can be defined by the number of TCP socket blocks added as a server in Mikrodiagram project. Ethernet Connection Test After making the necessary settings for Ethernet connection, for TCP connection; 1 - The link in the Build mode options is clicked on the tab. 2 - Click \"Settings\" in the window that opens. 3 - In the window that opens, \"Device IP\" section is device IP and device listen port is write in \"Port\" section. 4- Select \"Connect using TCP\" and click \"OK\" to install TCP connection. 5- When the TCP connection is established, a warning \"A TCP connection is established between the device and computer\" appears on the screen. The link icon is displayed as \"Connected\" . Establishing a TCP Connection with GSM In Mikrodiagram,GSM with the for installing TCP connection to the device; 1 - The device must have GSM-enabled . 2 - GSM antenna of the device should be connected. 3 - The device signal quality (CSQ) must be between 1 and 31. 4 - SIM card with data package (internet package) should be inserted into the device. (The SIM card must have a fixed IP address.) 5 - APN identification of the inserted SIM card should be done to the device. 6 - The Mikrodiagram installed computer must be connected to the \"wide area network\" (WAN) (internet network). Defining IP to Device In order to establish a TCP connection from Mikrodiagram to the GSM-enabled device,to the \"device IP\" section is written in IP of GSM. Other operations outside the GSM IP definition are identical to the Ethernet TCP connection. Loading The Mikrodiagram Project To Device There are 2 methods to load the project prepared in Mikrodiagram into the device. The project can be sent to the device via USB or TCP connection. Loading Project With Usb Connection USB connection between device and computer After connection is establishment, click on the \"send to device\" button. If the output is as follows in the section \"General Messages\" in Mikrodiagram, then Mikrodiagram project is successfully loaded into the device. Care must be taken to ensure that the file upload process is 100% complete. With the USB connection, the device restarts automatically when the project uploading process to the device is 100% complete. Loading Project With Tcp Connection TCP connection between device and computer After the connection is establised, clicked on the \"send to device\" button. The project loading process must be waited to be 100% complete. Unlike the case of loading the project with USB, device restart is performed manually. After the project loading process is completed 100%, click \"connection\" from the \"device configuration\", click \"restart device\" and the project loading process is completed. Retentivity Configuration When designing a PLC application, it is important for the PLC user to understand the different types of memory in the PLC. Three types of memory are used by the Mikrodev PLC; RAM, SRAM and FLASH memory. SRAM memory can be configured by the PLC user as either retentive memory. SRAM is powered by internal battery when PLC external power is off. Retentive memory is memory that is configured by the user to maintain values through a power reset. Non--retentive memory is memory that is configured by the PLC user to clear data after a power reset. The default behaviour of the blocks in Mikrodev PLC is non-retentive. You need to select \"Retentive\" option to make the block use retentive memory. Example: 1 If “Retentive” is not selected, it does not make any difference whether you select “Load Initial Value” or not. On Power Reset: The device will load the “Register Initial Value” into the register. On Project Upload: The device will load the “Register Initial Value” into the register. Example: 2 On Power Reset: The register will preserve the latest value. On Project Upload: A- If there are any changes in the project like adding/removing retentive blocks, the “Register Initial Value” will be written on the register after boot. B- If there are minor changes on the project like parameter update or add/remove lines, the register will preserve the latest value after boot Example: 3 On Power Reset: The register will preserve the latest value. On Project Upload: “Register Initial Value” will be written on the register","keywords":""},{"title":"RTU300 Series Hardware Manual","type":0,"sectionRef":"#","url":"docs/RTU-RTU-Series-Hardware-Manual","content":"Mounting Information RTU 300 Series Hardware Manual DIN Rail Mountage First, the upper part of the device is mounted on the DIN rail. Then, with the help of the springs behind the device, when a lightly force is applied to the lower part, the device locates into the DIN rail easily and the montage is completed. Expansion Installation Assembly between RTU300 series RTU products and XIO211 series expansion modules is carried out by sliding the tabs over the rail so that the tabs overlap each other RTU300 General Information RTU300 Hardware Manual Physical Interfaces General Device Specifications Note: May differ on some models Power Connection Diagram Supply Connection Digital Inputs Digital Outputs Relay Outputs Analog Inputs Analog Outputs RS485 Serial Port RS232 Serial Port RTU302 General Information Physical Interfaces General Device Specifications Note: One of the RS485 ports can be used as RS422 port. Power Connection Diagram Supply Connection Digital Inputs Digital Outputs Analog Inputs Serial Ports RS485 Serial Port RS232 Serial Port","keywords":""},{"title":"XIO211 Series Hardware Manual","type":0,"sectionRef":"#","url":"docs/PLC-XIO211-Expansion-Modules","content":"Mounting Information XIO211 Expansion Modules DIN Rail Mounting First, the upper part of the device is mounted on the DIN rail. Then, with the help of the springs behind the device, when a lightly force is applied to the lower part, the device locates into the DIN rail easily and the montage is completed. Expansion Installation Assembly between MP211 series PLC or RTU300 series RTU products and XIO211 series expansion modules is carried out by sliding the tabs over the rail so that the tabs overlap each other XIO211.DI16 Digital Input XIO211.DI16 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection Digital Inputs XIO211.DO16 Digital Output XIO211.DO16 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection Digital Outputs XIO211.DI8DO8 Digital Input Output XIO211.DI8DO8 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection Digital Input and Outputs XIO211.AI8 Analog Input XIO211.AI8 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection Analog Inputs XIO211.AO8 Analog Output XIO211.AO8 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection Analog Outputs XIO211.AI4AO4 Analog Input Output XIO211.AI4AO4 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection Analog Input and Outputs XIO211.P6 RTD Input (PT100/PT1000) XIO211.P6 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection RTD Inputs XIO211.R8 Relay Output XIO211.R8 General Information Physical Interfaces General Device Specifications Connection Diagrams Supply Connection Relay Outputs","keywords":""},{"title":"Change Map Icons","type":0,"sectionRef":"#","url":"docs/ViewPLUS-SCADA-Change-Map-Icons","content":"Introduction ViewPLUS Scada has change icons feature according to tag value on the map, this article provide you how to do it. Download ViewPLUS SCADA Map Icons Example from the following link: Map Icons Example Create Category You need create category to add icon images into the map. Click edit button to add category. Click add new category button. Type category name and load image. In this way, map icons using as alarm or other states indicator with different color and shapes. Add Marker Into The Map Add run function code like below for each marker in selected marker properties. function onCheckMarkerIcon(){ var $Category =\"WHITE\"; if (${1} == 3 ) $Category=\"YELLOW\"; else if(${1} == 2) $Category=\"BLACK\"; else if(${1} == 1) $Category=\"RED1\"; return $Category; } ${1} meaning the tag which tag id is 1 var $Category =\"WHITE\"; Default image setted as above. if (${1} == 3 ) $Category=\"YELLOW\"; If tag value equals to 3 then icon will shows image which name \"YELLOW\" else if(${1} == 2) $Category=\"BLACK\"; If tag value equals to 2 then icon will shows image which name \"BLACK\" You can insert more else if lines into the run function code for add more image. Results","keywords":""},{"title":"RTU300 Series Software Manual","type":0,"sectionRef":"#","url":"docs/RTU-RTU300-Series-Software-Manual","content":"RTU300 Software Manual","keywords":""},{"title":"ViewPLUS SCADA Client","type":0,"sectionRef":"#","url":"docs/ViewPLUS-SCADA-Client","content":"Client Operator Screen To connect to the SCADA server, you need to enter the user, password, server address and port information into the client software. You need to use \"User Manager\" to create a new user. When this information is entered correctly, an encrypted connection is established between the server and the client software, and the project main screen sent from the server is displayed on the client. Content shown on the client may differ depending on the access privileges of the user, the pages and the defined tags. Pages that do not corresponds with the access rights of the user will not be shown in the \"page selector\", or links that are directed to those pages will not work. If a visual element on the page contains a tag that the user does not have access to, the user is prevented from watching or controlling this item. ViewPLUS Client is used to connect to an open ViewPLUS SCADA server. Visual operations developed on the editor screen can be viewed on the ViewPLUS Client screen. Numbers\tNames\tDescription1\tUsername\tUsername created in the project is entered 2\tUser Password\tUser password created in the project is entered 3\tIP and Port\tIP and Port information of the server computer is entered 4\tLog In\tAfter all information is entered click for connection to the server 5\tRemember User\tStores end user information entered 6\tProfiles\tAutomatically retrieves added user information 7\tToolbar\tWhen connected to the server, it performs opening and closing of the left window 8\tAppllication 8.1\tSave Current Profile\tCreates a new profile with the information on the client login screen 8.2\tExit\tCloses the ViewPLUSClient program 8.3\tLog out\tLogout from the connected server 9\tSettings 9.1\tLanguage\tTurkish or English language selection 9.2\tDraw ConnectionFault Overlay\tIt shows communication interrupted information on components when connection with the server is lost 9.3\tCache Current Page\tTemperature 9.4\tClear Cache Folder\tTemperature 9.5\tRemember Last Visited Page\tThe last visited page appears on the screen when connecting to the server with ViewPLUSClient 9.6\tDisable Alarm Sound\tDisables the alarm sound that is active 10\tTools 10.1\tReports\tBrings reports page to window on screen 10.2\tPages\tBrings project pages to window on screen 11\tWindow 11.1\tFull Screen\tShow client screen in full window 11.2\tDetach Current Page\tThe last page appears on the screen by automatically logging in to a different client screen 11.3\tScale To\tPage appears with all components on screen size 11.4\tZoom In\tZooms the page view 11.5\tZoom Out\tZooms out the page view 11.6\tSplit Alarms Upside Down\tShows the alarm window page at the bottom of the client screen 11.7\tSplit Alarms Side by Side\tShows the alarm window page on the right side of the client screen 11.8\tRemove Splits\tCloses the alarm windows that are open at the bottom or right of the client screen 12\tHelp 12.1\tDebugWin\tShows Tag ID and Data Value information of the labels on the page screen 12.2\tAbout ViewPLUSClient\tShows client version information Client Help Content Defined Help Content Link on Client program can be changed on Pro-jects>>Client Options menu by using \"Custom Help Link for Clients\" sec-tion. If you would like to disable this option on Client program you can se-lect \"Disable Page Selector Panel\" option. Figure 1: Displaying Custom Help Link for Clients and Disable Options When the \"Help Contents\" option is clicked under the \"Help\" tab on the Cli-ent Program, it redirects to the link that defined in the Editor Program. Figure 2: Displaying Help Contents Link Position When the \"Help Contents\" option is clicked as above, the link defined in the editor is opened over the internet browser. Figure 3: Displaying Help Content Link In Browser","keywords":""},{"title":"SNMP Application Notes","type":0,"sectionRef":"#","url":"docs/SNMP-Application-Notes","content":"SNMP PROTOCOL General Information Figure 1: SNMP Protocol This technology, called Simple Network Management Protocol, is designed to control units on computer networks as they grow. Various information from the temperature on the device to the users connected to the device, from the internet connection speed to the system operating time are kept in the tree structure defined in SNMP. The components that make up SNMP are; • Agent application: The name given to the application that runs the SNMP service on the device and saves the necessary information and transfers it to the administrator unit or applies the change from the administrator unit to the device. • Admin application: The application that receives the information needed from the agent application and displays it to the user and sends the values that the user wants to change to the device. • Network Management System (NMS): It is the name given to the application that runs in the administrative unit and provides monitoring and management of all devices connected to a network. Mikrodev products work as SNMP Agent application. SNMP Management Information Units (MIBs): MIBs are collections of information stored in a hierarchical structure. To reach the value of a particular variable in SNMP, the relevant unit of this universally determined collection is used. For example, for the device description assigned by the manufacturer of a device, it is necessary to access the information in the 1.3.6.1.2.1.2 unit. Block Definitions SNMP Agent Block The SNMP Agent block is added to the project to be able to define the device as an agent. Figure 2: SNMP Agent Block Pin definitions; • Lis: Listen port • SNAg0: Block output • Err: Error Output Block custom settings; Figure 3: SNMP Agent Block Custom Settings Definitions; • UDP Listen Port: Number of listen port, SNMP default is 161. • Read Community, Write Community: It works like username and password. Should be same on the manager. SNMP Trap Block Figure 4: SNMP Trap Block The SNMP Trap block is used to send data in certain exchange values from the device to the manager. As in the figure, it sends the value of the register connected to its input to the manager according to the conditions in its special settings. Block custom settings; Figure 5: SNMP Trap Block Custom Settings Definitions; • SNMP Manager IP Address: The manager’s IP address. • SNMP Manager Port: Port number of manager • Alarm Control: Conditions of send data; o Greater Than: If the input value is greater than the threshold value, data is sent. o Smaller Than: If the input value is smaller than the threshold value, data is sent. o Level Change: If the input value changes by the threshold value, data is sent. o Percent Change: If the input value changes by the %threshold, data is sent. • Threshold Value: Input threshold value. OID CALCULATION and EXAMPLE OID Calculation The query to be sent to the agent device by the manager in the SNMP protocol should be in the following structure; .1.3.6.1.2.1.BlockType.BlockNumber The block type can be the following values; • 1: Bool • 2: Word • 3: Float • 4: Long The block number should not be written as in the Microdiagram, but should be converted to the following format; Block No: 3004 >> 30*100+4 = 30.4 Block No: 3000 >> 30*100+0 = 30.0 Block No: 6000 >> 60*100+0 = 60.0 Example Application An SNMP Agent block and word, binary, long, analog registers are added to the project as in the Figure. Figure 6: SNMP Example Application Figure 7: SNMP Example Application Settings In Figure 6, the OID query that the manager will send to get the values of the registers in the project should be as follows; Binary register with Block Number 2: .1.3.6.1.2.1.1.0.2 Word register with Block Number 3000: .1.3.6.1.2.1.2.30.0 Analog register with Block Number 5000: .1.3.6.1.2.1.3.50.0 Long register with Block Number 6000: .1.3.6.1.2.1.4.60.0 MIB Browser program can be used as manager. After the IP and port settings are made, if the above queries are sent from the OID section, the values of the registers will appear as in the Figure. Figure 8: MIB Browser SNMP Application SNMP Trap Application The way the agent sends data to the manager without sending a query is the Trap method. In this method, the register connected to the input of the Trap block is sent according to the conditions in the Trap block. Figure 9: SNMP Trap Application Trap settings are entered as follows. Figure 10: SNMP Trap Block Custom Settings MIB Browser Trap settings are also made as follows. Figure 11: MIB Browser Trap Receiver Settings If the register value at the input of the trap block is changed and the condition specified in the block settings is met, it will appear on the trap receiver as follows. Figure 12: MIB Browser Trap Receiver","keywords":""},{"title":"ViewPLUS SCADA Database","type":0,"sectionRef":"#","url":"docs/ViewPLUS-SCADA-Database","content":"Database Tables ViewPLUS SCADA uses various database tables for handling SCADA Project, logging and reporting. For PostgreSQL The tables are seperated by \"public\" and \"logs\" schemas. The public schema consists of project channels, tags, users related tables. The \"logs\" schema consists of logs and statistical log tables. alarms : This table contains alarm definitions created by SCADA editor channels : Channel definitions contains connection information to the field devices tags : These are the the tag definitions used to define the tag details in the system users: Table of authorised users list for the project aalm_table : This table contains the real time active alarms information of the system alarm_log : Contains historical alarm information event_log : It contains event information like user login, user requests etc. lcd_table : This is the latest change time table containing the latest read values of the system tags from the field devices. tag_log : All the raw data gathered from the field is recorded into tag_log table. This table can increase very rapidly in size. tag_log_agrhour : The hourly statistical table of system tags. The statistics are calculated using tag_log table. The table is updated once a minute. tag_log_agrday : The daily statistical table of system tags. The statistics are calculated using tag_log_agrhour table. The table is updated once a minute. tag_log_agrweek : The daily statistical table of system tags. The statistics are calculated using tag_log_agrday table. The table is updated once a minute. tag_log_agrmonth : The daily statistical table of system tags. The statistics are calculated using tag_log_agrday table. The table is updated once a minute. tag_log_agryear : The daily statistical table of system tags. The statistics are calculated using tag_log_agryear table. The table is updated once a minute.","keywords":""},{"title":"ViewPLUS SCADA Data Manager","type":0,"sectionRef":"#","url":"docs/ViewPLUS-SCADA-Data-Manager","content":"Archives are used to reduce the size in high-dimensional databases and to make a more detailed search between logs. To get to the archive screen, data manager is started from the tools tab. Figure 1: Tools Bar Archiving is selected in the window that opens. Figure 2: Data Manager Menu Date is entered in Archieve Data Older Than section. All logs saved in the database before the date entered will be transferred to the archive database. Archiving is started by clicking Start Archiving. Figure 3: Archieve Screen-1 When OK is selected for the warning displayed after archiving, archived logs in the main database are deleted. Since these logs are deleted, they will not be displayed in reporting in the main project. It can only be accessed from the Archive database. If Cancel is selected, logs are kept in the main database and logs are saved in the archive database. Figure 4: Archieve Screen-2 After seeing the text Archive process completed in the data manager, archiving process is completed. Figure 5: Archieve Screen-3 It is seen that a new database named main database archive has been created. Figure 6: Database Archieve Screen Logs before the archiving date determined in the data manager are displayed in the archivetestlog_archive database. Figure 7: Database Archieve Log Screen","keywords":""},{"title":"ViewPLUS SCADA OPC UA Server Service","type":0,"sectionRef":"#","url":"docs/ViewPLUS-SCADA-OPC-UA","content":"Install OPC UA Server Service Download the latest version of ViewPLUS SCADA from the MIKRODEV website and install it.ViewPLUS SCADA Link Under the ViewPLUS SCADA tools tab, the installation process is performed with the “Install OPC Server Service” option. Figure 1: InstalL Service In the task manager Services, it is checked that the “VPlusScadaOPCService” service is running. Figure 2: In The Task Manager VPlusScadaOPCService","keywords":""},{"title":"Telediagram Editor","type":0,"sectionRef":"#","url":"docs/Telediagram-Editor","content":"Using IEC 104 IEC 60870-5-104 is a protocol for power system monitoring and controlling. Mostly used to communicate between substations and control centers over Ethernet (Fiber optics, 2/3/4G, ...). IEC 60870-5-104 protocol is an extension of IEC 60870-5-101 protocol with the changes in transport, network, link and physical layer services to suit the complete network access. Here you will find basic information about protocol parameters: APCI - Application Protocol Control InformationAPDU - Application Protocol Data UnitASDU - Application Service Data Unit Address IP address - every device in Ethernet have physical addressASDU address - every slave (client) device has a logical address, also one device could have more than one ASDU addressIOA address - information object address Dec\tType\tDescription\tDirection1\tM_SP_NA_1\tSingle-point information\tMonitor 2\tM_SP_TA_1\tSingle-point information with time tag\tMonitor 3\tM_DP_NA_1\tDouble-point information\tMonitor 4\tM_DP_TA_1\tDouble-point information with time tag\tMonitor 5\tM_ST_NA_1\tStep position information\tMonitor 6\tM_ST_TA_1\tStep position information with time tag\tMonitor 7\tM_BO_NA_1\tBit string of 32 bit\tMonitor 8\tM_BO_TA_1\tBit string of 32 bit with time tag\tMonitor 9\tM_ME_NA_1\tMeasured value, normalized value\tMonitor 10\tM_ME_TA_1\tMeasured value, normalized value with time tag\tMonitor 11\tM_ME_NB_1\tMeasured value, scaled value\tMonitor 12\tM_ME_TB_1\tMeasured value, scaled value wit time tag\tMonitor 13\tM_ME_NC_1\tMeasured value, short floating point number\tMonitor 14\tM_ME_TC_1\tMeasured value, short floating point number with time tag\tMonitor 15\tM_IT_NA_1\tIntegrated totals\tMonitor 16\tM_IT_TA_1\tIntegrated totals with time tag\tMonitor 17\tM_EP_TA_1\tEvent of protection equipment with time tag\tMonitor 18\tM_EP_TB_1\tPacked start events of protection equipment with time tag\tMonitor 19\tM_EP_TC_1\tPacked output circuit information of protection equipment with time tag\tMonitor 20\tM_PS_NA_1\tPacked single point information with status change detection\tMonitor 21\tM_ME_ND_1\tMeasured value, normalized value without quality descriptor\tMonitor 30\tM_SP_TB_1\tSingle-point information with time tag CP56Time2a\tMonitor 31\tM_DP_TB_1\tDouble-point information with time tag CP56Time2a\tMonitor 32\tM_ST_TB_1\tStep position information with time tag CP56Time2a\tMonitor 33\tM_BO_TB_1\tBit string of 32 bit with time tag CP56Time2a\tMonitor 34\tM_ME_TD_1\tMeasured value, normalized value with time tag CP56Time2a\tMonitor 35\tM_ME_TE_1\tMeasured value, scaled value with time tag CP56Time2a\tMonitor 36\tM_ME_TF_1\tMeasured value, short floating point number with time tag CP56Time2a\tMonitor 37\tM_IT_TB_1\tIntegrated totals with time tag CP56Time2a\tMonitor 38\tM_EP_TD_1\tEvent of protection equipment with time tag CP56Time2a\tMonitor 39\tM_EP_TE_1\tPacked start events of protection equipment with time tag CP56Time2a\tMonitor 40\tM_EP_TF_1\tPacked output circuit information of protection equipment with time tag CP56Time2a\tMonitor 45\tC_SC_NA_1\tSingle command\tControl 46\tC_DC_NA_1\tDouble command\tControl 47\tC_RC_NA_1\tRegulating step command\tControl 48\tC_SE_NA_1\tSet-point Command, normalized value\tControl 49\tC_SE_NB_1\tSet-point Command, scaled value\tControl 50\tC_SE_NC_1\tSet-point Command, short floating point number\tControl 51\tC_BO_NA_1\tBit string 32 bit command\tControl 58\tC_SC_TA_1\tSingle command with time tag CP56Time2a\tControl 59\tC_DC_TA_1\tDouble command with time tag CP56Time2a\tControl 60\tC_RC_TA_1\tRegulating step command with time tag CP56Time2a\tControl 61\tC_SE_TA_1\tMeasured value, normalized value command with time tag CP56Time2a\tControl 62\tC_SE_TB_1\tMeasured value, scaled value command with time tag CP56Time2a\tControl 63\tC_SE_TC_1\tMeasured value, short floating point number command with time tag CP56Time2a\tControl 64\tC_BO_TA_1\tBit string of 32 bit command with time tag CP56Time2a\tControl 70\tM_EI_NA_1\tEnd of Initialization\tMonitor 100\tC_IC_NA_1\tInterrogation command\tControl 101\tC_CI_NA_1\tCounter interrogation command\tControl 102\tC_RD_NA_1\tRead command\tControl 103\tC_CS_NA_1\tClock synchronization command\tControl 104\tC_TS_NA_1\tTest command\tControl 105\tC_RP_NA_1\tReset process command\tControl 106\tC_CD_NA_1\tDelay acquisition command\tControl 107\tC_TS_TA_1\tTest command with time tag CP56Time2a\tControl 110\tP_ME_NA_1\tParameter of measured values, normalized value Control\tNo 111\tP_ME_NB_1\tParameter of measured values, scaled value Control\tNo 112\tP_ME_NC_1\tParameter of measured values, short floating point number Control\tNo 113\tP_AC_NA_1\tParameter activation Control\tNo 120\tF_FR_NA_1\tFile ready\tFile transfer 121\tF_SR_NA_1\tSection ready\tFile transfer 122\tF_SC_NA_1\tCall directory, select file, call file, call section\tFile transfer 123\tF_LS_NA_1\tLast section, last segment\tFile transfer 124\tF_FA_NA_1\tACK file, ACK section\tFile transfer 125\tF_SG_NA_1\tSegment\tFile transfer 126\tF_DR_TA_1\tDirectory\tFile transfer 127\tF_SC_NB_1\tRequest archive file\tFile transfer Cause of transmission Dec\tDescription1\tPeriodic, cyclic 2\tBackground interrogation 3\tSpontaneous 4\tInitialized 5\tInterrogation or interrogated 6\tActivation 7\tConfirmation activation 8\tDeactivation 9\tConfirmation deactivation 10\tTermination activation 11\tReturn information caused by a remote command 12\tReturn information caused by a local command 13\tFile transfer 20\tInterrogated by general interrogation 21\tInterrogated by interrogation group 1 22\tInterrogated by interrogation group 2 23\tInterrogated by interrogation group 3 24\tInterrogated by interrogation group 4 25\tInterrogated by interrogation group 5 26\tInterrogated by interrogation group 6 27\tInterrogated by interrogation group 7 28\tInterrogated by interrogation group 8 29\tInterrogated by interrogation group 9 30\tInterrogated by interrogation group 10 31\tInterrogated by interrogation group 11 32\tInterrogated by interrogation group 12 33\tInterrogated by interrogation group 13 34\tInterrogated by interrogation group 14 35\tInterrogated by interrogation group 15 36\tInterrogated by interrogation group 16 37\tInterrogated by counter general interrogation 38\tInterrogated by interrogation counter group 1 39\tInterrogated by interrogation counter group 2 40\tInterrogated by interrogation counter group 3 41\tInterrogated by interrogation counter group 4 44\tType Identification unknown 45\tCause unknown 46\tASDU address unknown 47\tInformation object address unknown Block Information By adding IEC104 slave block , IEC 104 will be activated on the RTU.TCP or Serialport block is connected to IEC104 block ser input.IEC 104 blocks must be added for each server to serve multiple servers.Asd input is used if IEC104 Asdu address is set from outside but not inside block.On the rising edge of the trigger, periodic transmission between IEC104 objects is activated and the selected objects are transmitted to the server periodically. Trigger input can be left blank. Ser: TCP Socket Input. The TCP server socket block from which the IEC104 protocol will work is connected from this input Trg: Trigger Input Trigger input for periodic sending. It works as a rising edge. Asd: Asdu Address Input The ASDU address is used as input. Q1: Link Status If the IEC104 connection between SCADA and RTU is installed, this output value is 1, otherwise 0. Q2: SCADA write status, If SCADA requests select and execute, a pulse is generated at this output. Custom Settings AsduAddress: IEC104 slave station ASDU address is defined AsduAddress: IEC104 slave station ASDU address is defined T0: Timeout for the establishment of the connection with the server. (Not used Slave) T1: This parameter defines the time in seconds that slave waits maximum for an acknowledge from the master. T2: Timeout period for Ack (A S-format frame will be sent at the latest after this time starting from the last received telegram from the master) T3: Test frame sending time (A Test frame will be sent at the latest after this time starting from the last received telegram from the master) K: The maximum allowable difference between the sequence number in the received packet and the number in the send status variable. W: ACK(acknowledge message) sending frequency(sends ACK after W packets) Sample Application In RTU logic projects , with the addition of IEC 104 Slave Block, the IEC 104 protocol is activated in the RTU. Variables in the RTU logic project, IEC104 association is provided in the variable address table. Variable Mapping with Protocol Variable Address Table The relevant protocol is activated in the RTU logic project by adding the protocol block. Variables in the RTU logic Project, association between protocol.is provided in te variable address table Defining Line Labels *Line label can be defined for all blocks defined on the Mikrodiagram. In the variable table, the line label must be defined in order to be able to associate with the protocol addresses. Attaching a Line Label Alias: A special name is given that defines this defined variable. Start Address:The address allocated for this variable on SCADA is written here. It is written as a decimal value Line Label:The block to be associated on the Mikrodiagram is selected with the line label. Point Count:Calculated automatically. It makes sense on tables. Protocol Type:Modbus, Dnp3, IEC101, IEC104 are selected. Object type will change according to protocol type. Object Type:IEC104 object type information selected. look the protocol type information for detailed information. Object Class:The class information to which the variable belongs is selected. Send On Trigger:IEC104 Slave block is the selection to send to this SCADA as a periodic send when the test is detected from the trigger input. Send Method: If the value of the defined variable is changed, the operation to be performed is selected. Level: When the quantity defined in \"Change Value\" is changed, the transmission is triggered. Percentage: The transmission is triggered when there is a change in the percentage defined in \"Change Value\". None: Value exchange does not trigger posting Change Value: With the \"Send method\", it adjusts the percentage change in the level. Telediagram License Installing the License File To get a valid license please send your \"hardware id\" to sales@mikrodev.com. To find out your hardware id; after you download and install Telediagram application, go to the \"bin\" directory of the application and run \"license_user.exe\" . Before running \"license_user.exe\" make sure that no \"usb stick\" or \"external harddrive\" is connected on your computer since that may change your hardware ID. After you receive a valid \"tlicense.dat\" file, copy this file into the \"bin\" directory of Telediagram application The licence will automatically be loaded when you restart the Editor","keywords":""},{"title":"ViewPLUS SCADA Server","type":0,"sectionRef":"#","url":"docs/ViewPLUS-SCADA-Server","content":"Overview The server software must be associated with a project in order to be able to run. When run from the Editor menu, the currently open project is used by the server. To run the server independently from the editor, select \"Editor > Select Tools > Create Server Files to specify a folder and copy the server files to this folder. The \"ServerEngine\" script is used to launch the server. The \"ServerEngine\" script looks for a folder named \"Project\" in the same folder as the default behavior. The \"Project\" folder contains special files created by the editor. The main ones are; \"MicrodevScada.ini\", \"Project.zip\", \"project pages with .sca extension\", and component files. The server reads the information in the \"MikrodevScada.ini\" file, such as where to connect to the database and where to keep the records. When the SCADA server is started for the first time, the user may be prompted to enter the database connection information. The server can open a project in a different folder by using command line parameters below. “ServerEngine –dir “C:\\Users\\yg\\Desktop\\server\\projectname“ ” -dir : Project folder Server Home Screen The main screen of the server has a console on which general system logs can be viewed. This console shows important server changes. More detailed server logs are saved in a separate file. When the \"Start\" button is pressed, the server tries to connect to the field devices. After the connection is established, the server opens a port to which clients can connect and waits for incoming connections. When the server starts reading data from the field, it records them on the database server as specified in the project settings. Instantaneous readings of field-readable data can be viewed on the tag monitoring screen. Figure 1: Add Password Server Tag Monitor Screen The instantaneous values ​​on the tag monitoring screen can be filtered according to parameters such as tagID, tag name, channel name, device address. If there is a text \"dced\" next to the numeric data shown in the \"Value\" field, this indicates a connection problem between the device and the SCADA server Information about the protocol drivers running on the drive monitoring screen is given. Information about connection problems can be obtained from this console. The alarm screen allows you to observe the history of alarms generated in the system and the current alarms. Server Auto Start Windows Platform Follow these steps to start the server automatically (for a sample project named \"TestProject\"): Create a shortcut on the desktop for the \"ServerEngine.exe\" program in the installation folder of ViewPLUS. Shortcut Creation Right-click the created shortcut and select \"Properties\". Change the field marked \"Target\" to the following (Change the file path according to your system): C:\\Users\\<User Name>\\TestProject\" -start C:\\Program Files (x86)\\ViewPLUS\\bin\\ServerEngine.exe\" Then copy this shortcut to \"C:\\Users\\<User Name>\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\" The server will now start automatically when the user logs in to the system. Auto startup can be accomplished by copying the OperatorClient shortcut to \"C:\\Users\\<User Name>\\AppData\\ Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\" Email Server Settings E-mail can be sent in case of an alarm to the user whose \"e-mail send option\" is marked as active from the user manager. For this, e-mail configuration settings must be made on the server. In addition, the smtp server to be used should allow \"less secure application access\". The configuration file \"ServerEngine.ini\" where the e-mail server settings can be found in the following folder: C:\\Users\\<user name>\\AppData\\Roaming\\Mikrodev\\ScadaServer\\<project name>\\ServerEngine.ini In this file, the following variables must be set correctly under [SMTP]: [SMTP] SMTP_user =<email username> SMTP_pwd=<e-mail password> SMTP_host=<smtp server address> SMTP_port=<smtp server port> SMTP_mailDelay=<The time (in seconds) to wait for an e-mail to be sent after an alarm condition(in seconds)> Create Server Runtime You can also run the developed SCADA project without installing ViewPLUS on a different computer. By selecting \"Create Server Files\" from the \"Tools\" menu for this, you can collect the files in a folder for project and server work. By moving this folder, it is possible to run your project on different server machines. Advanced Settings log_server.txt: On Windows systems, it is located in the following folder: C:\\Users\\<username>\\AppData\\Roaming\\Mikrodev\\ScadaServer\\<project name> It is the file where the detailed server logs are found log_serverstarter.txt : The file that contains logs of the server monitor software OperatorClient.ini : ServerEngine.ini: On Windows systems, it is located in the following folder: C:\\Users\\<user name>\\AppData\\Mikrodev\\ScadaServer\\<project name> [Login]> ServerAdr : Database address [Login]> DbName : Database name [Login]> DbUserName : Database user name [Login]> DbPassword : Database password [Connection] > Port : The default server port is 560. A different port can be selected by changing this parameter. [Logging] > IsLogging : Data logging can be enabled / disabled(true/false) [Logging] > IsLoggingDısconnections: You can choose whether to log connection failures [REDUNDANCY]> ServerMode : Determines the mode of operation. This value can be PRIMARY or BACKUP. When this mode is set to BACKUP, the server communicates with the PRIMARY server to form a redundant structure. [REDUNDANCY]> PrimaryIP : The PRIMARY server IP address to which the server in BACKUP mode will connect is written in this field. [REDUNDANCY]> PrimaryPORT : The port number of the PRIMARY server to which the server in BACKUP mode will connect is written in this field. [REDUNDANCY]> Timeout : PRIMARY is the value in seconds that specifies how long the server will remain active if the BACKUP server is down. Active Sessions It shows the information of the people who log on in the server and client environment. Contains remote IP, user, session key, last msg time informations. Figure 1: Add Password White List This will allow connections only from the specifed IP adresses. Figure 1: Add Password Enable white list filtering. By clicking add an IP address, IP address is entered into the window displayed. Figure 1: Add Password Black List By clicking add an IP address, IP address is entered into the window displayed. The IP addresses entered are blocked and access to the server is prohibited. Figure 1: Add Password Client Settings Enable Client Auto Loggoff If no operations are performed on the client screen for the specified time in minutes when enable client auto loggoff is marked, the session is closed automatically. Don’t allow multiple connection for same user When don’t allow multiple connection for same user is marked, multiple logins are prohibited on the client screen with the same user. Enable user blacklist after 3 failed login attempts If the user information is entered incorrectly 3 times on the client screen when enable user blacklist after 3 failed login attempts is marked, the IP address is automatically black list. Figure 1: Add Password Parallel Redundant Operating Mode ViewPLUS SCADA software can run in \"Parallel Redundant Mode\" on a server cluster consisting of several computers. In this case, the server downtime can be reduced to the minimum. Redundant mode servers must be on the same local area network. Installation Steps While ViewPLUS is running in this mode, both 2 servers (PRIMARY, BACKUP) must be able to access the project database over the network. At the same time, project files must be present on the server computers and they must be up to date (same as each other). To ensure this synchronization, a version control tool such as SVN can be used or the files can be moved manually. In order for the backup and main server to communicate, the main server must have port 51313 open on the computer. Make sure that this port is allowed in the firewall settings. In the next step, the following configuration settings must be made in the ScadaServer.ini files on the primary server (PRIMARY) and the backup server (BACKUP): Primary server(PRIMARY): [REDUNDANCY] ServerMode=PRIMARY PrimaryIP=192.168.2.201 PrimaryPORT=51314 Timeout=60 size=0 Backup server(BACKUP): [REDUNDANCY] ServerMode=BACKUP PrimaryIP=192.168.2.201 PrimaryPORT=51314 Timeout=60 size=0 ServerMode: Specifies the backup operation mode. This value can be PRIMARY or BACKUP. When this mode is set to BACKUP, the server communicates with the PRIMARY server to create a redundant structure. PrimaryIP: The PRIMARY server IP address to which the server in BACKUP mode will connect is written in this field. PrimaryPORT: The port number of the PRIMARY server to which the server in BACKUP mode will connect is written in this field. Timeout: Is the value in seconds that specifies the time PRIMARY server is out of service before the BACKUP server become active. In the example, the IP address of the primary server (PRIMARY) is a fixed IP of \"192.168.2.201\". The IP address of the primary server in the system to be installed must be a static IP in this way, variable IP from a DHCP server should not be used. The port number set in PrimaryPORT can be set differently according to security requirements. In this case, the correct port number should be entered by modifying every 2 configuration files. After the configuration process is completed, first the primary and then the backup servers are started . From this moment on, the backup server will switch on and off in case of a shutdown, watching the primary server. When the primary server becomes active again, the backup server will stop itself by switching to the watching mode. Synchronization of the Project on the Backup Server When the backup server starts running, the server will use the files in the project folder. Therefore, if these files are not synchronized with the files on the main server, an older version of the project will be sent to the clients. A synchronization mechanism must be established to prevent this from happening. Assuming that the project files are on the SVN version control server as described earlier, you can provide automatic synchronization as follows We create a batch script that will trigger SVN synchronization. In this example, the file name is updateSvn.bat. Modify the contents of the file according to the file paths in your system to make it like this: CD D:\\MIKRODEV\\Projects\\DepoProject \"C:\\Program Files\\TortoiseSVN\\bin\\svn.exe\" update Every time we run this script, it will synchronize the project folder with that of the SVN server. In the next step, this script will be configured to run at specific intervals. For this we will use the Windows \"Schedule Tasks\" tool. By following the steps below, the synchronization procedure will be run every 10 minutes. You can configure this time interval as you like. Task Scheduler Create a new task Timing Programming Set timing settings. In this example we choose to work once every 10 minutes. Script Selection Finally, associate the .bat file you created with the timer. If you confirm the timer, the backup server will synchronize itself every 10 minutes with the project on the main server. In case of failure, downtime or excessive traffic at the primary server, a redundant server can be implemented to take the primary server's place. When backup server is selected in redundancy mode, primary server IP and redundant server activation timeout are entered. Figure 1: Add Password Information The Information tab shows the capacity information that the project occupies in the database. Figure 1: Add Password The size of the project in the PostgreSQL database is shown below. Figure 1: Add Password","keywords":""},{"title":"Reporting","type":0,"sectionRef":"#","url":"docs/ViewPLUS-SCADA-Reporting","content":"Overview You can use the Reporter to view and analyze trend data that is logged by the SCADA software. Reporting is done on 3 basic record types. These are tag logs, alarm logs and event logs. Tag Logs Tag log is the data that has been recorded, depending on the logging configuration of the tag. Output can be generated in different formats by filtering according to location, time and other parameters of the tag. Selection of Tags to Log On the tags selection screen, tags under a station can be grouped or all can be selected. If you use the tags option under the station, a list of all the stations appears. Tags under the station can be listed by clicking on the station name. \"All Tags\" option is selected to make selection through all tags. Filters can be made on the tag list in different ways according to the tag properties. Tags to be reported from the list in the left panel are selected by double clicking. The selected tags are displayed in the panel on the right. To delete a specific tag from the right panel, select the tag and press the \"Delete\" key on the keyboard. To delete all of the tags, select \"Clear List\". Viewing Tag Log When the report sheet is first opened, the values of the selected tags are displayed graphically for a specific time interval. \"Table View\" can be selected to display the data on table form . Different choices can be made regarding the time range and type of data shown. Selecting a Time Interval The time range of the displayed data can be selected in 3 different ways. A) Interval : 2 dates are selected B) Within the last: Hour, day, week, etc. are selected and the backward time from current date/time is calculated. C) On Time/Date: An exact date can be selected , or a time value could be added forwards or backwards to this date. For example, \"This Day - 5\", means \"5 days ago\". If the date is selected and time unit is \"Month\"; the month of that date is selected as the time interval. Selecting Data Type The type of data to be displayed can be statistical value as well as the value of the data itself. A) All Data: Shown the actual value of the data that has been logged B) Statistics: Displays the mean, total, maximum, minimum, change and median values of the data for the selected time periods. For example, if the hourly maximums in a daily time interval are selected, the time interval is divided into hourly slices to produce an output consisting of 24 points. Managing Charts Show/hide Legend button: Shows or shows the name of the plotted tag and descriptions that show line color in the upper right corner of the chart Add a New Chart: Adds a new chart object that you can compare the data in the main chart with the previous time periods. The added chart is displayed synchronously with the main chart according to the determined time interval. If the data belonging to the selected item in the range defined on the chart is present, this data is indicated by a point. The points shown can be connected to each other in different ways. Underneath the chart is the charting properties menu for each individual chart. Through this menu, the following operations can be performed A) Show / hide chart: This line can be hidden and shown with this button B) Charged / unloaded: Below of the line related to the tag is filled in integral. It may be easier to compare with other tags in this way. C) Merge Points: The points indicated by the item data can be merged into different ways. Saving Charts According to the selected parameters, the chart can be saved in an image file in \"png\" format. Use the \"Save Chart \" button in the left panel. Exporting Data The data according to the selected parameters can be exported in various formats. For this, firstly the table view button is pressed to create a data table. By using the buttons \"html, xml, xslx, csv\" located at the top of the table view screen, the data in the table is converted to these formats and stored. Saving Filters The parameters selected to create the data can be saved, and then the same filter can be applied again when needed. The parameters created for this should be applied at least once (Apply Button). After doing this, select \"Save this filter\" and a name will be given to the filter.The filters are saved for user account. The user can reach these filters from any location. The saved filter can be applied from the saved filters menu on the right side of the screen. Calling Saved Filter Queries When the filters in this menu are copied by right clicking with the mouse, the content of the filter is copied to the clipboard. This copied content can be linked to objects on the SCADA Editor screen. When clicked on the related object on this screen, the report screen opens and the predefined filter is run. Creating Reporting Command It is possible to create the report output in the desired format by calling the created filters through the reporting command line. For this, it is enough to give the command parameters required for the reporting application. Using this feature, it is possible to create automatic reports at certain time intervals via the \"Task Scheduler\" of the Windows operating system. ScadaReporter.exe -database modpollread -user postgres -password pwd123 -server localhost -port 5432 -query twohours -format csv -output \"C:\\Users\\yg\\Documents\\Reports\\Last2Hours\" -database Name of the project database (same name as project) -user Database user name -password Database user password -server Database ip address -port Database connection port -tnsname tns name for Oracle databases -format Report output form. Possible values are html, csv, xlsx, xml dir -query The name of the filter saved in the report. This parameter is required for the report command. If not given, we do not produce a report; The reporting interface opens -output The path and name of the file to be exported.","keywords":""},{"title":"ViewPLUS SCADA Web API","type":0,"sectionRef":"#","url":"docs/ViewPLUS-SCADA-WebApi","content":"Introduction You can access and control the devices on the field by using ViewPLUS SCADA Node WebAPI. Download ViewPLUS SCADA Node WebAPI from the following link: SCADA Node Web API Database Connection The database type that the project is working on must be specified with the HR_DBTYPE environmental variable (POSTGRES / ORACLE) For a project on the Postgresql database, the HR_PGCONNECTIONSTRING environmental variable must be set in the format given in the example below. For a project on Oracle database, HR_CONNECTIONSTRING, HR_USER and HR_PASSWORD environmental variables should be set in the following format. Starting the Server Install node.jsInstall dependencies: In the application folder type \"npm install\"Set enviromental variables for: HR_DBTYPE : POSTGRES or ORACLE HR_CONNECTIONSTRING : Oracle DB connection string(example : 127.0.0.1/orcl) HR_PGCONNECTIONSTRING : Example postgres://postgres:qwx123@127.0.0.1:5432/scadatest1 (example; user: postgres, pwd: qwx123, server: 127.0.0.1, port: 5432, project: scadatest1) HR_USER : Oracle DB user name for project( It is SCADA project name) HR_PASSWORD : Oracle DB passwordConfigure web server port if needed on the file \".\\config\\web-server.js\" (default 3000)Change application secret for JWT on ./config.jsStart server by typing \"node .\" For taking an Access token A new user is created in the SCADA. The user must have the \"Can Access Reports\" authority. Inside the body, a POST query is sent to http://localhost:3000/api/auth/login with the keys \"username\" and \"password\". A token is taken as follows: { \"auth\": true, \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNTM3MzU5MDc1LCJ leHAiOjE1Mzc0NDU0NzV9.NX5kX4HLVdE4IoPcSBWkdlGKK_pksHnTnEoWCx1xCyc\" } http://localhost:3000 is given as an example. Replace this with the actual system's IP and Port information. To read data from API The following GET requests can be sent by adding this token to the \"x-access-token\" key value in the header: Information of all tags defined in the system http://localhost:3000/api/auth/tags or http://localhost:3000/api/auth/tags/{id} Sample Result: [ { \"id\": 1, \"tagname\": \"tag1\", \"kanal_id\": 1, \"polfreq\": 3, \"deviceaddress\": \"1\", \"variableaddress\": \"0\", \"variablesize\": 4, \"variabletype\": 2, \"islogging\": 0, \"privilegelevel\": 0, \"tagtype\": 0, \"schedulerindex\": 0, \"loggingfreq\": 300, \"loggingmethod\": 6619250, \"readright1\": 0, \"readright2\": 0, \"writeright1\": 0, \"writeright2\": 0, \"keywords\": null, \"enabled\": 1, \"description\": null, \"unitname\": null, \"protocolobjecttype\": 0, \"toption\": 0, \"logfilteroptions\": \"{\\n \\\"filtertype\\\": 0,\\n \\\"refval1\\\": null,\\n \\\"refval2\\\": null\\n}\\n\", \"equipment\": null, \"measuredentity\": null, \"location\": null, \"formula\": null, \"modified\": 0 }, … ] Information of all alarms that defined in the system http://localhost:3000/api/auth/alarms or http://localhost:3000/api/auth/alarms/{id} Sample Result: [ { \"id\": 1, \"alarm_name\": \"Alarm1\", \"alarm_desc\": \"NoDescription\", \"alarm_class\": \"General\", \"enabled\": 1, \"ackrequired\": 0, \"islogging\": 0, \"tag_id\": 3, \"alarm_type\": 0, \"alarm_level\": 0, \"comp_type\": 1 }, … ] By using the \"tag_id\" value in this scheme, information about the tag that causes the alarm can be accessed from \"api / auth / tags\". List of alarms that are instantly active in the system: http://localhost:3000/api/auth/active_alarms or http://localhost:3000/api/auth/active_alarms/{id} Sample Result: [ { \"id\": 4, \"alarm_id\": 1, \"user_name\": null, \"dataval\": 1, \"currentstate\": 1, \"trigertime\": 1537229311140, \"acktime\": -1, \"recovtime\": -1, \"logtime\": 1537229311140, \"logdate\": null, \"mailsent\": 0, \"ackmessage\": null }, … ] The details of the alarm can be accessed from \"api / auth / alarms\" by using the \"alarm_id\" value in this scheme. Information of all channels defined in the system http://localhost:3000/api/auth/channels or http://localhost:3000/api/auth/channels/{id} Sample Result: [ { \"id\": 1, \"channelname\": \"Channel1\", \"mediatype_id\": 0, \"sockettype_id\": 0, \"paritytype_id\": 0, \"protocoltype_id\": 0, \"serverport\": 1080, \"listenport\": 1081, \"serverip\": \"127.0.0.1\", \"filterip\": \"0.0.0.0\", \"comport\": 11, \"baudrate\": 115200, \"databit\": 8, \"stopbit\": 1, \"responseto\": 6000, \"connectionto\": 6000, \"frameto\": 3000, \"groupid\": -1, \"station\": null, \"enabled\": 1, \"logicpropath\": null, \"description\": null, \"modified\": 0, \"state\": null }, … ] Instantaneous values of labels defined in the system http://localhost:3000/api/auth/rt_values or http://localhost:3000/api/auth/rt_values/{id} Sample Result: [ { \"id\": 1, \"tag_id\": 3, \"dataval\": 1, \"logtime\": 1537229310000, \"logdate\": \"2018-09-18T00:08:30.000Z\" }, … ] Updating the tag value in the system localhost:3000/api/auth/write_buffer","keywords":""},{"title":"Example Projects","type":0,"sectionRef":"#","url":"docs/ViewPLUS-SCADA-Example-Projects","content":"Alarm Projects Applying Filter to Active Alarms and Records By creating a filter, redirects to logs and active alarm page that can be made from within the pages. From the Scada reporter screen, requested alarm or tag records could be filtered by selecting. In the window that appears after the selection screen, the date duration is selected, and the filter is added by clicking on “Save This Filter”. The added filters appear in \"Saved Filters\" on the right side of the page. By right click on the saved filter and the link information is received. The received link information is added as a (Web) Link on the component. Figure 1: Alarm Logs { \"alarmfilter\": { \"alarmclass\": \"\", \"itemIdList\": [ 7, 6, 5, 4, 3, 2, 11, 10, 1, 8, 9 ] }, \"contentType\": 1, \"datarange\": { \"ftip\": 0, \"higherBound\": 0, \"limitVal\": 0, \"lowerBound\": 0 }, \"limitRowCount\": 500, \"queryname\": \"AlarmLog\", \"reptypedef\": { \"periodTip\": 0, \"repTip\": 0, \"targetDatetime\": \"0\", \"timeFactor\": 0 }, \"reservedVal\": -1, \"tagfilter\": { \"ftip\": 1740730552, \"itemIdList\": [ ], \"keywords\": \"\", \"parentChannel\": \"\", \"parentStation\": \"\" }, \"timeinterval\": { \"endTime\": \"1617262500000\", \"intervaltip\": 2, \"startTime\": \"1617172500000\", \"timePeriod\": \"0\", \"timeValue\": \"0\" }, \"viewMethod\": 0, \"vtype\": 0 } Figure 2: Applied Filter on Alarm Log In order to redirect the alarm logs with filters, at the end of the link, “||| 1: AlarmName ”parameter expression is added. e.g for Alarm_5; “ ||| 1: Alarm_5 ”. The expression with \"1\" indicates the \"alarm_id\" column on the \"Scada Reporter\" screen. Each column is expressed in numbers starting from 0 from left to right. The expression specified with \"alarm_5\" filters according to the alarm ids under the \"alarm_id\" column. Figure 3: Adding Filter on Component by Web Link { \"alarmfilter\": { \"alarmclass\": \"\", \"itemIdList\": [ 7, 6, 5, 4, 3, 2, 11, 10, 1, 8, 9 ] }, \"contentType\": 1, \"datarange\": { \"ftip\": 0, \"higherBound\": 0, \"limitVal\": 0, \"lowerBound\": 0 }, \"limitRowCount\": 500, \"queryname\": \"AlarmLog\", \"reptypedef\": { \"periodTip\": 0, \"repTip\": 0, \"targetDatetime\": \"0\", \"timeFactor\": 0 }, \"reservedVal\": -1, \"tagfilter\": { \"ftip\": 1740730552, \"itemIdList\": [ ], \"keywords\": \"\", \"parentChannel\": \"\", \"parentStation\": \"\" }, \"timeinterval\": { \"endTime\": \"1617262500000\", \"intervaltip\": 2, \"startTime\": \"1617172500000\", \"timePeriod\": \"0\", \"timeValue\": \"0\" }, \"viewMethod\": 0, \"vtype\": 0 } ||| 1:Alarm_5 Figure 4: Weblink Result for Filtered Alarm: Alarm_5 The expression indicated with “: Alarms” is used to redirect to active alarms page. Figure 5: Adding “:Alarms” expression to WebLink Line for Showing Activated Alarms Figure 6: Weblink Result for “:Alarms” Expression The expression \": Alarms ||| 7: Alarm_5\" filters according to the seventh column and redirects it to the active alarm page. Figure 7: Adding WebLink for Actived & Filtered Alarms Figure 8: Result of Weblink for Activated and Filtered Alarms Creating Constantly Increasing Counter Tag In some cases, it may be desirable that the trend of the tag value read from the field is continuously increasing (such as reading a counter). In such cases, when the data read from the field is contaminated because of device replacement, project update, and etc.; trends and counter total values may also get contaminated. To prevent this, a mechanism on SCADA can be configured in the following way. We need 3 seperate tags to solve the problem. As an example we will create a \"CounterTag\" tag. In parallel we will create a \"CounterTag_latest\" tag under \"Database Channel\" and a \"CounterTag_controller\" tag under Macro channel to fix field-based distortions so that this tag can read the latest value logged in the database. We will use the following query in the tag settings to get the most recent value we have logged into the \"CounterTag_latest\" tag: select dataval from logs.lct_table where tag_id=2 This query will read the last logged value of the \"CounterTag\" tag with tag ID \"2\" Finally, we will add the control macro to the \"CounterTag_controller\" tag. The macro will be: [v1=$4e0] [IF,v1,3] [$4=$6+0] [E] [v0=$4>$2] [IF,v0,3] [$2=$4+0] [E] [$4=$2+0] [E] This macro consists of 3 main sections: Lines numbered as \"1\"; reads the last logged value from the database when the server is running for the first time. Lines numbered as \"2\"; sets the value to be the value on the field device if it is less than the last log value for any reason. Lines numbered as \"3\"; is the part where macro continuously updates the control tag. In order to prevent erroneous logs in addition to the structure created above, the \"log only while increasing\" option should be enabled in the tag logging settings. User Manager Applications User Authorization in Dynamic Pages The \"Run Function\" parameter is defined in the relevant object for the dynamic page which is needed restricted access. The \"data1 = data2\" information changes the tag names starting with data 1 in the directed page to the tag named data2. The information used after the semicolon indicates the access numbers for the page to be redirected. Figure 1: Assigning Rights by Run Function Parameters In order to access the page content specified with \"requireReadAccess = {1,2,4}\", these numbers must be marked under the User Access Rights. If these numbers are not checked in the User Access Rights window, they cannot access the relevant page. Figure 2: Selecting Rights for User If the numbers in the \"requireReadAccess\" content are not selected in the user access right, the following warning screen is displayed when you want to be directed to the page. Figure 3: Example For Unauthorized Access Try ViewPLUS SCADA Protocol Applications Channel: Database Channel type used to make special queries from SCADA's own database. Create Channels And Tags A channel is created by selecting the protocol type database in tag channel editor option. Figure 1: Create Database Channel Screen A label is created under the database channel. Figure 2: Create Database Tag Screen Channel And Tag Configuration Response Timeout: The time in milliseconds that represents the frequency with which the database query is executed. Queries are written in the «Query» option of the tag A tag with tag ID 2 is attached to the database and transactions are performed over the database on this tag. Values from 1 to 100 are sent and the log is kept in the database. Figure 3: Real Tag ID Connection With this query, it brings the last sent value from the database. Figure 4: Database Tag Value and Real Tag Value Channel: Global Database It is the channel type used to create special queries by connecting to different databases and to transfer these query results to project tags. PostgreSQL Database Create Channels And Tags A channel is created by selecting the protocol type globaldatabase in tag channel editor option. Figure 1: Create Global Database Channel Screen A label is created under the globaldatabase channel. Figure 2: Create Global Database Tag Screen Channel And Tag Configuration Information about PostgreSQL database type is entered on the channel screen. Response Timeout: The time in milliseconds that represents the frequency with which the database query is executed. Figure 3: PostgreSQL Database Configuration Queries are written in the «Query» option of the tag. Figure 4: Query Option of The Tag A tag with tag ID 2 is attached to the database and transactions are performed over the database on this tag. Values from 1 to 100 are sent and the log is kept in the database. Figure 5: Real Tag ID Connection The device address information of the label number 2 was written in the query. Device address information is displayed on the server screen. select deviceaddress from public.tags where tag_id=2; :{${1}}: Figure 6: Query Answer-1 With this query, the last value sent from the database is set to the number 1 tag. select data_value from logs.tag_log where tag_id=2 order by logtime desc limit 1 :{${1}}: Figure 7: Query Answer-2 In the postgresql database query, the most recent values recorded in the database of the tags with id 2, 3, 4 and 5 were written in tags with ids 1, 6, 7, and 8, respectively. WITH t1 AS ( SELECT data_value from logs.tag_log where tag_id=2 AND data_value IS NOT NULL ORDER BY logtime DESC limit 1 ), t2 AS ( SELECT data_value from logs.tag_log where tag_id=3 AND data_value IS NOT NULL ORDER BY logtime DESC limit 1), t3 AS ( SELECT data_value from logs.tag_log where tag_id=4 AND data_value IS NOT NULL ORDER BY logtime DESC limit 1), t4 AS ( SELECT data_value from logs.tag_log where tag_id=5 AND data_value IS NOT NULL ORDER BY logtime DESC limit 1) SELECT t1.data_value data1, t2.data_value data2, t3.data_value data3, t4.data_value data4 FROM t1, t2 ,t3,t4; :{${1}, ${6} , ${7}, ${8}}: Figure 8: Query Answer-3 Oracle Database This channel is used to connect to the oracle database and pull the desired data. Channel And Tag Configuration Information about Oracle database type is entered on the channel screen. The database information of the project is entered on the configuration screen. Connection The first data recorded in the oracle database was captured by query. The data in the Oracle database is printed on the label with ID 2. select data_value UNTITLED127.tag_log order by logdate fetch first 1 rows only :{${2}}: Figure 9: Oracle Database Configuration The last data recorded in the oracle database was captured by query. select data_value UNTITLED127.tag_log order by logdate desc fetch first 1 rows only :{${2}}: Figure 10: Query Answer Channel: JavaScript JavaScript functions could be defined JavaScript channel. You can call various Math functions in your script. You can also use the values of system tags in the form of \"${123}\". You need to \"return\" a numeric value for the function result to be written on the \"JavaScript Tag\". *Channel Parameters Frame Timeout = The number of milliseconds that represents the frequency at which the JavaScript function is called. *Tag ParametersQuery = The JavaScript expression to be called. Create Channels And Tags A channel is created by selecting the protocol type javascript in tag channel editor option. Figure 1: Create JavaScript Channel Screen A label is created under the database channel. Figure 2: Create JavaScript Tag Screen Channel And Tag Configuration Queries are written in the «Query» option of the tag. Figure 3: Query Option of The Tag Sample javascript codes were written by choosing 2 different tags from the modbus channel. Figure 4: Modbus Real Tags Connection Example 1: The sum of the two labels is shown. var3 = ${2}+${3}; return var3; Figure 5: Query Answer-1 Example 2: In the first line : define a variable \"var1\" and assign \"the value of tag with id 2\" plus \"5\" In the second line : define a variable \"var2\" and assign \"the value of tag with id 3\" plus \"3\" In the third line : define a variable \"subtotal\" and assign \"the sum of var1 and var2\" to it In the last line : evaluate the square root of subtotal and return to that value. The return value will also be written as the value of the current JavaScript Tag. var1 = 5+${2}; var2 = 3+${3}; subtotal=(var1+var2); return Math.sqrt(subtotal); Figure 6: Query Answer-2 Important Note = You cannot set the values of other system tags in JavaScript tag. You need to use Macros to achieve this. Thus the following script will not work: ${3}= 3 + var1; Example 3: Tag values are assigned to variables. Return 1 if the variables are equal.Return 0 if variables are not equal. var1 = ${2}; var2 = ${3}; var3 = var1===var2 ? 1:0; return var3; Figure 7: Query Answer-3 Figure 8: Query Answer-4 Channel: Server Info By using this channel, you can get real-time information such as the num-ber of active alarms, system time, etc. Here is a sample \"JavaScript\" statement to get system information: var1 = :ALARMCOUNT(Panel1); var2 = :ALARMCOUNT(Panel2); totalalarms_defined= (var1 +var2 ); return totalalarms_defined; // It will return the total number of alarms defined for the \"Panel1\" and \"Panel2\" alarm classes. The following keywords are supported in JavaScript. :ALARMCOUNT() returns the number of alarms defined in the system. :ALARMCOUNT(ClassName) returns the alarm number for the \"ClassName\" alarm class. :ACTALARMCOUNT() returns the number of active alarms defined in the system. :ACTALARMCOUNT(ClassName) returns the number of active alarms for the \"ClassName\" alarm class. :ACKEDALARMCOUNT() returns the number of confirmed active alarms defined in the system. :ACKEDALARMCOUNT(ClassName) returns the number of confirmed active alarms for the \"ClassName\" alarm class. :SYSTEMTIME() returns the system time of the SCADA server in milliseconds since epoch. :CONNECTEDCHANNELS(ChannelName) returns the number of channels with an active connection and a name containing the keyword \"ChannelName\". :UNCONNECTEDCHANNELS(ChannelName) returns the number of channels that are not connected and have a name containing the keyword \"ChannelName\" The channel is created by selecting the protocol type \"SERVERINFO\" in the Tag Channel Editor. Figure 1: Adding Serverinfo Type Channel By writing queries within the labels created under the \"SERVERINFO\" channel, information related to channels and alarms can be obtained. According to the query defined below, the total number of active alarms in the project can be read on the tag. Figure 2: Adding ActiveAlarmCount Tag by Defining Code The total number of active alarms is displayed on the label under the de-fined “SERVERINFO” channel. Figure 3: Displaying Active Alarms on ViewPLUS Client Figure 4: Displaying Active Alarm Information by Tag Monitor on Server Engine Designing Fancy Tables For Map Views You can use some third party applications for designing tables to be used to display data in your Map Views. One of these services could be found on this link By using this service you can stylise you table and auto generate a CSS and HTML code. To be able to use the generated code on Map View, you need to put both these code into InfoWindowContent. But before pasting the code into InfoWindowContent; you need to put the CSS code into \" tags. The structure of the code should be as following: <style> ...CSS Code Here...</style> ... HTML Code Here ... For example if your generated CSS code is like : table.blueTable { border: 1px solid #1C6EA4; background-color: #EEEEEE; width: 100%; text-align: left; border-collapse: collapse; } table.blueTable td, table.blueTable th { border: 1px solid #AAAAAA; padding: 3px 2px; } table.blueTable tbody td { font-size: 13px; } table.blueTable tr:nth-child(even) { background: #D0E4F5; } table.blueTable thead { background: #1C6EA4; background: -moz-linear-gradient(top, #5592bb 0%, #327cad 66%, #1C6EA4 100%); background: -webkit-linear-gradient(top, #5592bb 0%, #327cad 66%, #1C6EA4 100%); background: linear-gradient(to bottom, #5592bb 0%, #327cad 66%, #1C6EA4 100%); border-bottom: 2px solid #444444; } table.blueTable thead th { font-size: 15px; font-weight: bold; color: #FFFFFF; border-left: 2px solid #D0E4F5; } table.blueTable thead th:first-child { border-left: none; } table.blueTable tfoot { font-size: 14px; font-weight: bold; color: #FFFFFF; background: #D0E4F5; background: -moz-linear-gradient(top, #dcebf7 0%, #d4e6f6 66%, #D0E4F5 100%); background: -webkit-linear-gradient(top, #dcebf7 0%, #d4e6f6 66%, #D0E4F5 100%); background: linear-gradient(to bottom, #dcebf7 0%, #d4e6f6 66%, #D0E4F5 100%); border-top: 2px solid #444444; } table.blueTable tfoot td { font-size: 14px; } table.blueTable tfoot .links { text-align: right; } table.blueTable tfoot .links a{ display: inline-block; background: #1C6EA4; color: #FFFFFF; padding: 2px 8px; border-radius: 5px; } And your table HTML is like: <table class=\"blueTable\"> <thead> <tr> <th>head1</th> <th>head2</th> <th>head3</th> </tr> </thead> <tbody> <tr> <td>cell1_1</td> <td>cell2_1</td> <td>cell3_1</td> </tr> <tr> <td>cell1_2</td> <td>cell2_2</td> <td>cell3_2</td> </tr> <tr> <td>cell1_3</td> <td>cell2_3</td> <td>cell3_3</td> </tr> </tbody> </table> Then your resulting code to be pasted into the InfoWindofContent should be like: <style> table.blueTable { border: 1px solid #1C6EA4; background-color: #EEEEEE; width: 100%; text-align: left; border-collapse: collapse; } table.blueTable td, table.blueTable th { border: 1px solid #AAAAAA; padding: 3px 2px; } table.blueTable tbody td { font-size: 13px; } table.blueTable tr:nth-child(even) { background: #D0E4F5; } table.blueTable thead { background: #1C6EA4; background: -moz-linear-gradient(top, #5592bb 0%, #327cad 66%, #1C6EA4 100%); background: -webkit-linear-gradient(top, #5592bb 0%, #327cad 66%, #1C6EA4 100%); background: linear-gradient(to bottom, #5592bb 0%, #327cad 66%, #1C6EA4 100%); border-bottom: 2px solid #444444; } table.blueTable thead th { font-size: 15px; font-weight: bold; color: #FFFFFF; border-left: 2px solid #D0E4F5; } table.blueTable thead th:first-child { border-left: none; } table.blueTable tfoot { font-size: 14px; font-weight: bold; color: #FFFFFF; background: #D0E4F5; background: -moz-linear-gradient(top, #dcebf7 0%, #d4e6f6 66%, #D0E4F5 100%); background: -webkit-linear-gradient(top, #dcebf7 0%, #d4e6f6 66%, #D0E4F5 100%); background: linear-gradient(to bottom, #dcebf7 0%, #d4e6f6 66%, #D0E4F5 100%); border-top: 2px solid #444444; } table.blueTable tfoot td { font-size: 14px; } table.blueTable tfoot .links { text-align: right; } table.blueTable tfoot .links a{ display: inline-block; background: #1C6EA4; color: #FFFFFF; padding: 2px 8px; border-radius: 5px; } </style> <table class=\"blueTable\"> <thead> <tr> <th>head1</th> <th>head2</th> <th>head3</th> </tr> </thead> <tbody> <tr> <td>cell1_1</td> <td>cell2_1</td> <td>cell3_1</td> </tr> <tr> <td>cell1_2</td> <td>cell2_2</td> <td>cell3_2</td> </tr> <tr> <td>cell1_3</td> <td>cell2_3</td> <td>cell3_3</td> </tr> </tbody> </table> On the Map View the table will look like:","keywords":""},{"title":"ViewPLUS SCADA Editor","type":0,"sectionRef":"#","url":"docs/ViewPLUS-SCADA-Editor","content":"Introduction What is SCADA? SCADA is an abbreviation created by reading the first letters of the words \"Supervisory Control and Data Acquisition.\" SCADA, a comprehensive and integrated database control and monitoring system, provides automatic control, monitoring and reporting of all electronic units of a facility or operation. SCADA systems are expected to perform the functions of monitoring, controlling, collecting data, recording and storing data. The SCADA systems can operate in continuous, intermittent, repetitive or discrete modes in industrial processes, manufacturing, production, power generation, wastewater treatment, oil and gas pipelines, electricity transmission and distribution, wind generators, civil defense siren systems and major communication systems , water treatment and promotion centers in the sectors. May include public and private facilities, including space stations. Access to heating and ventilation systems (HVAC) and control and monitoring of energy consumption may be required. SCADA's maximum benefit will continue to be from the greatest needs of industrial installations in terms of safety and convenience. Mikrodev ViewPLUS SCADA ViewPLUS is a SCADA software developped by Mikrodev. While ViewPLUS is being developed, stability, ease of use and visuality are kept in the foreground. With ViewPLUS, it is possible to provide visual monitoring, control and evaluation of any kind of automation unit and system. We can summarize some features that ViewPLUS has: Large Visual Library Allows users to easily prepare their own SCADA components as well as the large visual library. Redundant Working Mode Field data is read and processed by BACKUP server in case of the failure of the primary server. No data loss Communication status tests (field devices or spare SCADA) Server / Client Architecture Multi-station support Assigning authority level to work stations Licensed Tag Capacity Unlimited license (limited to system memory). Ability to define alarm tags up to the number of tags Ability to identify trends by the number of tags Operating System Support Windows 7/8/10 Windows Server 2008/2012/2016 Linux (Debian) MacOSX Security 128 different access authorization levels for tags and pages Ability to assign 128 different group memberships to users Integrated security with operating system TLS / SSL versions of layer 7 protocols on comms Use explicit SHA256 summaries instead of plain text passwords in the authorization mechanism Data Transfer SQL compatible data transfer possibility inside and outside Alarm Ability to define alarms for all defined tags Alarms can be defined 256 different criticality levels Ability to monitor active alarms and alarm history Alarm monitoring by date and importance Output from alarm list: Excel, printer, pdf Data Record Trend Monitoring Log recording capability for all defined tags Trend defined tags graphical display Export of trend defined tags data to excel, pdf or printer Communication Excellent connection with MikroDev PLC, REMOTE IO and Gateway products Compatible with a wide range of industry standard protocols: MODBUS TCP, MODBUS RTU, DNP3, SNMP, IEC- *, BACNET Database Support PgSQL ORACLE SQLite Architecture Mikrodev SCADA server provides real-time monitoring and control of field devices by connecting to this devices via intranet or internet. It saves collected data in the tag, event and alarm database. It also allows users connecting to the server over the internet to monitor and control the devices on the field using the prepared SCADA project. While different combinations can be created according to the network and hardware topology designed with ViewPLUS, the architecture shown below can be used basically. Figure 1: Add Password Creating New Project To create a new project: Select File>New File or Project > Mikrodev SCA Project Figure 1: Add Password Select project name and location. Figure 1: Add Password After entering the database username and password, you can verify the password by clicking the \"Test Connection\" button (if you will use PostgreSQL database and the PostgreSQL database is not installed on your system, you need to download and install the relevant version by clicking on \"Download PgSQL\" link.) Figure 1: Add Password The visual parameters such as screen color, default page size are set. Figure 1: Add Password If you are going to use the SVN version control tool on the next page, the settings will be adjusted accordingly. Figure 1: Add Password A new project is created by pressing the \"Finish\" button. The newly created project consists of 2 files. These are the files with the extension \"scapro\" where the project configuration parameters are stored. You do not need to make any changes to this file. The other file that is automatically created is the file named \"intro.sca\". You can design the main screen on this page. Figure 1: Add Password On the far left is navigation buttons that allow you to navigate through the editor's basic interfaces. Using these buttons, you can switch between the SCADA Editor view, Projects view and the Tag/channel Editor view. At the bottom of the navigation buttons is the project selector. If more than one project is open at the same time on the editor, this button can be used to switch between projects. Figure 1: Add Password SCADA Editor View Sidebar The sidebar is available in the SCADA Editor view. Use the sidebar to browse projects, files and insert components. Project files and components are controlled using panes on the left side of the editor. You can also filter and search the project files via the search box at the bottom of this panel. At the bottom left of the panel is a button that allows you to hide and show panels. Figure 1: Add Password You can select the content of the sidebar in the sidebar menu: Projects shows a list of projects open in the current session. Open Documents shows currently open files. File System shows all files in the currently selected directory. You can change the view of the sidebar in the following ways: To toggle the sidebar, click ￼ (Hide Sidebar/Show Sidebar) or press Alt+0 (Cmd+0 on macOS). To split the sidebar, click ￼ (Split). Select new content to view in the split view. To close a sidebar view, click ￼ (Close). Components ViewPLUS SCADA offers components in different types for visualization of the displayed data. These are; basic components, timers, graphics, database query and text components. The basic components are located in the \"SCADA Components\" pane in the left panel of the Editor. The other components can be created using the \"components toolbar\" on top of the editor window. Figure 1: Add Password Basic Components Using the \"Component Manager\", different objects that the user has defined can be added . To insert a component to the current page, press the left mouse button on one of the components in the panel, then press the desired position on the scene with the left mouse button again and the component is added. Figure 1: Add Password To change the size of the added component, you can move the triangle icon in the lower right corner of the component with the mouse. \"Object Properties Panel\" is used to change the advanced properties of the component. Text Component The text component is used to display text in different fonts, colors, and formats. Used for fixed text. You can change the formatting of the text in the \"Format\" tab in the toolbar. Figure 1: Add Password You can show dynamic content on text component. You can add dynamic content on some components. To achieve this, you should use the '$' operator and 'braces' ($ {....}): ${Tag_ID} As an example, you should write '${1234}' onto your component to display the value of a tag with the tag ID '1234' in your system. Tank Level is ${1234} this expression will be shown on the component like: Tank level is 78 While working with \"double precision\" numbers, you can use \"printf text format\"(see section Object Properties Panel) to change the precision of the displayed value: Tank Level is ${1234,%.3f} If the value of the tag with ID '1234' is a double precision number like \"567.123456\", this expression will be displayed on the component like: Tank level is 567.123 Timer Component You can control the \"Timer Blocks\" that you have added to the PLC project with Mikrodiagram software via the \"Timer\" component. By adding \"Timer Tags\" you have defined in the Tag/ Channel Editor to the timer component, users can change the timing settings through the client software. Figure 1: Add Password Chart Component Using the chart component, you can graphically view the data of the desired tags. Chart object displays graphs as lines or bar graphs. In the chart settings window, the chart's appearance, behavior, and parameters for the tags to be displayed can be set. While only the last values of the tags added are shown on the bar chart; historical values of tags can be displayed on the line chart. Figure 1: Add Password Chart View Type: Sets how the chart will work. Chart Component : Graphical representation of the added component. Link to Chart : The added component only acts as a button. A separate window chart display is shown when pressed. Chart Type: Selective type for chart type Line Grid : The trend data of the defined labels are drawn with different colors on the same chart . With new data read from the field, the chart is updated once in a second. Bar Chart: Defined tags are displayed in bar chart format. The chart is updated once in seconds. Database Query Component This component allows the client to retrieve some specific queries from the database. In the Database query settings window, parameters related to the tag to be queried, query type, range, update frequency, and component visibility can be set. Figure 1: Add Password Table Component You can display the data in tabular form on the table component. You can add and remove new columns / rows to table via the table menu . Figure 1: Add Password Styling Table You can set font and color for cell text using the format toolbar on the top of the editor: Figure 1: Add Password You can also change the appearance of the table itself using stylesheets. Here is a sample stylesheet for changing row colors: alternate-background-color:#AACA98; background-color: #D3E3D0; Formulas on Table You can use excell like formulation on table cells. Supported functions are: SINCOSTANCOTABSLOGLOG10SQRTPOWERROWCOLUMNPISUMPRODUCTMINMAXAVERAGEMEDIANMODE Image Component You can add images into your view by using image component. You can resize, rotate and flip the added image. Figure 1: Add Password Web Frame Component You can add web content into your view by using Web Frame component. You can resize, rotate and flip the added frame. This component is useful, for example when you need to add a web camera view into your SCADA page. Figure 1: Add Password Web frame view is not supported on mobile versions of OperatorClient. Page Properties Panel Figure 1: Add Password The basic settings for the page are set via this panel Page Name The name you want to appear for the page in the left panel on the client screen for pages set as tabs. PageID System-assigned unique ID for each page. PageOrder Sets the order in which the page will appear in the left panel on the client screen for pages set as tabs. PageType There are three different page types. \"Tab\" type pages appear as full screen on the client. At the same time, a button is created in the left-hand navigation panel that provides access to this page. Unlike the \"Tab\" for the \"Linked Page\" type, there is no button on the navigation panel. \"Dialog\" type pages are pages that are configured as popups to be opened in an action repository. GeoView Enables Google Maps api and shows the map. You should provide a map API key to be able to use this feature. First login to Google, go to Google API Key Console and select \"Google Maps JavaScript API\". After you get the key insert this into \"Projects > Project File Paths > Map API Key\" GeoCenter This option determines the initial position and zoom level of map when opened. It should be in that format :\" Longitude,Latitude,ZoomLevel\" Scale at startup Set how to scale scaling when the page is first opened on the client screen. CustomSize This option is checked if a different size will be used in the project settings instead of the default page size. Page Width Width for custom page size Page Height Height for custom page size BackgroundImage An image to be displayed on the client screen for the page in the left panel is displayed for the pages set as tabs. Add Scroll Text Adds a slip at the bottom of the page that allows you to show informative messages. AccessRights Different access rights can be defined to restrict access to the page. For users who do not have these rights, the page is not displayed. Layers Panel You can create or delete a new layer on the Layers panel. You can create a hierarchical layout on the page by creating components on the layers you create. You can make complex designs easier by hiding / showing layers. Another benefit provided by the layers is that the visibility of the layers at different zoom levels can be changed. Hide / Show Layers You can hide / show the layers you have added using the \"Hide / Show Layer\" option on the right-click menu of the mouse. Figure 1: Add Password Changing the Order of the Components in the Layer You can change the order of the layers that you have added using the \"Bring Layer Components Front\" or \"Send Layer Components Back\" options on the right mouse button menu. Hide / Show Layers According to Scale Level You can hide and show the layers defined on the page according to the scale level of the screen. On this scale, you can display more detailed information components when the scale level increases, but you can reduce the complexity of the design and make it easier to use by showing fewer components when the scale level increases. To do this, first select \"Layer Properties\" in the \"Layers Panel\" In the dialog that appears, there are two fields showing scale level parameters. Figure 1: Add Password The layer will be visible between the two scale values to be entered here. If you define one of the values as \"-1\", the layer will be continuously visible in this direction regardless of the scale. For example, if values of \"300\" and \"-1\" are considered, the result will be like that: \"Make the layer visible if the scale is greater than 3\" The scale is smaller than '3': Figure 1: Add Password The scale is higher than '3': Figure 1: Add Password As you can see in the picture, when the scale value goes up to '3', the layer with the buttons becomes visible. GIS Objects Panel Figure 1: Add Password You can edit your maps using this panel. Text The marker's name that will show up on map. Location The marker's location on map. It should be in \"Longitude,Latitude\" format Icon Custom marker icon to be used on map Link to Page Select a page link to go when the marker is clicked. You can enable or disable page linking. When you disable page linking \"Go To Page\" button will disappear on infowindow. You can also enable/disable of showing alarms of the target page on the marker from this panel. Figure 1: Add Password Info Window Here you can insert any html content to be shown on Info Window for each marker. You can use ${tag_id} and #{operation} syntax inside html elements. Add Marker Button Click on the map after selecting this button to insert a new marker Remove Markers Button Click on the map after selecting this button to remove markers Import Markers from GeoJson Button You can import markers from a geoJson file using this button. Go to https://geojson.io for more information. Object Properties Panel It is a panel that allows you to adjust the SCADA objects added to the page. Figure 1: Add Password Object Name A name that makes it easy to distinguish the object. ObjectType Represents the component type of the object. Geometry The position of the object on the screen is the parameters related to the scale and rotation. The top leftmost point of the page is positioned by accepting the point (0,0). Position value increases down and to the right. Constants Contains some settings related to the appearance of the object. Font X Offset : Used to add a horizontal offset to the position of the text to be printed on the object, relative to the upper left corner of the object. Font Offset : Used to add a vertical offset to the position of the text to be printed on the object, relative to the upper left corner of the object. Text Content : It is the field in which the display format of the \"Text Label\" defined in \"Feature Tags\" is configured. The \"formatted\" text entered here is printed on the component. The text to be entered must be in \"printf text format\". The following examples can be used for formatting: Integer :% d => \"1977\" Add leading spaces :% 10d => \"1977\" Add a leading zero :% 010d => \"0000001977\" Float numbers :% 4.2f => \"3.14\" You can also display date/time values read from a 'seconds' source in desired format. To achieve this you can use \"%dt(...)\" notation. \"%dt(...)\" notation assumes that the tag value is in seconds: Date is : %dt(dd.MM.yyyy / hh:mm) will be displayed as: Date is : 13.05.2017 / 12:24 Font Style Sheet : By setting the style sheet for the \"Font Content\" to be displayed. Text Width : The maximum width of the text to be displayed on the component. Events: Contains user interaction settings. Event Type : The parameter that determines when the event will be fired. MousePressed: Left mouse button press event MouseReleased: Left mouse button release event Keystroke: Keyboard push event Event Action : When \"Event Type\" is triggered, the function to be operated is selected. SET : Sets the value of \"Target Event Tag\" to \"1\". CLEAR: Makes the value of \"Target Event Tag\" \"0\". CHANGE : Makes \"0\" if \"Target Event Tag\" is \"1\" and \"1\" if it is \"0\". LOADVALUE : If this function is selected, users will have a dialogue page in the client software where they can right-click on this component mouse to change the value of \"Target Event Tag\". NEXTPAGE PREVIOUSPAGE GOPAGE : The page that was selected in \"Go to Page\" opens on the screen. GOLINK : The link defined in \"WebLink\" is executed. Target Event Tag : Defines the tag that is the target of the \"Event Action\" Go to page : Page selection for \"Go to page\" action (Web)link: If this field is defined as a web link, a menu entry will be created to access the related page from the right-click menu of the component. You can also create direct link to Alarms page by writing \":Alarms\" expression or to Reports page by writing \":Reports\" to this field or to previous page by writing \":Back\". Other than that you can directly create a link to a report query in this field. Tags Panel The values read from the labels selected from this panel are constantly updated according to the values read from the field. The labels defined here can also be used in macros. For each label, there are predefined \"i, o, s, w\" values. (Such as i1, i2, o1, o2 ..). You can see the default variable names of the tags by hovering over them with the mouse. Figure 1: Add Password Feature Tags Image Index Tag: Shows the image index of the component to display instantly. Which images is in which index can be changed using the \"Component Manager\" or can be viewed under \"Other Tab\". Text Tag: The value of the selected tag here is displayed on the component according to the form specified in \"Text Content\". X Position: The horizontal position coordinate of the component is taken from this parameter. The top left corner of the page is the (0,0) coordinate. As you go to the right, the X value increases. Y Position: The vertical position coordinate of the component's screen is taken from this parameter. The top left corner of the page is the (0,0) coordinate. The Y value increases as it goes down. Width: The width value of the component is read from this label. Height: The height value of the component is read from this label. Rotation Angle: Rotation angle of the component with X axis. Gets value in degrees. Text color: The color of the text to be displayed on the component is taken from this parameter. Mask color: The color of the mask that will be applied on the component is taken from this parameter. Hex value of \"112233\" of the RGB color value defined as # 112233 is taken as the integer counter value. You can find some sample hex color values here. And you can use this tool to convert the color valueto integer. Mask transparency: A value from 0-255 is taken from this label for the transparency value of the masquerade to be displayed. Custom Labels: The 7 labels you select here will be available to the macros. Other Settings Panel Figure 1: Add Password Limits: The maximum and minimum values by which users can change the \"Target Event Tag\" value through the client software are set using these parameters. ToolTip: Adjust the content that will be shown when users bring the mouse over the component in the client software. You can show dynamic content on tool-tips . Please refer to Basic Scripting. Macro: The script for the component is written in this box . For more information about macros, see the corresponding section. Images: The images and index numbers defined for the selected component are displayed in this area. Index number expresses which image to show according to the data value read from the tag value of \"Image Index Tag\" at \"Tags Panel\". You can change the index display order of components from this panel Figure 1: Add Password You can move up or down image indexes from the context menu opened by right clicking on the images. Projects View SCADA Pages List of all pages created on the project. This view gives detailed information about the created pages for the project. Figure 1: Add Password Project File Paths Here are some important folder paths related to the SCADA project Figure 1: Add Password View Configuration Default settings for SCADA pages are configured using this menu. Figure 1: Add Password Client Options Various settings related to Client view can be done on this menu. Figure 1: Add Password Tag and Channel Editor View Channels and tags are special definitions that enable the SCADA software to access the data on the field devices. Channels include protocol definitions to provide communication with the device on the field and specific settings for this protocol. Tags consist of address definitions for the registers on the connected device. Alarm management is also done under this view. Channels Channels containing connection definitions can be created with a device in the field, as well as special channels defined by virtual connections such as macros or database queries. To create a new channel, open the \"Tag Channel Editor\" tab, press the right mouse button on any channel, and select \"New Channel\" from the popup menu. In the dialog that is opened, necessary adjustments can be made about the new channel. Tags \"Tag\" refers to point data that is read from the scene or created virtually by the system. Tags are defined under the channels and may have different properties depending on the type of channel they are in. Creating Tags To create a tag, open \"Tag/Channel Editor Panel\". Tag/Channel pane is on the top left of the screen. On the pane, right click on the channel in which you want to create a tag. On the context menu select \"New Tag\" action. Figure 1: Add Password On the \"New Tag\" dialog write a name and description for the tag. The \"tag name\" must be unique; if you select an existing tag name, the system will prompt you a warning. Figure 1: Add Password All tags created in the system have common properties that can be changed. These features are: General Tag Parameters In Use Tag is ignored by the SCADA server if the tag is not marked as \"in use\". The tag only becomes a definition in the system. Tag Name Each tag must have a unique name. Clear words and format should be used to describe the tag briefly Description Give a brief description about the tag Unit Name This is an optional property for the tag. It may be useful if you want to group tags by units on the field Tag Type This is an option for selecting \"Schedule Tag\" which is a special register reserved for calendar operations on Mikrodev devices. For more details see Mikrodiagram documentation Access Rights Reading: These are the rights that users have to have in order to see the tag values. Users who do not have the rights set here will not be able to read this tag value. Writing: It is the right that users have to have in order to change tag values. Users who do not have the rights set here can not change this tag value. Variable Variable Type: The mathematical type of the variable. Logging Log to Database If this option is not enabled, the tag value will not be logged on the system and historical values will not be visible. Also, historical values can not be viewed on the graph. Log on change Logging is done in case of tag value change. The type of change can be of the type \"Percentage\" or \"Level\" change. Percentage Change If \"Percentage Change\" is selected as the type of change; Logging is done if the tag value changes by the specified percentage value of the latest logged value. If value is set to \"0\", all kinds of changes are logged. Level Change If \"Level Change\" is selected as the type of change; if the tag value has changed by the specified value, logging is done. If value is set to \"0\", all kinds of changes are logged. Log Periodically If this option is enabled, the tag is continuously logged in the specified time period. Note: Logging type and tags to be logged must be carefully selected to avoid unnecessary increase in the size of the data to be stored. For example; The tags should never be logged if you do not need historical values. If a level or percentage change is selected for analog variables, a percentage or level appropriate to the data exchange pattern should be selected. For digital values, \"log on change\" should be used instead of periodic logging. Data Logging Filter By using the data logging filter, you can prevent the measurement values ??collected from the field from being logged according to the filter you selected. So, you will be able to pick up possible false data Only log when decreasing by maximum This filter only allows logging of descending data below the entered maximum value. For example; If the maximum value is entered as 1000: 188, 225 ,(logged) 1500,(not logged) 350 ,(logged) 400 (logged) In this example, the value '1500' is 1275 more than the previous value, so it exceeds the maximum value of 1000. Thus, is not logged. Only log when increasing by maximum This filter only allows logging of incremental data below the maximum value entered. Only log if value is in range This filter allows logging only if the value read from the field is in the specified range. Only log if value is out of range This filter allows logging only if the value read from the field is out of the specified range. Alarms Alarms are an integral part of monitoring systems. ViewPLUS can create alarms for users according to field data and user's access rights. Creating Alarms To create an alarm, open \"Tag/Channel Editor Panel\". Alarms pane is on the bottom left of the screen. Right click on alarm pane. On the context menu select \"New Alarm\" action. Figure 1: Add Password On the \"New Alarm\" dialog write a name and description for the alarm. If you write an existing \"class name\" into AlarmClass, the alarm will be added to that class; if you write a new \"class name\" a new AlarmClass will created and the alrm will be added to that class. Figure 1: Add Password General Alarm Parameters Figure 1: Add Password Alarm Name Give an apparent unique name for the alarm Class Name The name of the class which the alarm belongs to. This is useful when grouping the alarms Description Write a human readable explanation about the alarm Value Tag The selected tag is the source of the alarm. Condition check will be made on this tag's value. Condition The conditions are evaluated according to the LIMIT and RANGE values on the right side of conditions pane VALUE is equal to LIMIT The alarm is activated if the value of the tag is equal to \"LIMIT\" value. VALUE is smaller than LIMIT The alarm is activated if the value of the tag is smaller than \"LIMIT\" value. VALUE is greater than LIMIT The alarm is activated if the value of the tag is greater than \"LIMIT\" value. VALUE is in \"RANGE\" The alarm is activated if the value of the tag is in \"RANGE\". VALUE is out of \"RANGE\" The alarm is activated if the value of the tag is out of \"RANGE\". Subscriptions Alarms should be assigned to users. A user can monitor an alarm only if the user is subscribed on that alarm. To add a user subscription on the alarm click on the Subscribed User Selection button. Figure 1: Add Password On the opened dialog, select the users which you want to be subscribed on the alarm. Other Require Acknowledge When this option is checked, if a user does not acknowledge the alarm, it will not disappear from alarms list if also alarm condition has gone away Log into Database When this option is checked, the alarm states will be logged into database Enabled This option activates/deactivates the alarm Associating PLC and SCADA Projects As you develop your project, it becomes more important to associate channels in SCADA with PLC projects to avoid confusion.To do this, you can specify the PLC project path in the upper right corner of the channel menu. Figure 1: Add Password Import and Export Operations There are different options for importing/exporting data from/to the project. Importing/Exporting Projects This wizard allows the user to import/export tags, channels, alarms, users and pages using a special file format(.scaexp). Exporting Project After opening the project on ViewPLUS, on the File menu select \"Export Project\" option: Figure 1: Add Password On the wizard window, select an output folder path for the \".scaexp\" file to be generated. After that, when you push on the \"Start Export\" button, the wizard will create the \".scaexp\" file Figure 1: Add Password Importing Project On the File menu select \"Import Project\" option: Figure 1: Add Password On the wizard window, select the exported \".scaexp\" file and a destination folder for the project files to be extracted: Figure 1: Add Password After that, when you push on the \"Import Project\" option, the wizard will ask for database connection settings. The project database will be extracted into the configured database. Figure 1: Add Password When the operation is complete succesfully, the project is ready to be used. Importing/Exporting Tags/Channels/Alarms Users can import/export tag/channel/alarm definitions from/to other projects. Exporting Tags/Channels/Alarms After opening the project on ViewPLUS, on the Tools menu select \"Export Tag/Channel Definitions\" option: Figure 1: Add Password When you confirm the export file path selection dialog, a file with \".tcf\" extension will be created. You can use this file for importing into other projects. Importing Tags/Channels/Alarms After opening a project on ViewPLUS, on the Tools menu select \"Import Tag/Channel Definitions\" option: Figure 1: Add Password Important Note: This operation will overwrite existing tags. Thus, this operation may damage your project. Be sure that the exported tag id interval and local project's tag id interval do not intersect! Importing/Exporting Users Users created for a project could be exported to another project. Export/Import users menu could be used for that Exporting Users After opening the project on ViewPLUS, on the Tools menu select \"Export Users\" option: Figure 1: Add Password When you confirm the export file path selection dialog, a file with \".usr\" extension will be created. You can use this file for importing users into other projects. Importing Users After opening a project on ViewPLUS, on the Tools menu select \"Import Users\" option: Figure 1: Add Password Important Note: This operation will overwrite existing users. Thus, this operation may damage your project. Be sure that the exported user id interval and local project's user id interval do not intersect! Macro Guide ViewPLUS supports macros in different types. Some of these macros work on the server side, while others work on the client side. The \"macro tags\" we define in the Tag/Channel Editor work on the server side. And it acts as a virtual tag. These macros work continuously on the server for the specified period. On the editor, it is possible to write separate macros for each object. These macros affect the display and behavior of that object and are only executed when the user is watching the object. Server Side Macro Tags Macros can take two processing elements at a time and are written line by line. Example: [ v0 = $1234 * 2] The operands that can be inserted into the macro are: 200 seperate variables(vo, v1, …., v199) Tag values (in \"$1234\" format) Constant values (Constant decimal values such as \"234,12\" can be added) [ v0 = $1234 * 2] v0 : The element to the left of “ = ” is the final result of the operation : Operators like “+ , - , * , / , % , & , |, ^ , > , < , e ,b , k , n , ?“ could be used. Here: e: Equality check. The result is \"1\" if the operands are equal to each other, and \"0\" if not.. n: Not equal check. If the operands are not equal to each other, the result is \"1\", otherwise it returns \"0\". b: Greater than check. If the first operand is greater than the second, the result is \"1\", otherwise it returns \"0\". k: less than check. The result is \"1\" if the first operand is smaller, and \"0\" if it is not. ?: This is a special operand. [ v0 = 1234 ? 0] : Returns the \"RX Count\" value of the tag with id 1234 (Read counter value) [ v0 = 1234 ? 1] : Returns the \"Read Time\" value of the tag with id 1234 (the time at which the latest data was read from the field) [ v0 = 1234 ? 2] : Checks whether there is communication with the device on which the tag with id 1234 is located [ v0 = 1234 ? 3] : Checks whether there is a valid value in the tag with id 1234.(In general, when a SCADA server is started for the first time, it may be late to write a valid value in the tag, or a valid value of the tag may never be written) [ v0 = v0? 20] : Writes server datetime into \"v0\" variable as the number of seconds that have passed since 1970-01-01T00:00:00 [ v1 = v0? 21] : Writes server year into \"v1\" as \"v0\" is the number of seconds that have passed since 1970-01-01T00:00:00 [ v2 = v0? 22] : Writes server month into \"v2\" as \"v0\" is the number of seconds that have passed since 1970-01-01T00:00:00 [ v3 = v0? 23] : Writes server day into \"v3\" as \"v0\" is the number of seconds that have passed since 1970-01-01T00:00:00 [ v4 = v0? 24] : Writes server hour into \"v4\" as \"v0\" is the number of seconds that have passed since 1970-01-01T00:00:00 [ v5 = v0? 25] : Writes server minute into \"v5\" as \"v0\" is the number of seconds that have passed since 1970-01-01T00:00:00 [ v6 = v0? 26] : Writes server seconds into \"v6\" as \"v0\" is the number of seconds that have passed since 1970-01-01T00:00:00 Attention: Here the tag id (1234 in the example) must be entered into the macro as a fixed value without \"$\" at the beginning Condition check: In the following example, it is checked whether the variable \"v0\" is equal to 1. If \"v0\" is equal to 1, the macro executes the command on the bottom line (makes v1 value 555). If it is not equal to 1, the line is moved down by the second parameter (\"2\") of the \"IF\" line. In this example, if \"v0\" is not equal to 1, the macro will go down 2 lines, that is, it will go to the return value ([E]) line and it will be finished. [ IF , v0 , 2] [ v1 = 555] [ E ] Another condition control operand is “NI” (NOT IF) . This checks the equality to 0 as the opposite of \"IF\".. In the following example, it is checked whether the variable \"v0\" is equal to 0. If \"v0\" is equal to 0, the macro executes the command on the bottom line (makes v1 value 555). If it is not equal to 0, the line is down by the second parameter (\"2\") on the \"NI\" line. In this example, if \"v0\" is not equal to 0, the macro will go down 2 lines, that is, it will go to the return value ([E]) line and it will finish [ NI , v0 , 2] [ v1 = 555] [ E ] In order for macros to work correctly , a return ([E] </ nowiki> return) must be added. Client Macros Client Macros: This macro is written in the same format as the \"server macros\". However, only tags defined on that object can be used within those macros The tags defined on the tag tab of objects are used as follows: For each tag \"i, o, s, w\" values exist. i (in) : The raw value of the tag read from the field o (out):The value to display on the screen after the tag has been passed through the macro operations s (set):The value set by the user for the tag w(write): The value to be written to the field device after the value that the user wants to set is passed through the macro operations i ---Macro---->o , s---Macro---->w If there is no macro operation 'i' is equal to 'o', 's' is equal to 'w'. Installing the License File To get a valid license please send your \"hardware id\" to sales@mikrodev.com. To learn your hardware id; select Help > User License Generator from the application menu. Figure 1: Add Password After you receive a valid \"license.dat\" file, copy this file into bin folder of ViewPLUS application Figure 1: Add Password The licence will automatically be loaded when you restart the Editor Project File Password The password can be used to make the project more reliable. In order to set a password to the project, activate project protection is marked by entering the project configuration from the projects tab. Password should contain upper, lower letters, numbers ans symbols. The password should have more than 8 characters. Figure 1: Add Password To remove the project file password, the activate project protection is removed and the current password is entered. Figure 2: Delete Password ArcGIS Map ArcGIS technology is a scalable integrated Geographic Information System software that developed by ESRI. Software components are built on the common library of ArcObjects. That provides a system. In order to use the ArcGIS map, ArcGIS must be selected from the Projects menu under GIS settings. Figure 1: ArcGIS Configuration ArcGIS map is activated when the \"GeoView\" parameter is selected from the Page Properties menu on the right side of the page. The \"GeoCenter\" parameter shows the location of the marker on the map. It should be in the form of longitude and latitude. Markers can be added on the map with the using marker icon under the \"GIS Objects\" menu or the markers added on the map can be deleted by using delete marker icon. Figure 2: ArcGIS MAP Visibility Configuration Marker icons can be changed by creating new categories and markers can be grouped under a category. To create a new category, click the Edit button in the Category line from the GIS Object menu. In the window that opens, click \"Add New Category\" and define \"Category Name\" and \"Category Image\". Figure 3: Adding New GIS Object Category Marker is selected and then Category part of GIS Object, we select the point as new category. Hence icon and category selection are completed. Figure 4: Demonstration of New Category Point That is Created as GIS Object. ViewPLUS SCADA Channels Channel: Modbus TCP You must create a new Modbus Channel to communicate with field devices over TCP using ModBus protocol. Select \"Modbus TCP\" as the \"Protocol Type\" in the dialog for creating a new channel Channel Parameters Server Adress The IP address of the device you want to connect to Server Port Modbus connection port information of the device Response Timeout It is time value, the Modbus slave waiting for the device to respond after each modbus request, in milliseconds. If no response is received from the slave device during this time, a new request is sent. Connection Timeout It is the time value in milliseconds to wait until a new connection attempt is made after the request to connect to the device is sent. Typically in GPRS or 3G networks this time may be slightly longer than TCP. Frame Timeout It is the time value in miliseconds to be waited until the next request is sent, after receiving a response from a Modbus request. Tag Parameters Function Code The IP address of the device you want to connect to Device Address Modbus protocol device address Variable Address Modbus variable address Variable Size The size of the variable in the identified address Variable Type The type of the variable in the identified address Channel: IEC 104 You must create a new IEC 104 Channel to communicate with the field devices over TCP using the IEC 104 protocol. Channel Parameters W ACK(acknowledge message) sending frequency(sends ACK after W packets) K The maximum allowed number of unacknowledged packets T1 ACK timeout duration for ASDU packet T2 If no new data will be sent after this time, an ACK is sent T3 Timeout period for test frame General Interrogation GI message sending frequency Clock Synchronisation CS message sending frequency Timezone GMT Timezone information of server computer Tag Parameters Object Type ... InfoObjectAddress ... Channel: DNP3 You must create a new DNP3 Channel to communicate with the field devices over TCP using the DNP3 protocol. Channel Parameters W ACK(acknowledge message) sending frequency(sends ACK after W packets) K Channel: SNMP This channel is used to connect to SNMP devices. The NetSnmp library must be installed on your system in order for this channel type to work. You can download NetSnmp library from here Parameters Server Address The IP address of the device you want to connect to Read Comunity The \"Read Community\" information that will be used to access device information. Tag Parameters Macro Channel This channel is used to create virtual tags and modify them with scripts. Channel Parameters Frame Timeout The time in milliseconds that expresses the frequency of operation of the macro. Tag Parameters Channel: Database This is the type of channel used to make queries from SCADA's own database Channel Parameters Response Timeout The number of milliseconds that represents the frequency at which the database query is executed. Channel: Global Database It is the type of channel used to connect to different databases to create custom queries and to pass these query results to project tags. Channel Parameters Response Timeout The number of milliseconds that represents the frequency at which the database query is executed. Tag Parameters Query The query expression to be executed in the database. This tag allows retrieving the first line returned from the query. The return values ??for this first row are written into tags respectively into the tags defined in the form of :{${32}, ${33} , ${34}, ${35},....}: An example \"Query\" expression: WITH t1 AS ( SELECT data_value from logs.tag_log where tag_id=19 AND data_value IS NOT NULL ORDER BY logtime DESC limit 1 ), t2 AS ( SELECT data_value from logs.tag_log where tag_id=20 AND data_value IS NOT NULL ORDER BY logtime DESC limit 1), t3 AS ( SELECT data_value from logs.tag_log where tag_id=29 AND data_value IS NOT NULL ORDER BY logtime DESC limit 1), t4 AS ( SELECT data_value from logs.tag_log where tag_id=26 AND data_value IS NOT NULL ORDER BY logtime DESC limit 1) SELECT t1.data_value data1, t2.data_value data2, t3.data_value data3, t4.data_value data4 FROM t1, t2 ,t3,t4; :{${32}, ${33} , ${34}, ${35}}: In the above PostgreSQL database query, the latest recorded database values of the tags 19, 20, 29, and 26 are written into the tags with 32, 33, 34, 35 IDs, respectively. Channel: JavaScript Channel JavaScript functions could be defined JavaScript channel. You can call various Math functions in your scriptReference. You can also use the values of system tags in the form of \"${123}\". You need to \"return\" a numeric value for the function result to be written on the \"JavaScript Tag\" Channel Parameters Response Timeout The number of milliseconds that represents the frequency at which the JavaScript function is called. Tag Parameters Query The JavaScript expression to be called. : An example \"JavaScript\" expression: var1 = 5 + ${19}; //In the first line : define a variable \"var1\" and assign \"the value of tag with id 19\" plus \"5\" var2 = 3 + ${20}; //In the second line : define a variable \"var2\" and assign \"the value of tag with id 20\" plus \"3\" subtotal= (var1 +var2 ); //In the third line : define a variable \"subtotal\" and assign \"the sum of var1 and var2\" to it return Math.sqrt(subtotal); //In the last line : evaluate the square root of subtotal and return to that value. The return value will also be written as the value of the current JavaScript Tag. IMPORTANT NOTE You cannot set the values of other system tags in JavaScript tag. You need to use Macros to achieve this. Thus the following script will not work: ${20}= 3 + var1 ; Channel: SOAP API Channel It is the type of channel used to connect to a SOAP Web Service and to pass the query results into project tags. Channel Parameters Response Timeout The number of milliseconds that represents the frequency at which the query is executed. Tag Parameters Query The API expression to be send to SOAP service. The query result is parsed and the relevant return values are written into tags: The query expression is composed of 3 parts. The first part identifies the WSDL path of the SOAP server. The second part is the actual SOAP query envelope. And the last part is the tag binding expression for the results to be written into correct tag values. An example \"Query\" expression: WSDL_PATH = https://minosxcloud.umpi.it/ws/wsminos.php?wsdl; <SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ns1=\"http://localhost/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:SOAP-ENC=\"http://schemas.xmlsoap.org/soap/encoding/\" SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"> <SOAP-ENV:Body> <ns1:getStatus> <user xsi:type=\"xsd:string\">ws-istanbul</user> <password xsi:type=\"xsd:string\">passwordvalue</password> <db_name xsi:type=\"xsd:string\">databasename</db_name> <id_andros xsi:type=\"xsd:string\">s345dfsad2345asd45fsdfsgds4542345a</id_andros> </ns1:getStatus> </SOAP-ENV:Body> </SOAP-ENV:Envelope> :{${32}, <stato><statopl num=\"1\"><fase1 stato> ; ${33}, <stato><statoingresso num=17 stato> }: And the response from the server is as following: <SOAP-ENV:Envelope SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:SOAP-ENC=\"http://schemas.xmlsoap.org/soap/encoding/\"> <SOAP-ENV:Body> <ns1:getStatusResponse xmlns:ns1=\"http://localhost/\"> <res xsi:type=\"xsd:string\"> <armadio identificatore=\"b3e1f32cb0db36ef0fbfaf047074e4d5\"> <stato> <statoingresso num=\"16\" stato=\"1\">ON Input Andros CMS-EXP 1</statoingresso> <statoingresso num=\"17\" stato=\"1\">ON Input Andros CMS-EXP 2</statoingresso> <statopl num=\"1\"> <fase1 stato=\"0\">Line 1 Phase 1 OK</fase1> <fase2 stato=\"0\">Line 1 Phase 2 OK</fase2> <fase3 stato=\"0\">Line 1 Phase 3 OK</fase3> </statopl> </stato> </armadio> </res> </ns1:getStatusResponse> </SOAP-ENV:Body> </SOAP-ENV:Envelope> The method to write the result of the response into the tags is as follows: Figure 1: Create Database Channel Screen The parser is defined in the form of :{${tag1 ID}, <child1> <child2>; ${tag2 ID} , <child1> <child2> <child3 filterAttribute returnAttribute> }: On the last 3 lines of the query, the first parameter is the target tag. The latter part defines how to parse the response. The last element of this part could be used to create an attribute filter for the XML document. The remaining parts are the node hierarchy filter. If no returnAttribute or filterAttribute is defined, the text value of the node is cast into number and written into tag. If returnAttribute is defined but no filterAttribute ; the first element of multiple elements is selected and \"returnAttribute\" attribute's value is returned. If both returnAttribute and filterAttribute are defined; multiple elements are filtered according to filterAttribute and \"returnAttribute\" of that node is returned. Channel: MQTT Client Mikrodev Client receives messages from publisher units and transmits messages to subscribed units. When sending messages, it uses topics to filter client units that will receive the message. The working structure of Mikrodev Client is described in the picture below. Figure 1: General Structure of Mikrodev Client Mikrodev Client supports the following data types. Number\tVariable Type1\tBOOLEAN 2\tDOUBLE Structure of Subscriber Unit Subscribers are units that receive messages according to topics which they inform Mikrodev Client. Figure 2: Structure of Subscriber Unit Topical names can contain one or more words and numbers. Sample topi-cal names can be listed as below. Number\tTopical Names1\tTemperature 2\tTemperature/Flat1 3\tGebze/Flat1/Room1 4\t587251468 5\t587251468/Temperature Payload structure is sent to Mikrodev Client by publisher units are as below. Example 1: { \"421453435\": { \"Humidity\": {\"V\": 247, \"T\": 20201009105447}, \"Pressure\": {\"V\": 88} } } The phrase \"421453435\" indicates an ID of the device. \"Humidity\" and \"Pressure\" expressions in the ID indicate the labels. The \"V\" expression in the label indicates the value of the label. The expression \"T\" indicates the time information when the data was sent. The publisher may not send this time information. Structure of Publisher Unit Publishers are the units that broadcast messages and transmit the mes-sage they want to publish to the broker unit, along with the topical information. Mikrodev Client transmits the message to subscriber units that are members of the relevant topic. Figure 3: Structure of Mikrodev Client for Publishing Data Payload structures that transmitted to subscriber units by Mikrodev Client are as below. Example 1: { \"\": { \"LampCommand\": {\"V\": 1} } } Example 2: { \"434523\": { \"PanelCommand\": {\"V\": 0} } } In the payload structure in Example 1, Because of Device ID is not defined, it is specified as \"0\". \"LampCommand\": \"1\" information was sent to the device with {\"V\": 1} payload structure. The payload structure in Example 2 has been published with the identity information of the device. Component Text Content Label and channel parameter texts can be written on some components and functions. The following functions are defined on the component that provides to dis-play text information on screen. :CHNAME: shows the name of the channel where tag is located. :CHDESC: shows the \"Identification\" information on the channel where the tag is located. :CHSTATION: shows the “Station” information on the channel where the tag is located. :CHSERVERIP: shows the “Server IP” information on the channel where the tag is located. :TAGNAME: shows the “TagName” information. :TAGDESC: shows the “Description” information of tag. :TAGLOCATION: shows the “Location” information of tag. :TAGDESC function provides to display tag definition information on the component with the following method. A text value is entered in the \"Description\" parameter of the tag. The \"Run Function\" parameter is defined in the relevant object for the dy-namic page which is needed restricted access. The \"data1 = data2\" information changes the tag names starting with data 1 in the directed page to the tag named data2. The information used after the semicolon indicates the access numbers for the page to be redirected. Figure 1: Adding a Description for a Tag In order to display the description text,:TAGDESC function is written into the \"Text Content\" in the component \"Object Properties\". Figure 2: Assigning :TAGDESC Function to a Tag The created label is defined in the \"Label Text\" section under the \"Tags\" menu of the component. Figure 3: Assigning Label Tag Under Tags Menu of The Component According to the defined operations of :TAGDESC function, the \"Descrip-tion\" parameter of the label data appears on the component. Figure 4: Displaying Tag Description of Component Dynamic Page Instead of preparing multiple pages in the same format, we can create a reference page and show different tags on a single page. In the picture below, the references of the labels divided into two channels and to be interchanged can be listed as Phase1Voltage, Phase2Voltage, Phase3Voltage. Figure 1: Defined Tags and Channels Reference tags are assigned to the components within the reference page. Figure 2: Assigning The Tags to The Components on The Reference Page In the “Run Function” parameter, the “RegionA = RegionB” information replaces the tag names that start with “RegionA” in the redirected page, with the names of the tags that start with “RegionB”. Figure 3: Run Function Configuration for Desired Components When the Region A button is clicked, the pop-up page named Region is opened and the reference tag information defined on the components appears. Figure 4: Displaying The Pop-Up Page That Shows Run Function Configuration for Region A When the Region B button is clicked, a pop-up page named Regions is opened and the reference labels written in the \"Run Function\" parameter are replaced with the labels starting with the RegionB. Figure 5: Displaying The Pop-Up Page That Shows Run Function Configuration for Region B \"$ {Parent}\" function should be written into the \"Run Function\" parameter on the components that used in redirecting to different pages from the ref-erence page in order to maintain the dynamic structure when redirecting to different pages from the dynamic page. Figure 6: Configuration for \"Run Function\" for Dynamic Page Redirection Navigation Panel Created pages within the SCADA project can be displayed on the naviga-tion panel as pages or in folders. The area that is marked in red, shows the navigation panel. The panel size can be increased or decreased from the right side of the navigation panel. Figure 1: Navigation Panel In order to perform operations on the navigation panel, right click with the mouse and select the operation to be performed in the displayed window. Figure 2: Adding Folder in Navigation Panel To create a folder on the navigation panel, \"Add Folder\" is marked and the folder name is written on the screen that appears. In order to perform operations on the created folder, right click on the se-lected folder and select the desired action. Figure 3: Adding Page Link Into The Created Folder To move SCADA pages into the folder, right click on the folder and select “Add Pagelink”. The page to be added is selected in the appeared window. The name of the page can be defined with the \"Display Text\" parameter and the dynamic structure can be used with the \"Run Template Function\" parameter. Figure 4: Configuration for Page Link In figure 5, you can see The \"Page1.sca\" page which is added to the folder in the navigation panel. Figure 5: Displaying Added Page Link Navigation panel can be opened or closed within the window tab on the Client screen. Figure 6: Navigation Panel Display Option on ViewPLUS Client","keywords":""}]