(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{112:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(7),o=(n(0),n(117)),i={title:"Creating Constantly Increasing Counter Tag"},c={unversionedId:"ViewPLUS-SCADA-Creating-Constantly-Increasing-Counter-Tag",id:"ViewPLUS-SCADA-Creating-Constantly-Increasing-Counter-Tag",isDocsHomePage:!1,title:"Creating Constantly Increasing Counter Tag",description:"In some cases, it may be desirable that the trend of the tag value read from the field is continuously increasing (such as reading a counter). In such cases, when the data read from the field is contaminated because of device replacement, project update, and etc.; trends and counter total values may also get contaminated. To prevent this, a mechanism on SCADA can be configured in the following way.",source:"@site/docs/ViewPLUS-SCADA-Creating-Constantly-Increasing-Counter-Tag.md",slug:"/ViewPLUS-SCADA-Creating-Constantly-Increasing-Counter-Tag",permalink:"/docs/ViewPLUS-SCADA-Creating-Constantly-Increasing-Counter-Tag",editUrl:"https://github.com/mikrodev/Documentation/edit/master/documentation/docs/ViewPLUS-SCADA-Creating-Constantly-Increasing-Counter-Tag.md",version:"current",sidebar:"docs",previous:{title:"ViewPLUS SCADA Protocol Applications",permalink:"/docs/ViewPLUS-SCADA-Protocol-Applications"},next:{title:"Designing Fancy Tables For Map Views",permalink:"/docs/ViewPLUS-SCADA-Designing-Fancy-Tables-For-Map-Views"}},l=[],s={toc:l};function u(e){var t=e.components,i=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,i,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"In some cases, it may be desirable that the trend of the tag value read from the field is continuously increasing (such as reading a counter). In such cases, when the data read from the field is contaminated because of device replacement, project update, and etc.; trends and counter total values may also get contaminated. To prevent this, a mechanism on SCADA can be configured in the following way."),Object(o.b)("p",null,'We need 3 seperate tags to solve the problem. As an example we will create a "CounterTag" tag. In parallel we will create a "CounterTag_latest" tag under "Database Channel" and a "CounterTag_controller" tag under Macro channel to fix field-based distortions so that this tag can read the latest value logged in the database.'),Object(o.b)("center",null,Object(o.b)("p",null,Object(o.b)("img",{alt:"CreatingConstantlyIncreasingCounterTag-01",src:n(308).default}))),Object(o.b)("p",null,'We will use the following query in the tag settings to get the most recent value we have logged into the "CounterTag_latest" tag:'),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"select dataval from logs.lct_table where tag_id=2 \n")),Object(o.b)("p",null,'This query will read the last logged value of the "CounterTag" tag with tag ID "2"'),Object(o.b)("p",null,'Finally, we will add the control macro to the "CounterTag_controller" tag. The macro will be:'),Object(o.b)("center",null,Object(o.b)("p",null,Object(o.b)("img",{alt:"CreatingConstantlyIncreasingCounterTag-02",src:n(309).default}))),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"[v1=$4e0]\n[IF,v1,3]\n[$4=$6+0]\n[E]\n[v0=$4>$2]\n[IF,v0,3]\n[$2=$4+0]\n[E]\n[$4=$2+0]\n[E]\n")),Object(o.b)("p",null,"This macro consists of 3 main sections:"),Object(o.b)("p",null,'Lines numbered as "1"; reads the last logged value from the database when the server is running for the first time.'),Object(o.b)("p",null,'Lines numbered as "2"; sets the value to be the value on the field device if it is less than the last log value for any reason.'),Object(o.b)("p",null,'Lines numbered as "3"; is the part where macro continuously updates the control tag.'),Object(o.b)("p",null,'In order to prevent erroneous logs in addition to the structure created above, the "log only while increasing" option should be enabled in the tag logging settings.'))}u.isMDXComponent=!0},117:function(e,t,n){"use strict";n.d(t,"a",(function(){return g})),n.d(t,"b",(function(){return b}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),u=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},g=function(e){var t=u(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),g=u(n),p=a,b=g["".concat(i,".").concat(p)]||g[p]||d[p]||o;return n?r.a.createElement(b,c(c({ref:t},s),{},{components:n})):r.a.createElement(b,c({ref:t},s))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},308:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/CreatingConstantlyIncreasingCounterTag-01-ab8c9beb4054668e683513af836deac2.png"},309:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/CreatingConstantlyIncreasingCounterTag-02-2f8a5af76af0b5c41e85df495bfb5a35.png"}}]);